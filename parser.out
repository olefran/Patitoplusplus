Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> PROGRAM
Rule 1     empty -> <empty>
Rule 2     PROGRAM -> PROGRAMA ID DOTCOMA VARS FUNCTIONS MAIN
Rule 3     MAIN -> PRINCIPAL LPAREN RPAREN VARS BLOQUE
Rule 4     VARS -> VAR VAR_AUX
Rule 5     VARS -> empty
Rule 6     VAR_AUX -> TIPO IDS VAR_AUX
Rule 7     VAR_AUX -> empty
Rule 8     TIPO -> INT
Rule 9     TIPO -> FLOAT
Rule 10    TIPO -> CHAR
Rule 11    TIPO -> STRING
Rule 12    IDS -> ID ARRDIM DOTCOMA
Rule 13    IDS -> ID ARRDIM COMA IDS
Rule 14    ARRDIM -> LSTAPLE EXPRESION RSTAPLE
Rule 15    ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE
Rule 16    ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE
Rule 17    ARRDIM -> empty
Rule 18    FUNCTIONS -> FUNCTION FUNCTIONS
Rule 19    FUNCTIONS -> empty
Rule 20    FUNCTION -> FUNCION TIPO ID LPAREN PARAM RPAREN VARS BLOQUE
Rule 21    FUNCTION -> FUNCION VOID ID LPAREN PARAM RPAREN VARS BLOQUE
Rule 22    PARAM -> TIPO ID PARENTESIS PARAM_AUX
Rule 23    PARAM_AUX -> COMA PARAM
Rule 24    PARAM_AUX -> empty
Rule 25    PARENTESIS -> LSTAPLE RSTAPLE
Rule 26    PARENTESIS -> LSTAPLE RSTAPLE LSTAPLE RSTAPLE
Rule 27    PARENTESIS -> empty
Rule 28    BLOQUE -> LBRACKET ESTATUTOS RBRACKET
Rule 29    ESTATUTOS -> ESTATUTO ESTATUTOS
Rule 30    ESTATUTOS -> empty
Rule 31    ESTATUTO -> ASIGNACION DOTCOMA
Rule 32    ESTATUTO -> FUN DOTCOMA
Rule 33    ESTATUTO -> COND
Rule 34    ESTATUTO -> WRITE DOTCOMA
Rule 35    ESTATUTO -> READ DOTCOMA
Rule 36    ESTATUTO -> RETURN DOTCOMA
Rule 37    ASIGNACION -> ID ARRDIM EQUAL EXPRESION
Rule 38    ASIGNACION -> ID ARRDIM EQUAL CTE_ARR
Rule 39    EXPRESION -> SUBEXP AND SUBEXP
Rule 40    EXPRESION -> SUBEXP OR SUBEXP
Rule 41    EXPRESION -> SUBEXP
Rule 42    SUBEXP -> EXP
Rule 43    SUBEXP -> EXP COMPARACION EXP
Rule 44    COMPARACION -> MORE
Rule 45    COMPARACION -> LESS
Rule 46    COMPARACION -> COMPARE
Rule 47    COMPARACION -> DIFFERENT
Rule 48    COMPARACION -> MOREEQUAL
Rule 49    COMPARACION -> LESSEQUAL
Rule 50    EXP -> TERMINO
Rule 51    EXP -> TERMINO PLUS EXP
Rule 52    EXP -> TERMINO MINUS EXP
Rule 53    TERMINO -> FACTOR
Rule 54    TERMINO -> FACTOR MULT TERMINO
Rule 55    TERMINO -> FACTOR DIV TERMINO
Rule 56    TERMINO -> FACTOR MOD TERMINO
Rule 57    FACTOR -> LPAREN EXPRESION RPAREN
Rule 58    FACTOR -> PLUS CTE
Rule 59    FACTOR -> MINUS CTE
Rule 60    FACTOR -> NOT CTE
Rule 61    FACTOR -> CTE ARROP
Rule 62    FACTOR -> CTE
Rule 63    CTE -> CTE_I
Rule 64    CTE -> CTE_F
Rule 65    CTE -> CTE_CH
Rule 66    CTE -> CTE_STRING
Rule 67    CTE -> FUN
Rule 68    CTE -> ID ARRDIM
Rule 69    ARROP -> DET_ARR
Rule 70    ARROP -> TRANS_ARR
Rule 71    ARROP -> INV_ARR
Rule 72    FUN -> ID LPAREN FUN_AUX RPAREN
Rule 73    FUN_AUX -> EXPRESION COMA FUN_AUX
Rule 74    FUN_AUX -> EXPRESION
Rule 75    FUN_AUX -> empty
Rule 76    COND -> IF
Rule 77    COND -> FOR
Rule 78    COND -> WHILE
Rule 79    IF -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX
Rule 80    IF -> SI LPAREN EXPRESION RPAREN ENTONCES COND
Rule 81    IF_AUX -> SINO BLOQUE
Rule 82    IF_AUX -> empty
Rule 83    WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE
Rule 84    WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX COND
Rule 85    WHILE_AUX -> HAZ
Rule 86    WHILE_AUX -> empty
Rule 87    FOR -> DESDE ASIGNACION HASTA EXPRESION HACER BLOQUE
Rule 88    FOR -> DESDE ASIGNACION HASTA EXPRESION HACER COND
Rule 89    WRITE -> ESCRIBE LPAREN WRITE_AUX RPAREN
Rule 90    WRITE_AUX -> EXPRESION WRITE_AUXSUB
Rule 91    WRITE_AUXSUB -> COMA WRITE_AUX
Rule 92    WRITE_AUXSUB -> empty
Rule 93    READ -> LEE LPAREN READ_AUX RPAREN
Rule 94    READ_AUX -> ID ARRDIM READ_AUXSUB
Rule 95    READ_AUXSUB -> COMA READ_AUX
Rule 96    READ_AUXSUB -> empty
Rule 97    RETURN -> REGRESA LPAREN EXPRESION RPAREN
Rule 98    RETURN -> REGRESA LPAREN NULL RPAREN
Rule 99    CTE_ARR -> LBRACKET CTE_ARR_AUX RBRACKET
Rule 100   CTE_ARR -> LBRACKET CTE_ARR_AUX2 RBRACKET
Rule 101   CTE_ARR_AUX -> CTE
Rule 102   CTE_ARR_AUX -> CTE_ARR_AUXSUB
Rule 103   CTE_ARR_AUXSUB -> COMA CTE_ARR_AUX
Rule 104   CTE_ARR_AUXSUB -> empty
Rule 105   CTE_ARR_AUX2 -> LBRACKET CTE_ARR_AUX RBRACKET CTE_ARR_AUX2SUB
Rule 106   CTE_ARR_AUX2SUB -> COMA CTE_ARR_AUX2
Rule 107   CTE_ARR_AUX2SUB -> empty

Terminals, with rules where they appear

AND                  : 39
CHAR                 : 10
COMA                 : 13 16 23 73 91 95 103 106
COMMENT              : 
COMPARE              : 46
CTE_CH               : 65
CTE_F                : 64
CTE_I                : 63
CTE_STRING           : 66
DESDE                : 87 88
DET_ARR              : 69
DIFFERENT            : 47
DIV                  : 55
DOTCOMA              : 2 12 31 32 34 35 36
ENTONCES             : 79 80
EQUAL                : 37 38
ESCRIBE              : 89
FLOAT                : 9
FUNCION              : 20 21
HACER                : 87 88
HASTA                : 87 88
HAZ                  : 85
ID                   : 2 12 13 20 21 22 37 38 68 72 94
INT                  : 8
INV_ARR              : 71
LBRACKET             : 28 99 100 105
LEE                  : 93
LESS                 : 45
LESSEQUAL            : 49
LPAREN               : 3 20 21 57 72 79 80 83 84 89 93 97 98
LSTAPLE              : 14 15 15 16 25 26 26
MIENTRAS             : 83 84
MINUS                : 52 59
MOD                  : 56
MORE                 : 44
MOREEQUAL            : 48
MULT                 : 54
NOT                  : 60
NULL                 : 98
OR                   : 40
PLUS                 : 51 58
PRINCIPAL            : 3
PROGRAMA             : 2
RBRACKET             : 28 99 100 105
REGRESA              : 97 98
RPAREN               : 3 20 21 57 72 79 80 83 84 89 93 97 98
RSTAPLE              : 14 15 15 16 25 26 26
SI                   : 79 80
SINO                 : 81
STRING               : 11
TRANS_ARR            : 70
VAR                  : 4
VOID                 : 21
error                : 

Nonterminals, with rules where they appear

ARRDIM               : 12 13 37 38 68 94
ARROP                : 61
ASIGNACION           : 31 87 88
BLOQUE               : 3 20 21 79 81 83 87
COMPARACION          : 43
COND                 : 33 80 84 88
CTE                  : 58 59 60 61 62 101
CTE_ARR              : 38
CTE_ARR_AUX          : 99 103 105
CTE_ARR_AUX2         : 100 106
CTE_ARR_AUX2SUB      : 105
CTE_ARR_AUXSUB       : 102
ESTATUTO             : 29
ESTATUTOS            : 28 29
EXP                  : 42 43 43 51 52
EXPRESION            : 14 15 15 16 16 37 57 73 74 79 80 83 84 87 88 90 97
FACTOR               : 53 54 55 56
FOR                  : 77
FUN                  : 32 67
FUNCTION             : 18
FUNCTIONS            : 2 18
FUN_AUX              : 72 73
IDS                  : 6 13
IF                   : 76
IF_AUX               : 79
MAIN                 : 2
PARAM                : 20 21 23
PARAM_AUX            : 22
PARENTESIS           : 22
PROGRAM              : 0
READ                 : 35
READ_AUX             : 93 95
READ_AUXSUB          : 94
RETURN               : 36
SUBEXP               : 39 39 40 40 41
TERMINO              : 50 51 52 54 55 56
TIPO                 : 6 20 22
VARS                 : 2 3 20 21
VAR_AUX              : 4 6
WHILE                : 78
WHILE_AUX            : 83 84
WRITE                : 34
WRITE_AUX            : 89 91
WRITE_AUXSUB         : 90
empty                : 5 7 17 19 24 27 30 75 82 86 92 96 104 107

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (2) PROGRAM -> . PROGRAMA ID DOTCOMA VARS FUNCTIONS MAIN

    PROGRAMA        shift and go to state 2

    PROGRAM                        shift and go to state 1

state 1

    (0) S' -> PROGRAM .



state 2

    (2) PROGRAM -> PROGRAMA . ID DOTCOMA VARS FUNCTIONS MAIN

    ID              shift and go to state 3


state 3

    (2) PROGRAM -> PROGRAMA ID . DOTCOMA VARS FUNCTIONS MAIN

    DOTCOMA         shift and go to state 4


state 4

    (2) PROGRAM -> PROGRAMA ID DOTCOMA . VARS FUNCTIONS MAIN
    (4) VARS -> . VAR VAR_AUX
    (5) VARS -> . empty
    (1) empty -> .

    VAR             shift and go to state 6
    FUNCION         reduce using rule 1 (empty -> .)
    PRINCIPAL       reduce using rule 1 (empty -> .)

    VARS                           shift and go to state 5
    empty                          shift and go to state 7

state 5

    (2) PROGRAM -> PROGRAMA ID DOTCOMA VARS . FUNCTIONS MAIN
    (18) FUNCTIONS -> . FUNCTION FUNCTIONS
    (19) FUNCTIONS -> . empty
    (20) FUNCTION -> . FUNCION TIPO ID LPAREN PARAM RPAREN VARS BLOQUE
    (21) FUNCTION -> . FUNCION VOID ID LPAREN PARAM RPAREN VARS BLOQUE
    (1) empty -> .

    FUNCION         shift and go to state 11
    PRINCIPAL       reduce using rule 1 (empty -> .)

    FUNCTIONS                      shift and go to state 8
    FUNCTION                       shift and go to state 9
    empty                          shift and go to state 10

state 6

    (4) VARS -> VAR . VAR_AUX
    (6) VAR_AUX -> . TIPO IDS VAR_AUX
    (7) VAR_AUX -> . empty
    (8) TIPO -> . INT
    (9) TIPO -> . FLOAT
    (10) TIPO -> . CHAR
    (11) TIPO -> . STRING
    (1) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    FUNCION         reduce using rule 1 (empty -> .)
    PRINCIPAL       reduce using rule 1 (empty -> .)
    LBRACKET        reduce using rule 1 (empty -> .)

    VAR_AUX                        shift and go to state 12
    TIPO                           shift and go to state 13
    empty                          shift and go to state 14

state 7

    (5) VARS -> empty .

    FUNCION         reduce using rule 5 (VARS -> empty .)
    PRINCIPAL       reduce using rule 5 (VARS -> empty .)
    LBRACKET        reduce using rule 5 (VARS -> empty .)


state 8

    (2) PROGRAM -> PROGRAMA ID DOTCOMA VARS FUNCTIONS . MAIN
    (3) MAIN -> . PRINCIPAL LPAREN RPAREN VARS BLOQUE

    PRINCIPAL       shift and go to state 20

    MAIN                           shift and go to state 19

state 9

    (18) FUNCTIONS -> FUNCTION . FUNCTIONS
    (18) FUNCTIONS -> . FUNCTION FUNCTIONS
    (19) FUNCTIONS -> . empty
    (20) FUNCTION -> . FUNCION TIPO ID LPAREN PARAM RPAREN VARS BLOQUE
    (21) FUNCTION -> . FUNCION VOID ID LPAREN PARAM RPAREN VARS BLOQUE
    (1) empty -> .

    FUNCION         shift and go to state 11
    PRINCIPAL       reduce using rule 1 (empty -> .)

    FUNCTION                       shift and go to state 9
    FUNCTIONS                      shift and go to state 21
    empty                          shift and go to state 10

state 10

    (19) FUNCTIONS -> empty .

    PRINCIPAL       reduce using rule 19 (FUNCTIONS -> empty .)


state 11

    (20) FUNCTION -> FUNCION . TIPO ID LPAREN PARAM RPAREN VARS BLOQUE
    (21) FUNCTION -> FUNCION . VOID ID LPAREN PARAM RPAREN VARS BLOQUE
    (8) TIPO -> . INT
    (9) TIPO -> . FLOAT
    (10) TIPO -> . CHAR
    (11) TIPO -> . STRING

    VOID            shift and go to state 23
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18

    TIPO                           shift and go to state 22

state 12

    (4) VARS -> VAR VAR_AUX .

    FUNCION         reduce using rule 4 (VARS -> VAR VAR_AUX .)
    PRINCIPAL       reduce using rule 4 (VARS -> VAR VAR_AUX .)
    LBRACKET        reduce using rule 4 (VARS -> VAR VAR_AUX .)


state 13

    (6) VAR_AUX -> TIPO . IDS VAR_AUX
    (12) IDS -> . ID ARRDIM DOTCOMA
    (13) IDS -> . ID ARRDIM COMA IDS

    ID              shift and go to state 25

    IDS                            shift and go to state 24

state 14

    (7) VAR_AUX -> empty .

    FUNCION         reduce using rule 7 (VAR_AUX -> empty .)
    PRINCIPAL       reduce using rule 7 (VAR_AUX -> empty .)
    LBRACKET        reduce using rule 7 (VAR_AUX -> empty .)


state 15

    (8) TIPO -> INT .

    ID              reduce using rule 8 (TIPO -> INT .)


state 16

    (9) TIPO -> FLOAT .

    ID              reduce using rule 9 (TIPO -> FLOAT .)


state 17

    (10) TIPO -> CHAR .

    ID              reduce using rule 10 (TIPO -> CHAR .)


state 18

    (11) TIPO -> STRING .

    ID              reduce using rule 11 (TIPO -> STRING .)


state 19

    (2) PROGRAM -> PROGRAMA ID DOTCOMA VARS FUNCTIONS MAIN .

    $end            reduce using rule 2 (PROGRAM -> PROGRAMA ID DOTCOMA VARS FUNCTIONS MAIN .)


state 20

    (3) MAIN -> PRINCIPAL . LPAREN RPAREN VARS BLOQUE

    LPAREN          shift and go to state 26


state 21

    (18) FUNCTIONS -> FUNCTION FUNCTIONS .

    PRINCIPAL       reduce using rule 18 (FUNCTIONS -> FUNCTION FUNCTIONS .)


state 22

    (20) FUNCTION -> FUNCION TIPO . ID LPAREN PARAM RPAREN VARS BLOQUE

    ID              shift and go to state 27


state 23

    (21) FUNCTION -> FUNCION VOID . ID LPAREN PARAM RPAREN VARS BLOQUE

    ID              shift and go to state 28


state 24

    (6) VAR_AUX -> TIPO IDS . VAR_AUX
    (6) VAR_AUX -> . TIPO IDS VAR_AUX
    (7) VAR_AUX -> . empty
    (8) TIPO -> . INT
    (9) TIPO -> . FLOAT
    (10) TIPO -> . CHAR
    (11) TIPO -> . STRING
    (1) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    FUNCION         reduce using rule 1 (empty -> .)
    PRINCIPAL       reduce using rule 1 (empty -> .)
    LBRACKET        reduce using rule 1 (empty -> .)

    TIPO                           shift and go to state 13
    VAR_AUX                        shift and go to state 29
    empty                          shift and go to state 14

state 25

    (12) IDS -> ID . ARRDIM DOTCOMA
    (13) IDS -> ID . ARRDIM COMA IDS
    (14) ARRDIM -> . LSTAPLE EXPRESION RSTAPLE
    (15) ARRDIM -> . LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE
    (16) ARRDIM -> . LSTAPLE EXPRESION COMA EXPRESION RSTAPLE
    (17) ARRDIM -> . empty
    (1) empty -> .

    LSTAPLE         shift and go to state 31
    DOTCOMA         reduce using rule 1 (empty -> .)
    COMA            reduce using rule 1 (empty -> .)

    ARRDIM                         shift and go to state 30
    empty                          shift and go to state 32

state 26

    (3) MAIN -> PRINCIPAL LPAREN . RPAREN VARS BLOQUE

    RPAREN          shift and go to state 33


state 27

    (20) FUNCTION -> FUNCION TIPO ID . LPAREN PARAM RPAREN VARS BLOQUE

    LPAREN          shift and go to state 34


state 28

    (21) FUNCTION -> FUNCION VOID ID . LPAREN PARAM RPAREN VARS BLOQUE

    LPAREN          shift and go to state 35


state 29

    (6) VAR_AUX -> TIPO IDS VAR_AUX .

    FUNCION         reduce using rule 6 (VAR_AUX -> TIPO IDS VAR_AUX .)
    PRINCIPAL       reduce using rule 6 (VAR_AUX -> TIPO IDS VAR_AUX .)
    LBRACKET        reduce using rule 6 (VAR_AUX -> TIPO IDS VAR_AUX .)


state 30

    (12) IDS -> ID ARRDIM . DOTCOMA
    (13) IDS -> ID ARRDIM . COMA IDS

    DOTCOMA         shift and go to state 36
    COMA            shift and go to state 37


state 31

    (14) ARRDIM -> LSTAPLE . EXPRESION RSTAPLE
    (15) ARRDIM -> LSTAPLE . EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE
    (16) ARRDIM -> LSTAPLE . EXPRESION COMA EXPRESION RSTAPLE
    (39) EXPRESION -> . SUBEXP AND SUBEXP
    (40) EXPRESION -> . SUBEXP OR SUBEXP
    (41) EXPRESION -> . SUBEXP
    (42) SUBEXP -> . EXP
    (43) SUBEXP -> . EXP COMPARACION EXP
    (50) EXP -> . TERMINO
    (51) EXP -> . TERMINO PLUS EXP
    (52) EXP -> . TERMINO MINUS EXP
    (53) TERMINO -> . FACTOR
    (54) TERMINO -> . FACTOR MULT TERMINO
    (55) TERMINO -> . FACTOR DIV TERMINO
    (56) TERMINO -> . FACTOR MOD TERMINO
    (57) FACTOR -> . LPAREN EXPRESION RPAREN
    (58) FACTOR -> . PLUS CTE
    (59) FACTOR -> . MINUS CTE
    (60) FACTOR -> . NOT CTE
    (61) FACTOR -> . CTE ARROP
    (62) FACTOR -> . CTE
    (63) CTE -> . CTE_I
    (64) CTE -> . CTE_F
    (65) CTE -> . CTE_CH
    (66) CTE -> . CTE_STRING
    (67) CTE -> . FUN
    (68) CTE -> . ID ARRDIM
    (72) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 45
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    NOT             shift and go to state 47
    CTE_I           shift and go to state 48
    CTE_F           shift and go to state 49
    CTE_CH          shift and go to state 50
    CTE_STRING      shift and go to state 51
    ID              shift and go to state 53

    EXPRESION                      shift and go to state 38
    SUBEXP                         shift and go to state 39
    EXP                            shift and go to state 40
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 44
    CTE                            shift and go to state 46
    FUN                            shift and go to state 52

state 32

    (17) ARRDIM -> empty .

    DOTCOMA         reduce using rule 17 (ARRDIM -> empty .)
    COMA            reduce using rule 17 (ARRDIM -> empty .)
    DET_ARR         reduce using rule 17 (ARRDIM -> empty .)
    TRANS_ARR       reduce using rule 17 (ARRDIM -> empty .)
    INV_ARR         reduce using rule 17 (ARRDIM -> empty .)
    MULT            reduce using rule 17 (ARRDIM -> empty .)
    DIV             reduce using rule 17 (ARRDIM -> empty .)
    MOD             reduce using rule 17 (ARRDIM -> empty .)
    PLUS            reduce using rule 17 (ARRDIM -> empty .)
    MINUS           reduce using rule 17 (ARRDIM -> empty .)
    MORE            reduce using rule 17 (ARRDIM -> empty .)
    LESS            reduce using rule 17 (ARRDIM -> empty .)
    COMPARE         reduce using rule 17 (ARRDIM -> empty .)
    DIFFERENT       reduce using rule 17 (ARRDIM -> empty .)
    MOREEQUAL       reduce using rule 17 (ARRDIM -> empty .)
    LESSEQUAL       reduce using rule 17 (ARRDIM -> empty .)
    AND             reduce using rule 17 (ARRDIM -> empty .)
    OR              reduce using rule 17 (ARRDIM -> empty .)
    RSTAPLE         reduce using rule 17 (ARRDIM -> empty .)
    RPAREN          reduce using rule 17 (ARRDIM -> empty .)
    HASTA           reduce using rule 17 (ARRDIM -> empty .)
    HACER           reduce using rule 17 (ARRDIM -> empty .)
    RBRACKET        reduce using rule 17 (ARRDIM -> empty .)
    EQUAL           reduce using rule 17 (ARRDIM -> empty .)


state 33

    (3) MAIN -> PRINCIPAL LPAREN RPAREN . VARS BLOQUE
    (4) VARS -> . VAR VAR_AUX
    (5) VARS -> . empty
    (1) empty -> .

    VAR             shift and go to state 6
    LBRACKET        reduce using rule 1 (empty -> .)

    VARS                           shift and go to state 54
    empty                          shift and go to state 7

state 34

    (20) FUNCTION -> FUNCION TIPO ID LPAREN . PARAM RPAREN VARS BLOQUE
    (22) PARAM -> . TIPO ID PARENTESIS PARAM_AUX
    (8) TIPO -> . INT
    (9) TIPO -> . FLOAT
    (10) TIPO -> . CHAR
    (11) TIPO -> . STRING

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18

    TIPO                           shift and go to state 55
    PARAM                          shift and go to state 56

state 35

    (21) FUNCTION -> FUNCION VOID ID LPAREN . PARAM RPAREN VARS BLOQUE
    (22) PARAM -> . TIPO ID PARENTESIS PARAM_AUX
    (8) TIPO -> . INT
    (9) TIPO -> . FLOAT
    (10) TIPO -> . CHAR
    (11) TIPO -> . STRING

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18

    PARAM                          shift and go to state 57
    TIPO                           shift and go to state 55

state 36

    (12) IDS -> ID ARRDIM DOTCOMA .

    INT             reduce using rule 12 (IDS -> ID ARRDIM DOTCOMA .)
    FLOAT           reduce using rule 12 (IDS -> ID ARRDIM DOTCOMA .)
    CHAR            reduce using rule 12 (IDS -> ID ARRDIM DOTCOMA .)
    STRING          reduce using rule 12 (IDS -> ID ARRDIM DOTCOMA .)
    FUNCION         reduce using rule 12 (IDS -> ID ARRDIM DOTCOMA .)
    PRINCIPAL       reduce using rule 12 (IDS -> ID ARRDIM DOTCOMA .)
    LBRACKET        reduce using rule 12 (IDS -> ID ARRDIM DOTCOMA .)


state 37

    (13) IDS -> ID ARRDIM COMA . IDS
    (12) IDS -> . ID ARRDIM DOTCOMA
    (13) IDS -> . ID ARRDIM COMA IDS

    ID              shift and go to state 25

    IDS                            shift and go to state 58

state 38

    (14) ARRDIM -> LSTAPLE EXPRESION . RSTAPLE
    (15) ARRDIM -> LSTAPLE EXPRESION . RSTAPLE LSTAPLE EXPRESION RSTAPLE
    (16) ARRDIM -> LSTAPLE EXPRESION . COMA EXPRESION RSTAPLE

    RSTAPLE         shift and go to state 59
    COMA            shift and go to state 60


state 39

    (39) EXPRESION -> SUBEXP . AND SUBEXP
    (40) EXPRESION -> SUBEXP . OR SUBEXP
    (41) EXPRESION -> SUBEXP .

    AND             shift and go to state 61
    OR              shift and go to state 62
    RSTAPLE         reduce using rule 41 (EXPRESION -> SUBEXP .)
    COMA            reduce using rule 41 (EXPRESION -> SUBEXP .)
    RPAREN          reduce using rule 41 (EXPRESION -> SUBEXP .)
    DOTCOMA         reduce using rule 41 (EXPRESION -> SUBEXP .)
    HASTA           reduce using rule 41 (EXPRESION -> SUBEXP .)
    HACER           reduce using rule 41 (EXPRESION -> SUBEXP .)


state 40

    (42) SUBEXP -> EXP .
    (43) SUBEXP -> EXP . COMPARACION EXP
    (44) COMPARACION -> . MORE
    (45) COMPARACION -> . LESS
    (46) COMPARACION -> . COMPARE
    (47) COMPARACION -> . DIFFERENT
    (48) COMPARACION -> . MOREEQUAL
    (49) COMPARACION -> . LESSEQUAL

    AND             reduce using rule 42 (SUBEXP -> EXP .)
    OR              reduce using rule 42 (SUBEXP -> EXP .)
    RSTAPLE         reduce using rule 42 (SUBEXP -> EXP .)
    COMA            reduce using rule 42 (SUBEXP -> EXP .)
    RPAREN          reduce using rule 42 (SUBEXP -> EXP .)
    DOTCOMA         reduce using rule 42 (SUBEXP -> EXP .)
    HASTA           reduce using rule 42 (SUBEXP -> EXP .)
    HACER           reduce using rule 42 (SUBEXP -> EXP .)
    MORE            shift and go to state 64
    LESS            shift and go to state 65
    COMPARE         shift and go to state 66
    DIFFERENT       shift and go to state 67
    MOREEQUAL       shift and go to state 68
    LESSEQUAL       shift and go to state 69

    COMPARACION                    shift and go to state 63

state 41

    (50) EXP -> TERMINO .
    (51) EXP -> TERMINO . PLUS EXP
    (52) EXP -> TERMINO . MINUS EXP

    MORE            reduce using rule 50 (EXP -> TERMINO .)
    LESS            reduce using rule 50 (EXP -> TERMINO .)
    COMPARE         reduce using rule 50 (EXP -> TERMINO .)
    DIFFERENT       reduce using rule 50 (EXP -> TERMINO .)
    MOREEQUAL       reduce using rule 50 (EXP -> TERMINO .)
    LESSEQUAL       reduce using rule 50 (EXP -> TERMINO .)
    AND             reduce using rule 50 (EXP -> TERMINO .)
    OR              reduce using rule 50 (EXP -> TERMINO .)
    RSTAPLE         reduce using rule 50 (EXP -> TERMINO .)
    COMA            reduce using rule 50 (EXP -> TERMINO .)
    RPAREN          reduce using rule 50 (EXP -> TERMINO .)
    DOTCOMA         reduce using rule 50 (EXP -> TERMINO .)
    HASTA           reduce using rule 50 (EXP -> TERMINO .)
    HACER           reduce using rule 50 (EXP -> TERMINO .)
    PLUS            shift and go to state 70
    MINUS           shift and go to state 71


state 42

    (58) FACTOR -> PLUS . CTE
    (63) CTE -> . CTE_I
    (64) CTE -> . CTE_F
    (65) CTE -> . CTE_CH
    (66) CTE -> . CTE_STRING
    (67) CTE -> . FUN
    (68) CTE -> . ID ARRDIM
    (72) FUN -> . ID LPAREN FUN_AUX RPAREN

    CTE_I           shift and go to state 48
    CTE_F           shift and go to state 49
    CTE_CH          shift and go to state 50
    CTE_STRING      shift and go to state 51
    ID              shift and go to state 53

    CTE                            shift and go to state 72
    FUN                            shift and go to state 52

state 43

    (59) FACTOR -> MINUS . CTE
    (63) CTE -> . CTE_I
    (64) CTE -> . CTE_F
    (65) CTE -> . CTE_CH
    (66) CTE -> . CTE_STRING
    (67) CTE -> . FUN
    (68) CTE -> . ID ARRDIM
    (72) FUN -> . ID LPAREN FUN_AUX RPAREN

    CTE_I           shift and go to state 48
    CTE_F           shift and go to state 49
    CTE_CH          shift and go to state 50
    CTE_STRING      shift and go to state 51
    ID              shift and go to state 53

    CTE                            shift and go to state 73
    FUN                            shift and go to state 52

state 44

    (53) TERMINO -> FACTOR .
    (54) TERMINO -> FACTOR . MULT TERMINO
    (55) TERMINO -> FACTOR . DIV TERMINO
    (56) TERMINO -> FACTOR . MOD TERMINO

    PLUS            reduce using rule 53 (TERMINO -> FACTOR .)
    MINUS           reduce using rule 53 (TERMINO -> FACTOR .)
    MORE            reduce using rule 53 (TERMINO -> FACTOR .)
    LESS            reduce using rule 53 (TERMINO -> FACTOR .)
    COMPARE         reduce using rule 53 (TERMINO -> FACTOR .)
    DIFFERENT       reduce using rule 53 (TERMINO -> FACTOR .)
    MOREEQUAL       reduce using rule 53 (TERMINO -> FACTOR .)
    LESSEQUAL       reduce using rule 53 (TERMINO -> FACTOR .)
    AND             reduce using rule 53 (TERMINO -> FACTOR .)
    OR              reduce using rule 53 (TERMINO -> FACTOR .)
    RSTAPLE         reduce using rule 53 (TERMINO -> FACTOR .)
    COMA            reduce using rule 53 (TERMINO -> FACTOR .)
    RPAREN          reduce using rule 53 (TERMINO -> FACTOR .)
    DOTCOMA         reduce using rule 53 (TERMINO -> FACTOR .)
    HASTA           reduce using rule 53 (TERMINO -> FACTOR .)
    HACER           reduce using rule 53 (TERMINO -> FACTOR .)
    MULT            shift and go to state 74
    DIV             shift and go to state 75
    MOD             shift and go to state 76


state 45

    (57) FACTOR -> LPAREN . EXPRESION RPAREN
    (39) EXPRESION -> . SUBEXP AND SUBEXP
    (40) EXPRESION -> . SUBEXP OR SUBEXP
    (41) EXPRESION -> . SUBEXP
    (42) SUBEXP -> . EXP
    (43) SUBEXP -> . EXP COMPARACION EXP
    (50) EXP -> . TERMINO
    (51) EXP -> . TERMINO PLUS EXP
    (52) EXP -> . TERMINO MINUS EXP
    (53) TERMINO -> . FACTOR
    (54) TERMINO -> . FACTOR MULT TERMINO
    (55) TERMINO -> . FACTOR DIV TERMINO
    (56) TERMINO -> . FACTOR MOD TERMINO
    (57) FACTOR -> . LPAREN EXPRESION RPAREN
    (58) FACTOR -> . PLUS CTE
    (59) FACTOR -> . MINUS CTE
    (60) FACTOR -> . NOT CTE
    (61) FACTOR -> . CTE ARROP
    (62) FACTOR -> . CTE
    (63) CTE -> . CTE_I
    (64) CTE -> . CTE_F
    (65) CTE -> . CTE_CH
    (66) CTE -> . CTE_STRING
    (67) CTE -> . FUN
    (68) CTE -> . ID ARRDIM
    (72) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 45
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    NOT             shift and go to state 47
    CTE_I           shift and go to state 48
    CTE_F           shift and go to state 49
    CTE_CH          shift and go to state 50
    CTE_STRING      shift and go to state 51
    ID              shift and go to state 53

    EXPRESION                      shift and go to state 77
    SUBEXP                         shift and go to state 39
    EXP                            shift and go to state 40
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 44
    CTE                            shift and go to state 46
    FUN                            shift and go to state 52

state 46

    (61) FACTOR -> CTE . ARROP
    (62) FACTOR -> CTE .
    (69) ARROP -> . DET_ARR
    (70) ARROP -> . TRANS_ARR
    (71) ARROP -> . INV_ARR

    MULT            reduce using rule 62 (FACTOR -> CTE .)
    DIV             reduce using rule 62 (FACTOR -> CTE .)
    MOD             reduce using rule 62 (FACTOR -> CTE .)
    PLUS            reduce using rule 62 (FACTOR -> CTE .)
    MINUS           reduce using rule 62 (FACTOR -> CTE .)
    MORE            reduce using rule 62 (FACTOR -> CTE .)
    LESS            reduce using rule 62 (FACTOR -> CTE .)
    COMPARE         reduce using rule 62 (FACTOR -> CTE .)
    DIFFERENT       reduce using rule 62 (FACTOR -> CTE .)
    MOREEQUAL       reduce using rule 62 (FACTOR -> CTE .)
    LESSEQUAL       reduce using rule 62 (FACTOR -> CTE .)
    AND             reduce using rule 62 (FACTOR -> CTE .)
    OR              reduce using rule 62 (FACTOR -> CTE .)
    RSTAPLE         reduce using rule 62 (FACTOR -> CTE .)
    COMA            reduce using rule 62 (FACTOR -> CTE .)
    RPAREN          reduce using rule 62 (FACTOR -> CTE .)
    DOTCOMA         reduce using rule 62 (FACTOR -> CTE .)
    HASTA           reduce using rule 62 (FACTOR -> CTE .)
    HACER           reduce using rule 62 (FACTOR -> CTE .)
    DET_ARR         shift and go to state 79
    TRANS_ARR       shift and go to state 80
    INV_ARR         shift and go to state 81

    ARROP                          shift and go to state 78

state 47

    (60) FACTOR -> NOT . CTE
    (63) CTE -> . CTE_I
    (64) CTE -> . CTE_F
    (65) CTE -> . CTE_CH
    (66) CTE -> . CTE_STRING
    (67) CTE -> . FUN
    (68) CTE -> . ID ARRDIM
    (72) FUN -> . ID LPAREN FUN_AUX RPAREN

    CTE_I           shift and go to state 48
    CTE_F           shift and go to state 49
    CTE_CH          shift and go to state 50
    CTE_STRING      shift and go to state 51
    ID              shift and go to state 53

    CTE                            shift and go to state 82
    FUN                            shift and go to state 52

state 48

    (63) CTE -> CTE_I .

    DET_ARR         reduce using rule 63 (CTE -> CTE_I .)
    TRANS_ARR       reduce using rule 63 (CTE -> CTE_I .)
    INV_ARR         reduce using rule 63 (CTE -> CTE_I .)
    MULT            reduce using rule 63 (CTE -> CTE_I .)
    DIV             reduce using rule 63 (CTE -> CTE_I .)
    MOD             reduce using rule 63 (CTE -> CTE_I .)
    PLUS            reduce using rule 63 (CTE -> CTE_I .)
    MINUS           reduce using rule 63 (CTE -> CTE_I .)
    MORE            reduce using rule 63 (CTE -> CTE_I .)
    LESS            reduce using rule 63 (CTE -> CTE_I .)
    COMPARE         reduce using rule 63 (CTE -> CTE_I .)
    DIFFERENT       reduce using rule 63 (CTE -> CTE_I .)
    MOREEQUAL       reduce using rule 63 (CTE -> CTE_I .)
    LESSEQUAL       reduce using rule 63 (CTE -> CTE_I .)
    AND             reduce using rule 63 (CTE -> CTE_I .)
    OR              reduce using rule 63 (CTE -> CTE_I .)
    RSTAPLE         reduce using rule 63 (CTE -> CTE_I .)
    COMA            reduce using rule 63 (CTE -> CTE_I .)
    RPAREN          reduce using rule 63 (CTE -> CTE_I .)
    DOTCOMA         reduce using rule 63 (CTE -> CTE_I .)
    HASTA           reduce using rule 63 (CTE -> CTE_I .)
    HACER           reduce using rule 63 (CTE -> CTE_I .)
    RBRACKET        reduce using rule 63 (CTE -> CTE_I .)


state 49

    (64) CTE -> CTE_F .

    DET_ARR         reduce using rule 64 (CTE -> CTE_F .)
    TRANS_ARR       reduce using rule 64 (CTE -> CTE_F .)
    INV_ARR         reduce using rule 64 (CTE -> CTE_F .)
    MULT            reduce using rule 64 (CTE -> CTE_F .)
    DIV             reduce using rule 64 (CTE -> CTE_F .)
    MOD             reduce using rule 64 (CTE -> CTE_F .)
    PLUS            reduce using rule 64 (CTE -> CTE_F .)
    MINUS           reduce using rule 64 (CTE -> CTE_F .)
    MORE            reduce using rule 64 (CTE -> CTE_F .)
    LESS            reduce using rule 64 (CTE -> CTE_F .)
    COMPARE         reduce using rule 64 (CTE -> CTE_F .)
    DIFFERENT       reduce using rule 64 (CTE -> CTE_F .)
    MOREEQUAL       reduce using rule 64 (CTE -> CTE_F .)
    LESSEQUAL       reduce using rule 64 (CTE -> CTE_F .)
    AND             reduce using rule 64 (CTE -> CTE_F .)
    OR              reduce using rule 64 (CTE -> CTE_F .)
    RSTAPLE         reduce using rule 64 (CTE -> CTE_F .)
    COMA            reduce using rule 64 (CTE -> CTE_F .)
    RPAREN          reduce using rule 64 (CTE -> CTE_F .)
    DOTCOMA         reduce using rule 64 (CTE -> CTE_F .)
    HASTA           reduce using rule 64 (CTE -> CTE_F .)
    HACER           reduce using rule 64 (CTE -> CTE_F .)
    RBRACKET        reduce using rule 64 (CTE -> CTE_F .)


state 50

    (65) CTE -> CTE_CH .

    DET_ARR         reduce using rule 65 (CTE -> CTE_CH .)
    TRANS_ARR       reduce using rule 65 (CTE -> CTE_CH .)
    INV_ARR         reduce using rule 65 (CTE -> CTE_CH .)
    MULT            reduce using rule 65 (CTE -> CTE_CH .)
    DIV             reduce using rule 65 (CTE -> CTE_CH .)
    MOD             reduce using rule 65 (CTE -> CTE_CH .)
    PLUS            reduce using rule 65 (CTE -> CTE_CH .)
    MINUS           reduce using rule 65 (CTE -> CTE_CH .)
    MORE            reduce using rule 65 (CTE -> CTE_CH .)
    LESS            reduce using rule 65 (CTE -> CTE_CH .)
    COMPARE         reduce using rule 65 (CTE -> CTE_CH .)
    DIFFERENT       reduce using rule 65 (CTE -> CTE_CH .)
    MOREEQUAL       reduce using rule 65 (CTE -> CTE_CH .)
    LESSEQUAL       reduce using rule 65 (CTE -> CTE_CH .)
    AND             reduce using rule 65 (CTE -> CTE_CH .)
    OR              reduce using rule 65 (CTE -> CTE_CH .)
    RSTAPLE         reduce using rule 65 (CTE -> CTE_CH .)
    COMA            reduce using rule 65 (CTE -> CTE_CH .)
    RPAREN          reduce using rule 65 (CTE -> CTE_CH .)
    DOTCOMA         reduce using rule 65 (CTE -> CTE_CH .)
    HASTA           reduce using rule 65 (CTE -> CTE_CH .)
    HACER           reduce using rule 65 (CTE -> CTE_CH .)
    RBRACKET        reduce using rule 65 (CTE -> CTE_CH .)


state 51

    (66) CTE -> CTE_STRING .

    DET_ARR         reduce using rule 66 (CTE -> CTE_STRING .)
    TRANS_ARR       reduce using rule 66 (CTE -> CTE_STRING .)
    INV_ARR         reduce using rule 66 (CTE -> CTE_STRING .)
    MULT            reduce using rule 66 (CTE -> CTE_STRING .)
    DIV             reduce using rule 66 (CTE -> CTE_STRING .)
    MOD             reduce using rule 66 (CTE -> CTE_STRING .)
    PLUS            reduce using rule 66 (CTE -> CTE_STRING .)
    MINUS           reduce using rule 66 (CTE -> CTE_STRING .)
    MORE            reduce using rule 66 (CTE -> CTE_STRING .)
    LESS            reduce using rule 66 (CTE -> CTE_STRING .)
    COMPARE         reduce using rule 66 (CTE -> CTE_STRING .)
    DIFFERENT       reduce using rule 66 (CTE -> CTE_STRING .)
    MOREEQUAL       reduce using rule 66 (CTE -> CTE_STRING .)
    LESSEQUAL       reduce using rule 66 (CTE -> CTE_STRING .)
    AND             reduce using rule 66 (CTE -> CTE_STRING .)
    OR              reduce using rule 66 (CTE -> CTE_STRING .)
    RSTAPLE         reduce using rule 66 (CTE -> CTE_STRING .)
    COMA            reduce using rule 66 (CTE -> CTE_STRING .)
    RPAREN          reduce using rule 66 (CTE -> CTE_STRING .)
    DOTCOMA         reduce using rule 66 (CTE -> CTE_STRING .)
    HASTA           reduce using rule 66 (CTE -> CTE_STRING .)
    HACER           reduce using rule 66 (CTE -> CTE_STRING .)
    RBRACKET        reduce using rule 66 (CTE -> CTE_STRING .)


state 52

    (67) CTE -> FUN .

    DET_ARR         reduce using rule 67 (CTE -> FUN .)
    TRANS_ARR       reduce using rule 67 (CTE -> FUN .)
    INV_ARR         reduce using rule 67 (CTE -> FUN .)
    MULT            reduce using rule 67 (CTE -> FUN .)
    DIV             reduce using rule 67 (CTE -> FUN .)
    MOD             reduce using rule 67 (CTE -> FUN .)
    PLUS            reduce using rule 67 (CTE -> FUN .)
    MINUS           reduce using rule 67 (CTE -> FUN .)
    MORE            reduce using rule 67 (CTE -> FUN .)
    LESS            reduce using rule 67 (CTE -> FUN .)
    COMPARE         reduce using rule 67 (CTE -> FUN .)
    DIFFERENT       reduce using rule 67 (CTE -> FUN .)
    MOREEQUAL       reduce using rule 67 (CTE -> FUN .)
    LESSEQUAL       reduce using rule 67 (CTE -> FUN .)
    AND             reduce using rule 67 (CTE -> FUN .)
    OR              reduce using rule 67 (CTE -> FUN .)
    RSTAPLE         reduce using rule 67 (CTE -> FUN .)
    COMA            reduce using rule 67 (CTE -> FUN .)
    RPAREN          reduce using rule 67 (CTE -> FUN .)
    DOTCOMA         reduce using rule 67 (CTE -> FUN .)
    HASTA           reduce using rule 67 (CTE -> FUN .)
    HACER           reduce using rule 67 (CTE -> FUN .)
    RBRACKET        reduce using rule 67 (CTE -> FUN .)


state 53

    (68) CTE -> ID . ARRDIM
    (72) FUN -> ID . LPAREN FUN_AUX RPAREN
    (14) ARRDIM -> . LSTAPLE EXPRESION RSTAPLE
    (15) ARRDIM -> . LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE
    (16) ARRDIM -> . LSTAPLE EXPRESION COMA EXPRESION RSTAPLE
    (17) ARRDIM -> . empty
    (1) empty -> .

    LPAREN          shift and go to state 84
    LSTAPLE         shift and go to state 31
    DET_ARR         reduce using rule 1 (empty -> .)
    TRANS_ARR       reduce using rule 1 (empty -> .)
    INV_ARR         reduce using rule 1 (empty -> .)
    MULT            reduce using rule 1 (empty -> .)
    DIV             reduce using rule 1 (empty -> .)
    MOD             reduce using rule 1 (empty -> .)
    PLUS            reduce using rule 1 (empty -> .)
    MINUS           reduce using rule 1 (empty -> .)
    MORE            reduce using rule 1 (empty -> .)
    LESS            reduce using rule 1 (empty -> .)
    COMPARE         reduce using rule 1 (empty -> .)
    DIFFERENT       reduce using rule 1 (empty -> .)
    MOREEQUAL       reduce using rule 1 (empty -> .)
    LESSEQUAL       reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    RSTAPLE         reduce using rule 1 (empty -> .)
    COMA            reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    DOTCOMA         reduce using rule 1 (empty -> .)
    HASTA           reduce using rule 1 (empty -> .)
    HACER           reduce using rule 1 (empty -> .)
    RBRACKET        reduce using rule 1 (empty -> .)

    ARRDIM                         shift and go to state 83
    empty                          shift and go to state 32

state 54

    (3) MAIN -> PRINCIPAL LPAREN RPAREN VARS . BLOQUE
    (28) BLOQUE -> . LBRACKET ESTATUTOS RBRACKET

    LBRACKET        shift and go to state 86

    BLOQUE                         shift and go to state 85

state 55

    (22) PARAM -> TIPO . ID PARENTESIS PARAM_AUX

    ID              shift and go to state 87


state 56

    (20) FUNCTION -> FUNCION TIPO ID LPAREN PARAM . RPAREN VARS BLOQUE

    RPAREN          shift and go to state 88


state 57

    (21) FUNCTION -> FUNCION VOID ID LPAREN PARAM . RPAREN VARS BLOQUE

    RPAREN          shift and go to state 89


state 58

    (13) IDS -> ID ARRDIM COMA IDS .

    INT             reduce using rule 13 (IDS -> ID ARRDIM COMA IDS .)
    FLOAT           reduce using rule 13 (IDS -> ID ARRDIM COMA IDS .)
    CHAR            reduce using rule 13 (IDS -> ID ARRDIM COMA IDS .)
    STRING          reduce using rule 13 (IDS -> ID ARRDIM COMA IDS .)
    FUNCION         reduce using rule 13 (IDS -> ID ARRDIM COMA IDS .)
    PRINCIPAL       reduce using rule 13 (IDS -> ID ARRDIM COMA IDS .)
    LBRACKET        reduce using rule 13 (IDS -> ID ARRDIM COMA IDS .)


state 59

    (14) ARRDIM -> LSTAPLE EXPRESION RSTAPLE .
    (15) ARRDIM -> LSTAPLE EXPRESION RSTAPLE . LSTAPLE EXPRESION RSTAPLE

    DOTCOMA         reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    COMA            reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    DET_ARR         reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    TRANS_ARR       reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    INV_ARR         reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    MULT            reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    DIV             reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    MOD             reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    PLUS            reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    MINUS           reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    MORE            reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    LESS            reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    COMPARE         reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    DIFFERENT       reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    MOREEQUAL       reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    LESSEQUAL       reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    AND             reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    OR              reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    RSTAPLE         reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    RPAREN          reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    HASTA           reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    HACER           reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    RBRACKET        reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    EQUAL           reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    LSTAPLE         shift and go to state 90


state 60

    (16) ARRDIM -> LSTAPLE EXPRESION COMA . EXPRESION RSTAPLE
    (39) EXPRESION -> . SUBEXP AND SUBEXP
    (40) EXPRESION -> . SUBEXP OR SUBEXP
    (41) EXPRESION -> . SUBEXP
    (42) SUBEXP -> . EXP
    (43) SUBEXP -> . EXP COMPARACION EXP
    (50) EXP -> . TERMINO
    (51) EXP -> . TERMINO PLUS EXP
    (52) EXP -> . TERMINO MINUS EXP
    (53) TERMINO -> . FACTOR
    (54) TERMINO -> . FACTOR MULT TERMINO
    (55) TERMINO -> . FACTOR DIV TERMINO
    (56) TERMINO -> . FACTOR MOD TERMINO
    (57) FACTOR -> . LPAREN EXPRESION RPAREN
    (58) FACTOR -> . PLUS CTE
    (59) FACTOR -> . MINUS CTE
    (60) FACTOR -> . NOT CTE
    (61) FACTOR -> . CTE ARROP
    (62) FACTOR -> . CTE
    (63) CTE -> . CTE_I
    (64) CTE -> . CTE_F
    (65) CTE -> . CTE_CH
    (66) CTE -> . CTE_STRING
    (67) CTE -> . FUN
    (68) CTE -> . ID ARRDIM
    (72) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 45
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    NOT             shift and go to state 47
    CTE_I           shift and go to state 48
    CTE_F           shift and go to state 49
    CTE_CH          shift and go to state 50
    CTE_STRING      shift and go to state 51
    ID              shift and go to state 53

    EXPRESION                      shift and go to state 91
    SUBEXP                         shift and go to state 39
    EXP                            shift and go to state 40
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 44
    CTE                            shift and go to state 46
    FUN                            shift and go to state 52

state 61

    (39) EXPRESION -> SUBEXP AND . SUBEXP
    (42) SUBEXP -> . EXP
    (43) SUBEXP -> . EXP COMPARACION EXP
    (50) EXP -> . TERMINO
    (51) EXP -> . TERMINO PLUS EXP
    (52) EXP -> . TERMINO MINUS EXP
    (53) TERMINO -> . FACTOR
    (54) TERMINO -> . FACTOR MULT TERMINO
    (55) TERMINO -> . FACTOR DIV TERMINO
    (56) TERMINO -> . FACTOR MOD TERMINO
    (57) FACTOR -> . LPAREN EXPRESION RPAREN
    (58) FACTOR -> . PLUS CTE
    (59) FACTOR -> . MINUS CTE
    (60) FACTOR -> . NOT CTE
    (61) FACTOR -> . CTE ARROP
    (62) FACTOR -> . CTE
    (63) CTE -> . CTE_I
    (64) CTE -> . CTE_F
    (65) CTE -> . CTE_CH
    (66) CTE -> . CTE_STRING
    (67) CTE -> . FUN
    (68) CTE -> . ID ARRDIM
    (72) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 45
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    NOT             shift and go to state 47
    CTE_I           shift and go to state 48
    CTE_F           shift and go to state 49
    CTE_CH          shift and go to state 50
    CTE_STRING      shift and go to state 51
    ID              shift and go to state 53

    SUBEXP                         shift and go to state 92
    EXP                            shift and go to state 40
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 44
    CTE                            shift and go to state 46
    FUN                            shift and go to state 52

state 62

    (40) EXPRESION -> SUBEXP OR . SUBEXP
    (42) SUBEXP -> . EXP
    (43) SUBEXP -> . EXP COMPARACION EXP
    (50) EXP -> . TERMINO
    (51) EXP -> . TERMINO PLUS EXP
    (52) EXP -> . TERMINO MINUS EXP
    (53) TERMINO -> . FACTOR
    (54) TERMINO -> . FACTOR MULT TERMINO
    (55) TERMINO -> . FACTOR DIV TERMINO
    (56) TERMINO -> . FACTOR MOD TERMINO
    (57) FACTOR -> . LPAREN EXPRESION RPAREN
    (58) FACTOR -> . PLUS CTE
    (59) FACTOR -> . MINUS CTE
    (60) FACTOR -> . NOT CTE
    (61) FACTOR -> . CTE ARROP
    (62) FACTOR -> . CTE
    (63) CTE -> . CTE_I
    (64) CTE -> . CTE_F
    (65) CTE -> . CTE_CH
    (66) CTE -> . CTE_STRING
    (67) CTE -> . FUN
    (68) CTE -> . ID ARRDIM
    (72) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 45
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    NOT             shift and go to state 47
    CTE_I           shift and go to state 48
    CTE_F           shift and go to state 49
    CTE_CH          shift and go to state 50
    CTE_STRING      shift and go to state 51
    ID              shift and go to state 53

    SUBEXP                         shift and go to state 93
    EXP                            shift and go to state 40
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 44
    CTE                            shift and go to state 46
    FUN                            shift and go to state 52

state 63

    (43) SUBEXP -> EXP COMPARACION . EXP
    (50) EXP -> . TERMINO
    (51) EXP -> . TERMINO PLUS EXP
    (52) EXP -> . TERMINO MINUS EXP
    (53) TERMINO -> . FACTOR
    (54) TERMINO -> . FACTOR MULT TERMINO
    (55) TERMINO -> . FACTOR DIV TERMINO
    (56) TERMINO -> . FACTOR MOD TERMINO
    (57) FACTOR -> . LPAREN EXPRESION RPAREN
    (58) FACTOR -> . PLUS CTE
    (59) FACTOR -> . MINUS CTE
    (60) FACTOR -> . NOT CTE
    (61) FACTOR -> . CTE ARROP
    (62) FACTOR -> . CTE
    (63) CTE -> . CTE_I
    (64) CTE -> . CTE_F
    (65) CTE -> . CTE_CH
    (66) CTE -> . CTE_STRING
    (67) CTE -> . FUN
    (68) CTE -> . ID ARRDIM
    (72) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 45
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    NOT             shift and go to state 47
    CTE_I           shift and go to state 48
    CTE_F           shift and go to state 49
    CTE_CH          shift and go to state 50
    CTE_STRING      shift and go to state 51
    ID              shift and go to state 53

    EXP                            shift and go to state 94
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 44
    CTE                            shift and go to state 46
    FUN                            shift and go to state 52

state 64

    (44) COMPARACION -> MORE .

    LPAREN          reduce using rule 44 (COMPARACION -> MORE .)
    PLUS            reduce using rule 44 (COMPARACION -> MORE .)
    MINUS           reduce using rule 44 (COMPARACION -> MORE .)
    NOT             reduce using rule 44 (COMPARACION -> MORE .)
    CTE_I           reduce using rule 44 (COMPARACION -> MORE .)
    CTE_F           reduce using rule 44 (COMPARACION -> MORE .)
    CTE_CH          reduce using rule 44 (COMPARACION -> MORE .)
    CTE_STRING      reduce using rule 44 (COMPARACION -> MORE .)
    ID              reduce using rule 44 (COMPARACION -> MORE .)


state 65

    (45) COMPARACION -> LESS .

    LPAREN          reduce using rule 45 (COMPARACION -> LESS .)
    PLUS            reduce using rule 45 (COMPARACION -> LESS .)
    MINUS           reduce using rule 45 (COMPARACION -> LESS .)
    NOT             reduce using rule 45 (COMPARACION -> LESS .)
    CTE_I           reduce using rule 45 (COMPARACION -> LESS .)
    CTE_F           reduce using rule 45 (COMPARACION -> LESS .)
    CTE_CH          reduce using rule 45 (COMPARACION -> LESS .)
    CTE_STRING      reduce using rule 45 (COMPARACION -> LESS .)
    ID              reduce using rule 45 (COMPARACION -> LESS .)


state 66

    (46) COMPARACION -> COMPARE .

    LPAREN          reduce using rule 46 (COMPARACION -> COMPARE .)
    PLUS            reduce using rule 46 (COMPARACION -> COMPARE .)
    MINUS           reduce using rule 46 (COMPARACION -> COMPARE .)
    NOT             reduce using rule 46 (COMPARACION -> COMPARE .)
    CTE_I           reduce using rule 46 (COMPARACION -> COMPARE .)
    CTE_F           reduce using rule 46 (COMPARACION -> COMPARE .)
    CTE_CH          reduce using rule 46 (COMPARACION -> COMPARE .)
    CTE_STRING      reduce using rule 46 (COMPARACION -> COMPARE .)
    ID              reduce using rule 46 (COMPARACION -> COMPARE .)


state 67

    (47) COMPARACION -> DIFFERENT .

    LPAREN          reduce using rule 47 (COMPARACION -> DIFFERENT .)
    PLUS            reduce using rule 47 (COMPARACION -> DIFFERENT .)
    MINUS           reduce using rule 47 (COMPARACION -> DIFFERENT .)
    NOT             reduce using rule 47 (COMPARACION -> DIFFERENT .)
    CTE_I           reduce using rule 47 (COMPARACION -> DIFFERENT .)
    CTE_F           reduce using rule 47 (COMPARACION -> DIFFERENT .)
    CTE_CH          reduce using rule 47 (COMPARACION -> DIFFERENT .)
    CTE_STRING      reduce using rule 47 (COMPARACION -> DIFFERENT .)
    ID              reduce using rule 47 (COMPARACION -> DIFFERENT .)


state 68

    (48) COMPARACION -> MOREEQUAL .

    LPAREN          reduce using rule 48 (COMPARACION -> MOREEQUAL .)
    PLUS            reduce using rule 48 (COMPARACION -> MOREEQUAL .)
    MINUS           reduce using rule 48 (COMPARACION -> MOREEQUAL .)
    NOT             reduce using rule 48 (COMPARACION -> MOREEQUAL .)
    CTE_I           reduce using rule 48 (COMPARACION -> MOREEQUAL .)
    CTE_F           reduce using rule 48 (COMPARACION -> MOREEQUAL .)
    CTE_CH          reduce using rule 48 (COMPARACION -> MOREEQUAL .)
    CTE_STRING      reduce using rule 48 (COMPARACION -> MOREEQUAL .)
    ID              reduce using rule 48 (COMPARACION -> MOREEQUAL .)


state 69

    (49) COMPARACION -> LESSEQUAL .

    LPAREN          reduce using rule 49 (COMPARACION -> LESSEQUAL .)
    PLUS            reduce using rule 49 (COMPARACION -> LESSEQUAL .)
    MINUS           reduce using rule 49 (COMPARACION -> LESSEQUAL .)
    NOT             reduce using rule 49 (COMPARACION -> LESSEQUAL .)
    CTE_I           reduce using rule 49 (COMPARACION -> LESSEQUAL .)
    CTE_F           reduce using rule 49 (COMPARACION -> LESSEQUAL .)
    CTE_CH          reduce using rule 49 (COMPARACION -> LESSEQUAL .)
    CTE_STRING      reduce using rule 49 (COMPARACION -> LESSEQUAL .)
    ID              reduce using rule 49 (COMPARACION -> LESSEQUAL .)


state 70

    (51) EXP -> TERMINO PLUS . EXP
    (50) EXP -> . TERMINO
    (51) EXP -> . TERMINO PLUS EXP
    (52) EXP -> . TERMINO MINUS EXP
    (53) TERMINO -> . FACTOR
    (54) TERMINO -> . FACTOR MULT TERMINO
    (55) TERMINO -> . FACTOR DIV TERMINO
    (56) TERMINO -> . FACTOR MOD TERMINO
    (57) FACTOR -> . LPAREN EXPRESION RPAREN
    (58) FACTOR -> . PLUS CTE
    (59) FACTOR -> . MINUS CTE
    (60) FACTOR -> . NOT CTE
    (61) FACTOR -> . CTE ARROP
    (62) FACTOR -> . CTE
    (63) CTE -> . CTE_I
    (64) CTE -> . CTE_F
    (65) CTE -> . CTE_CH
    (66) CTE -> . CTE_STRING
    (67) CTE -> . FUN
    (68) CTE -> . ID ARRDIM
    (72) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 45
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    NOT             shift and go to state 47
    CTE_I           shift and go to state 48
    CTE_F           shift and go to state 49
    CTE_CH          shift and go to state 50
    CTE_STRING      shift and go to state 51
    ID              shift and go to state 53

    TERMINO                        shift and go to state 41
    EXP                            shift and go to state 95
    FACTOR                         shift and go to state 44
    CTE                            shift and go to state 46
    FUN                            shift and go to state 52

state 71

    (52) EXP -> TERMINO MINUS . EXP
    (50) EXP -> . TERMINO
    (51) EXP -> . TERMINO PLUS EXP
    (52) EXP -> . TERMINO MINUS EXP
    (53) TERMINO -> . FACTOR
    (54) TERMINO -> . FACTOR MULT TERMINO
    (55) TERMINO -> . FACTOR DIV TERMINO
    (56) TERMINO -> . FACTOR MOD TERMINO
    (57) FACTOR -> . LPAREN EXPRESION RPAREN
    (58) FACTOR -> . PLUS CTE
    (59) FACTOR -> . MINUS CTE
    (60) FACTOR -> . NOT CTE
    (61) FACTOR -> . CTE ARROP
    (62) FACTOR -> . CTE
    (63) CTE -> . CTE_I
    (64) CTE -> . CTE_F
    (65) CTE -> . CTE_CH
    (66) CTE -> . CTE_STRING
    (67) CTE -> . FUN
    (68) CTE -> . ID ARRDIM
    (72) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 45
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    NOT             shift and go to state 47
    CTE_I           shift and go to state 48
    CTE_F           shift and go to state 49
    CTE_CH          shift and go to state 50
    CTE_STRING      shift and go to state 51
    ID              shift and go to state 53

    TERMINO                        shift and go to state 41
    EXP                            shift and go to state 96
    FACTOR                         shift and go to state 44
    CTE                            shift and go to state 46
    FUN                            shift and go to state 52

state 72

    (58) FACTOR -> PLUS CTE .

    MULT            reduce using rule 58 (FACTOR -> PLUS CTE .)
    DIV             reduce using rule 58 (FACTOR -> PLUS CTE .)
    MOD             reduce using rule 58 (FACTOR -> PLUS CTE .)
    PLUS            reduce using rule 58 (FACTOR -> PLUS CTE .)
    MINUS           reduce using rule 58 (FACTOR -> PLUS CTE .)
    MORE            reduce using rule 58 (FACTOR -> PLUS CTE .)
    LESS            reduce using rule 58 (FACTOR -> PLUS CTE .)
    COMPARE         reduce using rule 58 (FACTOR -> PLUS CTE .)
    DIFFERENT       reduce using rule 58 (FACTOR -> PLUS CTE .)
    MOREEQUAL       reduce using rule 58 (FACTOR -> PLUS CTE .)
    LESSEQUAL       reduce using rule 58 (FACTOR -> PLUS CTE .)
    AND             reduce using rule 58 (FACTOR -> PLUS CTE .)
    OR              reduce using rule 58 (FACTOR -> PLUS CTE .)
    RSTAPLE         reduce using rule 58 (FACTOR -> PLUS CTE .)
    COMA            reduce using rule 58 (FACTOR -> PLUS CTE .)
    RPAREN          reduce using rule 58 (FACTOR -> PLUS CTE .)
    DOTCOMA         reduce using rule 58 (FACTOR -> PLUS CTE .)
    HASTA           reduce using rule 58 (FACTOR -> PLUS CTE .)
    HACER           reduce using rule 58 (FACTOR -> PLUS CTE .)


state 73

    (59) FACTOR -> MINUS CTE .

    MULT            reduce using rule 59 (FACTOR -> MINUS CTE .)
    DIV             reduce using rule 59 (FACTOR -> MINUS CTE .)
    MOD             reduce using rule 59 (FACTOR -> MINUS CTE .)
    PLUS            reduce using rule 59 (FACTOR -> MINUS CTE .)
    MINUS           reduce using rule 59 (FACTOR -> MINUS CTE .)
    MORE            reduce using rule 59 (FACTOR -> MINUS CTE .)
    LESS            reduce using rule 59 (FACTOR -> MINUS CTE .)
    COMPARE         reduce using rule 59 (FACTOR -> MINUS CTE .)
    DIFFERENT       reduce using rule 59 (FACTOR -> MINUS CTE .)
    MOREEQUAL       reduce using rule 59 (FACTOR -> MINUS CTE .)
    LESSEQUAL       reduce using rule 59 (FACTOR -> MINUS CTE .)
    AND             reduce using rule 59 (FACTOR -> MINUS CTE .)
    OR              reduce using rule 59 (FACTOR -> MINUS CTE .)
    RSTAPLE         reduce using rule 59 (FACTOR -> MINUS CTE .)
    COMA            reduce using rule 59 (FACTOR -> MINUS CTE .)
    RPAREN          reduce using rule 59 (FACTOR -> MINUS CTE .)
    DOTCOMA         reduce using rule 59 (FACTOR -> MINUS CTE .)
    HASTA           reduce using rule 59 (FACTOR -> MINUS CTE .)
    HACER           reduce using rule 59 (FACTOR -> MINUS CTE .)


state 74

    (54) TERMINO -> FACTOR MULT . TERMINO
    (53) TERMINO -> . FACTOR
    (54) TERMINO -> . FACTOR MULT TERMINO
    (55) TERMINO -> . FACTOR DIV TERMINO
    (56) TERMINO -> . FACTOR MOD TERMINO
    (57) FACTOR -> . LPAREN EXPRESION RPAREN
    (58) FACTOR -> . PLUS CTE
    (59) FACTOR -> . MINUS CTE
    (60) FACTOR -> . NOT CTE
    (61) FACTOR -> . CTE ARROP
    (62) FACTOR -> . CTE
    (63) CTE -> . CTE_I
    (64) CTE -> . CTE_F
    (65) CTE -> . CTE_CH
    (66) CTE -> . CTE_STRING
    (67) CTE -> . FUN
    (68) CTE -> . ID ARRDIM
    (72) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 45
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    NOT             shift and go to state 47
    CTE_I           shift and go to state 48
    CTE_F           shift and go to state 49
    CTE_CH          shift and go to state 50
    CTE_STRING      shift and go to state 51
    ID              shift and go to state 53

    FACTOR                         shift and go to state 44
    TERMINO                        shift and go to state 97
    CTE                            shift and go to state 46
    FUN                            shift and go to state 52

state 75

    (55) TERMINO -> FACTOR DIV . TERMINO
    (53) TERMINO -> . FACTOR
    (54) TERMINO -> . FACTOR MULT TERMINO
    (55) TERMINO -> . FACTOR DIV TERMINO
    (56) TERMINO -> . FACTOR MOD TERMINO
    (57) FACTOR -> . LPAREN EXPRESION RPAREN
    (58) FACTOR -> . PLUS CTE
    (59) FACTOR -> . MINUS CTE
    (60) FACTOR -> . NOT CTE
    (61) FACTOR -> . CTE ARROP
    (62) FACTOR -> . CTE
    (63) CTE -> . CTE_I
    (64) CTE -> . CTE_F
    (65) CTE -> . CTE_CH
    (66) CTE -> . CTE_STRING
    (67) CTE -> . FUN
    (68) CTE -> . ID ARRDIM
    (72) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 45
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    NOT             shift and go to state 47
    CTE_I           shift and go to state 48
    CTE_F           shift and go to state 49
    CTE_CH          shift and go to state 50
    CTE_STRING      shift and go to state 51
    ID              shift and go to state 53

    FACTOR                         shift and go to state 44
    TERMINO                        shift and go to state 98
    CTE                            shift and go to state 46
    FUN                            shift and go to state 52

state 76

    (56) TERMINO -> FACTOR MOD . TERMINO
    (53) TERMINO -> . FACTOR
    (54) TERMINO -> . FACTOR MULT TERMINO
    (55) TERMINO -> . FACTOR DIV TERMINO
    (56) TERMINO -> . FACTOR MOD TERMINO
    (57) FACTOR -> . LPAREN EXPRESION RPAREN
    (58) FACTOR -> . PLUS CTE
    (59) FACTOR -> . MINUS CTE
    (60) FACTOR -> . NOT CTE
    (61) FACTOR -> . CTE ARROP
    (62) FACTOR -> . CTE
    (63) CTE -> . CTE_I
    (64) CTE -> . CTE_F
    (65) CTE -> . CTE_CH
    (66) CTE -> . CTE_STRING
    (67) CTE -> . FUN
    (68) CTE -> . ID ARRDIM
    (72) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 45
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    NOT             shift and go to state 47
    CTE_I           shift and go to state 48
    CTE_F           shift and go to state 49
    CTE_CH          shift and go to state 50
    CTE_STRING      shift and go to state 51
    ID              shift and go to state 53

    FACTOR                         shift and go to state 44
    TERMINO                        shift and go to state 99
    CTE                            shift and go to state 46
    FUN                            shift and go to state 52

state 77

    (57) FACTOR -> LPAREN EXPRESION . RPAREN

    RPAREN          shift and go to state 100


state 78

    (61) FACTOR -> CTE ARROP .

    MULT            reduce using rule 61 (FACTOR -> CTE ARROP .)
    DIV             reduce using rule 61 (FACTOR -> CTE ARROP .)
    MOD             reduce using rule 61 (FACTOR -> CTE ARROP .)
    PLUS            reduce using rule 61 (FACTOR -> CTE ARROP .)
    MINUS           reduce using rule 61 (FACTOR -> CTE ARROP .)
    MORE            reduce using rule 61 (FACTOR -> CTE ARROP .)
    LESS            reduce using rule 61 (FACTOR -> CTE ARROP .)
    COMPARE         reduce using rule 61 (FACTOR -> CTE ARROP .)
    DIFFERENT       reduce using rule 61 (FACTOR -> CTE ARROP .)
    MOREEQUAL       reduce using rule 61 (FACTOR -> CTE ARROP .)
    LESSEQUAL       reduce using rule 61 (FACTOR -> CTE ARROP .)
    AND             reduce using rule 61 (FACTOR -> CTE ARROP .)
    OR              reduce using rule 61 (FACTOR -> CTE ARROP .)
    RSTAPLE         reduce using rule 61 (FACTOR -> CTE ARROP .)
    COMA            reduce using rule 61 (FACTOR -> CTE ARROP .)
    RPAREN          reduce using rule 61 (FACTOR -> CTE ARROP .)
    DOTCOMA         reduce using rule 61 (FACTOR -> CTE ARROP .)
    HASTA           reduce using rule 61 (FACTOR -> CTE ARROP .)
    HACER           reduce using rule 61 (FACTOR -> CTE ARROP .)


state 79

    (69) ARROP -> DET_ARR .

    MULT            reduce using rule 69 (ARROP -> DET_ARR .)
    DIV             reduce using rule 69 (ARROP -> DET_ARR .)
    MOD             reduce using rule 69 (ARROP -> DET_ARR .)
    PLUS            reduce using rule 69 (ARROP -> DET_ARR .)
    MINUS           reduce using rule 69 (ARROP -> DET_ARR .)
    MORE            reduce using rule 69 (ARROP -> DET_ARR .)
    LESS            reduce using rule 69 (ARROP -> DET_ARR .)
    COMPARE         reduce using rule 69 (ARROP -> DET_ARR .)
    DIFFERENT       reduce using rule 69 (ARROP -> DET_ARR .)
    MOREEQUAL       reduce using rule 69 (ARROP -> DET_ARR .)
    LESSEQUAL       reduce using rule 69 (ARROP -> DET_ARR .)
    AND             reduce using rule 69 (ARROP -> DET_ARR .)
    OR              reduce using rule 69 (ARROP -> DET_ARR .)
    RSTAPLE         reduce using rule 69 (ARROP -> DET_ARR .)
    COMA            reduce using rule 69 (ARROP -> DET_ARR .)
    RPAREN          reduce using rule 69 (ARROP -> DET_ARR .)
    DOTCOMA         reduce using rule 69 (ARROP -> DET_ARR .)
    HASTA           reduce using rule 69 (ARROP -> DET_ARR .)
    HACER           reduce using rule 69 (ARROP -> DET_ARR .)


state 80

    (70) ARROP -> TRANS_ARR .

    MULT            reduce using rule 70 (ARROP -> TRANS_ARR .)
    DIV             reduce using rule 70 (ARROP -> TRANS_ARR .)
    MOD             reduce using rule 70 (ARROP -> TRANS_ARR .)
    PLUS            reduce using rule 70 (ARROP -> TRANS_ARR .)
    MINUS           reduce using rule 70 (ARROP -> TRANS_ARR .)
    MORE            reduce using rule 70 (ARROP -> TRANS_ARR .)
    LESS            reduce using rule 70 (ARROP -> TRANS_ARR .)
    COMPARE         reduce using rule 70 (ARROP -> TRANS_ARR .)
    DIFFERENT       reduce using rule 70 (ARROP -> TRANS_ARR .)
    MOREEQUAL       reduce using rule 70 (ARROP -> TRANS_ARR .)
    LESSEQUAL       reduce using rule 70 (ARROP -> TRANS_ARR .)
    AND             reduce using rule 70 (ARROP -> TRANS_ARR .)
    OR              reduce using rule 70 (ARROP -> TRANS_ARR .)
    RSTAPLE         reduce using rule 70 (ARROP -> TRANS_ARR .)
    COMA            reduce using rule 70 (ARROP -> TRANS_ARR .)
    RPAREN          reduce using rule 70 (ARROP -> TRANS_ARR .)
    DOTCOMA         reduce using rule 70 (ARROP -> TRANS_ARR .)
    HASTA           reduce using rule 70 (ARROP -> TRANS_ARR .)
    HACER           reduce using rule 70 (ARROP -> TRANS_ARR .)


state 81

    (71) ARROP -> INV_ARR .

    MULT            reduce using rule 71 (ARROP -> INV_ARR .)
    DIV             reduce using rule 71 (ARROP -> INV_ARR .)
    MOD             reduce using rule 71 (ARROP -> INV_ARR .)
    PLUS            reduce using rule 71 (ARROP -> INV_ARR .)
    MINUS           reduce using rule 71 (ARROP -> INV_ARR .)
    MORE            reduce using rule 71 (ARROP -> INV_ARR .)
    LESS            reduce using rule 71 (ARROP -> INV_ARR .)
    COMPARE         reduce using rule 71 (ARROP -> INV_ARR .)
    DIFFERENT       reduce using rule 71 (ARROP -> INV_ARR .)
    MOREEQUAL       reduce using rule 71 (ARROP -> INV_ARR .)
    LESSEQUAL       reduce using rule 71 (ARROP -> INV_ARR .)
    AND             reduce using rule 71 (ARROP -> INV_ARR .)
    OR              reduce using rule 71 (ARROP -> INV_ARR .)
    RSTAPLE         reduce using rule 71 (ARROP -> INV_ARR .)
    COMA            reduce using rule 71 (ARROP -> INV_ARR .)
    RPAREN          reduce using rule 71 (ARROP -> INV_ARR .)
    DOTCOMA         reduce using rule 71 (ARROP -> INV_ARR .)
    HASTA           reduce using rule 71 (ARROP -> INV_ARR .)
    HACER           reduce using rule 71 (ARROP -> INV_ARR .)


state 82

    (60) FACTOR -> NOT CTE .

    MULT            reduce using rule 60 (FACTOR -> NOT CTE .)
    DIV             reduce using rule 60 (FACTOR -> NOT CTE .)
    MOD             reduce using rule 60 (FACTOR -> NOT CTE .)
    PLUS            reduce using rule 60 (FACTOR -> NOT CTE .)
    MINUS           reduce using rule 60 (FACTOR -> NOT CTE .)
    MORE            reduce using rule 60 (FACTOR -> NOT CTE .)
    LESS            reduce using rule 60 (FACTOR -> NOT CTE .)
    COMPARE         reduce using rule 60 (FACTOR -> NOT CTE .)
    DIFFERENT       reduce using rule 60 (FACTOR -> NOT CTE .)
    MOREEQUAL       reduce using rule 60 (FACTOR -> NOT CTE .)
    LESSEQUAL       reduce using rule 60 (FACTOR -> NOT CTE .)
    AND             reduce using rule 60 (FACTOR -> NOT CTE .)
    OR              reduce using rule 60 (FACTOR -> NOT CTE .)
    RSTAPLE         reduce using rule 60 (FACTOR -> NOT CTE .)
    COMA            reduce using rule 60 (FACTOR -> NOT CTE .)
    RPAREN          reduce using rule 60 (FACTOR -> NOT CTE .)
    DOTCOMA         reduce using rule 60 (FACTOR -> NOT CTE .)
    HASTA           reduce using rule 60 (FACTOR -> NOT CTE .)
    HACER           reduce using rule 60 (FACTOR -> NOT CTE .)


state 83

    (68) CTE -> ID ARRDIM .

    DET_ARR         reduce using rule 68 (CTE -> ID ARRDIM .)
    TRANS_ARR       reduce using rule 68 (CTE -> ID ARRDIM .)
    INV_ARR         reduce using rule 68 (CTE -> ID ARRDIM .)
    MULT            reduce using rule 68 (CTE -> ID ARRDIM .)
    DIV             reduce using rule 68 (CTE -> ID ARRDIM .)
    MOD             reduce using rule 68 (CTE -> ID ARRDIM .)
    PLUS            reduce using rule 68 (CTE -> ID ARRDIM .)
    MINUS           reduce using rule 68 (CTE -> ID ARRDIM .)
    MORE            reduce using rule 68 (CTE -> ID ARRDIM .)
    LESS            reduce using rule 68 (CTE -> ID ARRDIM .)
    COMPARE         reduce using rule 68 (CTE -> ID ARRDIM .)
    DIFFERENT       reduce using rule 68 (CTE -> ID ARRDIM .)
    MOREEQUAL       reduce using rule 68 (CTE -> ID ARRDIM .)
    LESSEQUAL       reduce using rule 68 (CTE -> ID ARRDIM .)
    AND             reduce using rule 68 (CTE -> ID ARRDIM .)
    OR              reduce using rule 68 (CTE -> ID ARRDIM .)
    RSTAPLE         reduce using rule 68 (CTE -> ID ARRDIM .)
    COMA            reduce using rule 68 (CTE -> ID ARRDIM .)
    RPAREN          reduce using rule 68 (CTE -> ID ARRDIM .)
    DOTCOMA         reduce using rule 68 (CTE -> ID ARRDIM .)
    HASTA           reduce using rule 68 (CTE -> ID ARRDIM .)
    HACER           reduce using rule 68 (CTE -> ID ARRDIM .)
    RBRACKET        reduce using rule 68 (CTE -> ID ARRDIM .)


state 84

    (72) FUN -> ID LPAREN . FUN_AUX RPAREN
    (73) FUN_AUX -> . EXPRESION COMA FUN_AUX
    (74) FUN_AUX -> . EXPRESION
    (75) FUN_AUX -> . empty
    (39) EXPRESION -> . SUBEXP AND SUBEXP
    (40) EXPRESION -> . SUBEXP OR SUBEXP
    (41) EXPRESION -> . SUBEXP
    (1) empty -> .
    (42) SUBEXP -> . EXP
    (43) SUBEXP -> . EXP COMPARACION EXP
    (50) EXP -> . TERMINO
    (51) EXP -> . TERMINO PLUS EXP
    (52) EXP -> . TERMINO MINUS EXP
    (53) TERMINO -> . FACTOR
    (54) TERMINO -> . FACTOR MULT TERMINO
    (55) TERMINO -> . FACTOR DIV TERMINO
    (56) TERMINO -> . FACTOR MOD TERMINO
    (57) FACTOR -> . LPAREN EXPRESION RPAREN
    (58) FACTOR -> . PLUS CTE
    (59) FACTOR -> . MINUS CTE
    (60) FACTOR -> . NOT CTE
    (61) FACTOR -> . CTE ARROP
    (62) FACTOR -> . CTE
    (63) CTE -> . CTE_I
    (64) CTE -> . CTE_F
    (65) CTE -> . CTE_CH
    (66) CTE -> . CTE_STRING
    (67) CTE -> . FUN
    (68) CTE -> . ID ARRDIM
    (72) FUN -> . ID LPAREN FUN_AUX RPAREN

    RPAREN          reduce using rule 1 (empty -> .)
    LPAREN          shift and go to state 45
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    NOT             shift and go to state 47
    CTE_I           shift and go to state 48
    CTE_F           shift and go to state 49
    CTE_CH          shift and go to state 50
    CTE_STRING      shift and go to state 51
    ID              shift and go to state 53

    FUN_AUX                        shift and go to state 101
    EXPRESION                      shift and go to state 102
    empty                          shift and go to state 103
    SUBEXP                         shift and go to state 39
    EXP                            shift and go to state 40
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 44
    CTE                            shift and go to state 46
    FUN                            shift and go to state 52

state 85

    (3) MAIN -> PRINCIPAL LPAREN RPAREN VARS BLOQUE .

    $end            reduce using rule 3 (MAIN -> PRINCIPAL LPAREN RPAREN VARS BLOQUE .)


state 86

    (28) BLOQUE -> LBRACKET . ESTATUTOS RBRACKET
    (29) ESTATUTOS -> . ESTATUTO ESTATUTOS
    (30) ESTATUTOS -> . empty
    (31) ESTATUTO -> . ASIGNACION DOTCOMA
    (32) ESTATUTO -> . FUN DOTCOMA
    (33) ESTATUTO -> . COND
    (34) ESTATUTO -> . WRITE DOTCOMA
    (35) ESTATUTO -> . READ DOTCOMA
    (36) ESTATUTO -> . RETURN DOTCOMA
    (1) empty -> .
    (37) ASIGNACION -> . ID ARRDIM EQUAL EXPRESION
    (38) ASIGNACION -> . ID ARRDIM EQUAL CTE_ARR
    (72) FUN -> . ID LPAREN FUN_AUX RPAREN
    (76) COND -> . IF
    (77) COND -> . FOR
    (78) COND -> . WHILE
    (89) WRITE -> . ESCRIBE LPAREN WRITE_AUX RPAREN
    (93) READ -> . LEE LPAREN READ_AUX RPAREN
    (97) RETURN -> . REGRESA LPAREN EXPRESION RPAREN
    (98) RETURN -> . REGRESA LPAREN NULL RPAREN
    (79) IF -> . SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX
    (80) IF -> . SI LPAREN EXPRESION RPAREN ENTONCES COND
    (87) FOR -> . DESDE ASIGNACION HASTA EXPRESION HACER BLOQUE
    (88) FOR -> . DESDE ASIGNACION HASTA EXPRESION HACER COND
    (83) WHILE -> . MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE
    (84) WHILE -> . MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX COND

    RBRACKET        reduce using rule 1 (empty -> .)
    ID              shift and go to state 113
    ESCRIBE         shift and go to state 117
    LEE             shift and go to state 118
    REGRESA         shift and go to state 119
    SI              shift and go to state 120
    DESDE           shift and go to state 121
    MIENTRAS        shift and go to state 122

    ESTATUTOS                      shift and go to state 104
    ESTATUTO                       shift and go to state 105
    empty                          shift and go to state 106
    ASIGNACION                     shift and go to state 107
    FUN                            shift and go to state 108
    COND                           shift and go to state 109
    WRITE                          shift and go to state 110
    READ                           shift and go to state 111
    RETURN                         shift and go to state 112
    IF                             shift and go to state 114
    FOR                            shift and go to state 115
    WHILE                          shift and go to state 116

state 87

    (22) PARAM -> TIPO ID . PARENTESIS PARAM_AUX
    (25) PARENTESIS -> . LSTAPLE RSTAPLE
    (26) PARENTESIS -> . LSTAPLE RSTAPLE LSTAPLE RSTAPLE
    (27) PARENTESIS -> . empty
    (1) empty -> .

    LSTAPLE         shift and go to state 124
    COMA            reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)

    PARENTESIS                     shift and go to state 123
    empty                          shift and go to state 125

state 88

    (20) FUNCTION -> FUNCION TIPO ID LPAREN PARAM RPAREN . VARS BLOQUE
    (4) VARS -> . VAR VAR_AUX
    (5) VARS -> . empty
    (1) empty -> .

    VAR             shift and go to state 6
    LBRACKET        reduce using rule 1 (empty -> .)

    VARS                           shift and go to state 126
    empty                          shift and go to state 7

state 89

    (21) FUNCTION -> FUNCION VOID ID LPAREN PARAM RPAREN . VARS BLOQUE
    (4) VARS -> . VAR VAR_AUX
    (5) VARS -> . empty
    (1) empty -> .

    VAR             shift and go to state 6
    LBRACKET        reduce using rule 1 (empty -> .)

    VARS                           shift and go to state 127
    empty                          shift and go to state 7

state 90

    (15) ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE . EXPRESION RSTAPLE
    (39) EXPRESION -> . SUBEXP AND SUBEXP
    (40) EXPRESION -> . SUBEXP OR SUBEXP
    (41) EXPRESION -> . SUBEXP
    (42) SUBEXP -> . EXP
    (43) SUBEXP -> . EXP COMPARACION EXP
    (50) EXP -> . TERMINO
    (51) EXP -> . TERMINO PLUS EXP
    (52) EXP -> . TERMINO MINUS EXP
    (53) TERMINO -> . FACTOR
    (54) TERMINO -> . FACTOR MULT TERMINO
    (55) TERMINO -> . FACTOR DIV TERMINO
    (56) TERMINO -> . FACTOR MOD TERMINO
    (57) FACTOR -> . LPAREN EXPRESION RPAREN
    (58) FACTOR -> . PLUS CTE
    (59) FACTOR -> . MINUS CTE
    (60) FACTOR -> . NOT CTE
    (61) FACTOR -> . CTE ARROP
    (62) FACTOR -> . CTE
    (63) CTE -> . CTE_I
    (64) CTE -> . CTE_F
    (65) CTE -> . CTE_CH
    (66) CTE -> . CTE_STRING
    (67) CTE -> . FUN
    (68) CTE -> . ID ARRDIM
    (72) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 45
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    NOT             shift and go to state 47
    CTE_I           shift and go to state 48
    CTE_F           shift and go to state 49
    CTE_CH          shift and go to state 50
    CTE_STRING      shift and go to state 51
    ID              shift and go to state 53

    EXPRESION                      shift and go to state 128
    SUBEXP                         shift and go to state 39
    EXP                            shift and go to state 40
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 44
    CTE                            shift and go to state 46
    FUN                            shift and go to state 52

state 91

    (16) ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION . RSTAPLE

    RSTAPLE         shift and go to state 129


state 92

    (39) EXPRESION -> SUBEXP AND SUBEXP .

    RSTAPLE         reduce using rule 39 (EXPRESION -> SUBEXP AND SUBEXP .)
    COMA            reduce using rule 39 (EXPRESION -> SUBEXP AND SUBEXP .)
    RPAREN          reduce using rule 39 (EXPRESION -> SUBEXP AND SUBEXP .)
    DOTCOMA         reduce using rule 39 (EXPRESION -> SUBEXP AND SUBEXP .)
    HASTA           reduce using rule 39 (EXPRESION -> SUBEXP AND SUBEXP .)
    HACER           reduce using rule 39 (EXPRESION -> SUBEXP AND SUBEXP .)


state 93

    (40) EXPRESION -> SUBEXP OR SUBEXP .

    RSTAPLE         reduce using rule 40 (EXPRESION -> SUBEXP OR SUBEXP .)
    COMA            reduce using rule 40 (EXPRESION -> SUBEXP OR SUBEXP .)
    RPAREN          reduce using rule 40 (EXPRESION -> SUBEXP OR SUBEXP .)
    DOTCOMA         reduce using rule 40 (EXPRESION -> SUBEXP OR SUBEXP .)
    HASTA           reduce using rule 40 (EXPRESION -> SUBEXP OR SUBEXP .)
    HACER           reduce using rule 40 (EXPRESION -> SUBEXP OR SUBEXP .)


state 94

    (43) SUBEXP -> EXP COMPARACION EXP .

    AND             reduce using rule 43 (SUBEXP -> EXP COMPARACION EXP .)
    OR              reduce using rule 43 (SUBEXP -> EXP COMPARACION EXP .)
    RSTAPLE         reduce using rule 43 (SUBEXP -> EXP COMPARACION EXP .)
    COMA            reduce using rule 43 (SUBEXP -> EXP COMPARACION EXP .)
    RPAREN          reduce using rule 43 (SUBEXP -> EXP COMPARACION EXP .)
    DOTCOMA         reduce using rule 43 (SUBEXP -> EXP COMPARACION EXP .)
    HASTA           reduce using rule 43 (SUBEXP -> EXP COMPARACION EXP .)
    HACER           reduce using rule 43 (SUBEXP -> EXP COMPARACION EXP .)


state 95

    (51) EXP -> TERMINO PLUS EXP .

    MORE            reduce using rule 51 (EXP -> TERMINO PLUS EXP .)
    LESS            reduce using rule 51 (EXP -> TERMINO PLUS EXP .)
    COMPARE         reduce using rule 51 (EXP -> TERMINO PLUS EXP .)
    DIFFERENT       reduce using rule 51 (EXP -> TERMINO PLUS EXP .)
    MOREEQUAL       reduce using rule 51 (EXP -> TERMINO PLUS EXP .)
    LESSEQUAL       reduce using rule 51 (EXP -> TERMINO PLUS EXP .)
    AND             reduce using rule 51 (EXP -> TERMINO PLUS EXP .)
    OR              reduce using rule 51 (EXP -> TERMINO PLUS EXP .)
    RSTAPLE         reduce using rule 51 (EXP -> TERMINO PLUS EXP .)
    COMA            reduce using rule 51 (EXP -> TERMINO PLUS EXP .)
    RPAREN          reduce using rule 51 (EXP -> TERMINO PLUS EXP .)
    DOTCOMA         reduce using rule 51 (EXP -> TERMINO PLUS EXP .)
    HASTA           reduce using rule 51 (EXP -> TERMINO PLUS EXP .)
    HACER           reduce using rule 51 (EXP -> TERMINO PLUS EXP .)


state 96

    (52) EXP -> TERMINO MINUS EXP .

    MORE            reduce using rule 52 (EXP -> TERMINO MINUS EXP .)
    LESS            reduce using rule 52 (EXP -> TERMINO MINUS EXP .)
    COMPARE         reduce using rule 52 (EXP -> TERMINO MINUS EXP .)
    DIFFERENT       reduce using rule 52 (EXP -> TERMINO MINUS EXP .)
    MOREEQUAL       reduce using rule 52 (EXP -> TERMINO MINUS EXP .)
    LESSEQUAL       reduce using rule 52 (EXP -> TERMINO MINUS EXP .)
    AND             reduce using rule 52 (EXP -> TERMINO MINUS EXP .)
    OR              reduce using rule 52 (EXP -> TERMINO MINUS EXP .)
    RSTAPLE         reduce using rule 52 (EXP -> TERMINO MINUS EXP .)
    COMA            reduce using rule 52 (EXP -> TERMINO MINUS EXP .)
    RPAREN          reduce using rule 52 (EXP -> TERMINO MINUS EXP .)
    DOTCOMA         reduce using rule 52 (EXP -> TERMINO MINUS EXP .)
    HASTA           reduce using rule 52 (EXP -> TERMINO MINUS EXP .)
    HACER           reduce using rule 52 (EXP -> TERMINO MINUS EXP .)


state 97

    (54) TERMINO -> FACTOR MULT TERMINO .

    PLUS            reduce using rule 54 (TERMINO -> FACTOR MULT TERMINO .)
    MINUS           reduce using rule 54 (TERMINO -> FACTOR MULT TERMINO .)
    MORE            reduce using rule 54 (TERMINO -> FACTOR MULT TERMINO .)
    LESS            reduce using rule 54 (TERMINO -> FACTOR MULT TERMINO .)
    COMPARE         reduce using rule 54 (TERMINO -> FACTOR MULT TERMINO .)
    DIFFERENT       reduce using rule 54 (TERMINO -> FACTOR MULT TERMINO .)
    MOREEQUAL       reduce using rule 54 (TERMINO -> FACTOR MULT TERMINO .)
    LESSEQUAL       reduce using rule 54 (TERMINO -> FACTOR MULT TERMINO .)
    AND             reduce using rule 54 (TERMINO -> FACTOR MULT TERMINO .)
    OR              reduce using rule 54 (TERMINO -> FACTOR MULT TERMINO .)
    RSTAPLE         reduce using rule 54 (TERMINO -> FACTOR MULT TERMINO .)
    COMA            reduce using rule 54 (TERMINO -> FACTOR MULT TERMINO .)
    RPAREN          reduce using rule 54 (TERMINO -> FACTOR MULT TERMINO .)
    DOTCOMA         reduce using rule 54 (TERMINO -> FACTOR MULT TERMINO .)
    HASTA           reduce using rule 54 (TERMINO -> FACTOR MULT TERMINO .)
    HACER           reduce using rule 54 (TERMINO -> FACTOR MULT TERMINO .)


state 98

    (55) TERMINO -> FACTOR DIV TERMINO .

    PLUS            reduce using rule 55 (TERMINO -> FACTOR DIV TERMINO .)
    MINUS           reduce using rule 55 (TERMINO -> FACTOR DIV TERMINO .)
    MORE            reduce using rule 55 (TERMINO -> FACTOR DIV TERMINO .)
    LESS            reduce using rule 55 (TERMINO -> FACTOR DIV TERMINO .)
    COMPARE         reduce using rule 55 (TERMINO -> FACTOR DIV TERMINO .)
    DIFFERENT       reduce using rule 55 (TERMINO -> FACTOR DIV TERMINO .)
    MOREEQUAL       reduce using rule 55 (TERMINO -> FACTOR DIV TERMINO .)
    LESSEQUAL       reduce using rule 55 (TERMINO -> FACTOR DIV TERMINO .)
    AND             reduce using rule 55 (TERMINO -> FACTOR DIV TERMINO .)
    OR              reduce using rule 55 (TERMINO -> FACTOR DIV TERMINO .)
    RSTAPLE         reduce using rule 55 (TERMINO -> FACTOR DIV TERMINO .)
    COMA            reduce using rule 55 (TERMINO -> FACTOR DIV TERMINO .)
    RPAREN          reduce using rule 55 (TERMINO -> FACTOR DIV TERMINO .)
    DOTCOMA         reduce using rule 55 (TERMINO -> FACTOR DIV TERMINO .)
    HASTA           reduce using rule 55 (TERMINO -> FACTOR DIV TERMINO .)
    HACER           reduce using rule 55 (TERMINO -> FACTOR DIV TERMINO .)


state 99

    (56) TERMINO -> FACTOR MOD TERMINO .

    PLUS            reduce using rule 56 (TERMINO -> FACTOR MOD TERMINO .)
    MINUS           reduce using rule 56 (TERMINO -> FACTOR MOD TERMINO .)
    MORE            reduce using rule 56 (TERMINO -> FACTOR MOD TERMINO .)
    LESS            reduce using rule 56 (TERMINO -> FACTOR MOD TERMINO .)
    COMPARE         reduce using rule 56 (TERMINO -> FACTOR MOD TERMINO .)
    DIFFERENT       reduce using rule 56 (TERMINO -> FACTOR MOD TERMINO .)
    MOREEQUAL       reduce using rule 56 (TERMINO -> FACTOR MOD TERMINO .)
    LESSEQUAL       reduce using rule 56 (TERMINO -> FACTOR MOD TERMINO .)
    AND             reduce using rule 56 (TERMINO -> FACTOR MOD TERMINO .)
    OR              reduce using rule 56 (TERMINO -> FACTOR MOD TERMINO .)
    RSTAPLE         reduce using rule 56 (TERMINO -> FACTOR MOD TERMINO .)
    COMA            reduce using rule 56 (TERMINO -> FACTOR MOD TERMINO .)
    RPAREN          reduce using rule 56 (TERMINO -> FACTOR MOD TERMINO .)
    DOTCOMA         reduce using rule 56 (TERMINO -> FACTOR MOD TERMINO .)
    HASTA           reduce using rule 56 (TERMINO -> FACTOR MOD TERMINO .)
    HACER           reduce using rule 56 (TERMINO -> FACTOR MOD TERMINO .)


state 100

    (57) FACTOR -> LPAREN EXPRESION RPAREN .

    MULT            reduce using rule 57 (FACTOR -> LPAREN EXPRESION RPAREN .)
    DIV             reduce using rule 57 (FACTOR -> LPAREN EXPRESION RPAREN .)
    MOD             reduce using rule 57 (FACTOR -> LPAREN EXPRESION RPAREN .)
    PLUS            reduce using rule 57 (FACTOR -> LPAREN EXPRESION RPAREN .)
    MINUS           reduce using rule 57 (FACTOR -> LPAREN EXPRESION RPAREN .)
    MORE            reduce using rule 57 (FACTOR -> LPAREN EXPRESION RPAREN .)
    LESS            reduce using rule 57 (FACTOR -> LPAREN EXPRESION RPAREN .)
    COMPARE         reduce using rule 57 (FACTOR -> LPAREN EXPRESION RPAREN .)
    DIFFERENT       reduce using rule 57 (FACTOR -> LPAREN EXPRESION RPAREN .)
    MOREEQUAL       reduce using rule 57 (FACTOR -> LPAREN EXPRESION RPAREN .)
    LESSEQUAL       reduce using rule 57 (FACTOR -> LPAREN EXPRESION RPAREN .)
    AND             reduce using rule 57 (FACTOR -> LPAREN EXPRESION RPAREN .)
    OR              reduce using rule 57 (FACTOR -> LPAREN EXPRESION RPAREN .)
    RSTAPLE         reduce using rule 57 (FACTOR -> LPAREN EXPRESION RPAREN .)
    COMA            reduce using rule 57 (FACTOR -> LPAREN EXPRESION RPAREN .)
    RPAREN          reduce using rule 57 (FACTOR -> LPAREN EXPRESION RPAREN .)
    DOTCOMA         reduce using rule 57 (FACTOR -> LPAREN EXPRESION RPAREN .)
    HASTA           reduce using rule 57 (FACTOR -> LPAREN EXPRESION RPAREN .)
    HACER           reduce using rule 57 (FACTOR -> LPAREN EXPRESION RPAREN .)


state 101

    (72) FUN -> ID LPAREN FUN_AUX . RPAREN

    RPAREN          shift and go to state 130


state 102

    (73) FUN_AUX -> EXPRESION . COMA FUN_AUX
    (74) FUN_AUX -> EXPRESION .

    COMA            shift and go to state 131
    RPAREN          reduce using rule 74 (FUN_AUX -> EXPRESION .)


state 103

    (75) FUN_AUX -> empty .

    RPAREN          reduce using rule 75 (FUN_AUX -> empty .)


state 104

    (28) BLOQUE -> LBRACKET ESTATUTOS . RBRACKET

    RBRACKET        shift and go to state 132


state 105

    (29) ESTATUTOS -> ESTATUTO . ESTATUTOS
    (29) ESTATUTOS -> . ESTATUTO ESTATUTOS
    (30) ESTATUTOS -> . empty
    (31) ESTATUTO -> . ASIGNACION DOTCOMA
    (32) ESTATUTO -> . FUN DOTCOMA
    (33) ESTATUTO -> . COND
    (34) ESTATUTO -> . WRITE DOTCOMA
    (35) ESTATUTO -> . READ DOTCOMA
    (36) ESTATUTO -> . RETURN DOTCOMA
    (1) empty -> .
    (37) ASIGNACION -> . ID ARRDIM EQUAL EXPRESION
    (38) ASIGNACION -> . ID ARRDIM EQUAL CTE_ARR
    (72) FUN -> . ID LPAREN FUN_AUX RPAREN
    (76) COND -> . IF
    (77) COND -> . FOR
    (78) COND -> . WHILE
    (89) WRITE -> . ESCRIBE LPAREN WRITE_AUX RPAREN
    (93) READ -> . LEE LPAREN READ_AUX RPAREN
    (97) RETURN -> . REGRESA LPAREN EXPRESION RPAREN
    (98) RETURN -> . REGRESA LPAREN NULL RPAREN
    (79) IF -> . SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX
    (80) IF -> . SI LPAREN EXPRESION RPAREN ENTONCES COND
    (87) FOR -> . DESDE ASIGNACION HASTA EXPRESION HACER BLOQUE
    (88) FOR -> . DESDE ASIGNACION HASTA EXPRESION HACER COND
    (83) WHILE -> . MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE
    (84) WHILE -> . MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX COND

    RBRACKET        reduce using rule 1 (empty -> .)
    ID              shift and go to state 113
    ESCRIBE         shift and go to state 117
    LEE             shift and go to state 118
    REGRESA         shift and go to state 119
    SI              shift and go to state 120
    DESDE           shift and go to state 121
    MIENTRAS        shift and go to state 122

    ESTATUTO                       shift and go to state 105
    ESTATUTOS                      shift and go to state 133
    empty                          shift and go to state 106
    ASIGNACION                     shift and go to state 107
    FUN                            shift and go to state 108
    COND                           shift and go to state 109
    WRITE                          shift and go to state 110
    READ                           shift and go to state 111
    RETURN                         shift and go to state 112
    IF                             shift and go to state 114
    FOR                            shift and go to state 115
    WHILE                          shift and go to state 116

state 106

    (30) ESTATUTOS -> empty .

    RBRACKET        reduce using rule 30 (ESTATUTOS -> empty .)


state 107

    (31) ESTATUTO -> ASIGNACION . DOTCOMA

    DOTCOMA         shift and go to state 134


state 108

    (32) ESTATUTO -> FUN . DOTCOMA

    DOTCOMA         shift and go to state 135


state 109

    (33) ESTATUTO -> COND .

    ID              reduce using rule 33 (ESTATUTO -> COND .)
    ESCRIBE         reduce using rule 33 (ESTATUTO -> COND .)
    LEE             reduce using rule 33 (ESTATUTO -> COND .)
    REGRESA         reduce using rule 33 (ESTATUTO -> COND .)
    SI              reduce using rule 33 (ESTATUTO -> COND .)
    DESDE           reduce using rule 33 (ESTATUTO -> COND .)
    MIENTRAS        reduce using rule 33 (ESTATUTO -> COND .)
    RBRACKET        reduce using rule 33 (ESTATUTO -> COND .)


state 110

    (34) ESTATUTO -> WRITE . DOTCOMA

    DOTCOMA         shift and go to state 136


state 111

    (35) ESTATUTO -> READ . DOTCOMA

    DOTCOMA         shift and go to state 137


state 112

    (36) ESTATUTO -> RETURN . DOTCOMA

    DOTCOMA         shift and go to state 138


state 113

    (37) ASIGNACION -> ID . ARRDIM EQUAL EXPRESION
    (38) ASIGNACION -> ID . ARRDIM EQUAL CTE_ARR
    (72) FUN -> ID . LPAREN FUN_AUX RPAREN
    (14) ARRDIM -> . LSTAPLE EXPRESION RSTAPLE
    (15) ARRDIM -> . LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE
    (16) ARRDIM -> . LSTAPLE EXPRESION COMA EXPRESION RSTAPLE
    (17) ARRDIM -> . empty
    (1) empty -> .

    LPAREN          shift and go to state 84
    LSTAPLE         shift and go to state 31
    EQUAL           reduce using rule 1 (empty -> .)

    ARRDIM                         shift and go to state 139
    empty                          shift and go to state 32

state 114

    (76) COND -> IF .

    ID              reduce using rule 76 (COND -> IF .)
    ESCRIBE         reduce using rule 76 (COND -> IF .)
    LEE             reduce using rule 76 (COND -> IF .)
    REGRESA         reduce using rule 76 (COND -> IF .)
    SI              reduce using rule 76 (COND -> IF .)
    DESDE           reduce using rule 76 (COND -> IF .)
    MIENTRAS        reduce using rule 76 (COND -> IF .)
    RBRACKET        reduce using rule 76 (COND -> IF .)


state 115

    (77) COND -> FOR .

    ID              reduce using rule 77 (COND -> FOR .)
    ESCRIBE         reduce using rule 77 (COND -> FOR .)
    LEE             reduce using rule 77 (COND -> FOR .)
    REGRESA         reduce using rule 77 (COND -> FOR .)
    SI              reduce using rule 77 (COND -> FOR .)
    DESDE           reduce using rule 77 (COND -> FOR .)
    MIENTRAS        reduce using rule 77 (COND -> FOR .)
    RBRACKET        reduce using rule 77 (COND -> FOR .)


state 116

    (78) COND -> WHILE .

    ID              reduce using rule 78 (COND -> WHILE .)
    ESCRIBE         reduce using rule 78 (COND -> WHILE .)
    LEE             reduce using rule 78 (COND -> WHILE .)
    REGRESA         reduce using rule 78 (COND -> WHILE .)
    SI              reduce using rule 78 (COND -> WHILE .)
    DESDE           reduce using rule 78 (COND -> WHILE .)
    MIENTRAS        reduce using rule 78 (COND -> WHILE .)
    RBRACKET        reduce using rule 78 (COND -> WHILE .)


state 117

    (89) WRITE -> ESCRIBE . LPAREN WRITE_AUX RPAREN

    LPAREN          shift and go to state 140


state 118

    (93) READ -> LEE . LPAREN READ_AUX RPAREN

    LPAREN          shift and go to state 141


state 119

    (97) RETURN -> REGRESA . LPAREN EXPRESION RPAREN
    (98) RETURN -> REGRESA . LPAREN NULL RPAREN

    LPAREN          shift and go to state 142


state 120

    (79) IF -> SI . LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX
    (80) IF -> SI . LPAREN EXPRESION RPAREN ENTONCES COND

    LPAREN          shift and go to state 143


state 121

    (87) FOR -> DESDE . ASIGNACION HASTA EXPRESION HACER BLOQUE
    (88) FOR -> DESDE . ASIGNACION HASTA EXPRESION HACER COND
    (37) ASIGNACION -> . ID ARRDIM EQUAL EXPRESION
    (38) ASIGNACION -> . ID ARRDIM EQUAL CTE_ARR

    ID              shift and go to state 145

    ASIGNACION                     shift and go to state 144

state 122

    (83) WHILE -> MIENTRAS . LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE
    (84) WHILE -> MIENTRAS . LPAREN EXPRESION RPAREN WHILE_AUX COND

    LPAREN          shift and go to state 146


state 123

    (22) PARAM -> TIPO ID PARENTESIS . PARAM_AUX
    (23) PARAM_AUX -> . COMA PARAM
    (24) PARAM_AUX -> . empty
    (1) empty -> .

    COMA            shift and go to state 148
    RPAREN          reduce using rule 1 (empty -> .)

    PARAM_AUX                      shift and go to state 147
    empty                          shift and go to state 149

state 124

    (25) PARENTESIS -> LSTAPLE . RSTAPLE
    (26) PARENTESIS -> LSTAPLE . RSTAPLE LSTAPLE RSTAPLE

    RSTAPLE         shift and go to state 150


state 125

    (27) PARENTESIS -> empty .

    COMA            reduce using rule 27 (PARENTESIS -> empty .)
    RPAREN          reduce using rule 27 (PARENTESIS -> empty .)


state 126

    (20) FUNCTION -> FUNCION TIPO ID LPAREN PARAM RPAREN VARS . BLOQUE
    (28) BLOQUE -> . LBRACKET ESTATUTOS RBRACKET

    LBRACKET        shift and go to state 86

    BLOQUE                         shift and go to state 151

state 127

    (21) FUNCTION -> FUNCION VOID ID LPAREN PARAM RPAREN VARS . BLOQUE
    (28) BLOQUE -> . LBRACKET ESTATUTOS RBRACKET

    LBRACKET        shift and go to state 86

    BLOQUE                         shift and go to state 152

state 128

    (15) ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION . RSTAPLE

    RSTAPLE         shift and go to state 153


state 129

    (16) ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .

    DOTCOMA         reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    COMA            reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    DET_ARR         reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    TRANS_ARR       reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    INV_ARR         reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    MULT            reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    DIV             reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    MOD             reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    PLUS            reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    MINUS           reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    MORE            reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    LESS            reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    COMPARE         reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    DIFFERENT       reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    MOREEQUAL       reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    LESSEQUAL       reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    AND             reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    OR              reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    RSTAPLE         reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    RPAREN          reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    HASTA           reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    HACER           reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    RBRACKET        reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    EQUAL           reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)


state 130

    (72) FUN -> ID LPAREN FUN_AUX RPAREN .

    DET_ARR         reduce using rule 72 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    TRANS_ARR       reduce using rule 72 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    INV_ARR         reduce using rule 72 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    MULT            reduce using rule 72 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    DIV             reduce using rule 72 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    MOD             reduce using rule 72 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    PLUS            reduce using rule 72 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    MINUS           reduce using rule 72 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    MORE            reduce using rule 72 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    LESS            reduce using rule 72 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    COMPARE         reduce using rule 72 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    DIFFERENT       reduce using rule 72 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    MOREEQUAL       reduce using rule 72 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    LESSEQUAL       reduce using rule 72 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    AND             reduce using rule 72 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    OR              reduce using rule 72 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    RSTAPLE         reduce using rule 72 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    COMA            reduce using rule 72 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    RPAREN          reduce using rule 72 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    DOTCOMA         reduce using rule 72 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    HASTA           reduce using rule 72 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    HACER           reduce using rule 72 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    RBRACKET        reduce using rule 72 (FUN -> ID LPAREN FUN_AUX RPAREN .)


state 131

    (73) FUN_AUX -> EXPRESION COMA . FUN_AUX
    (73) FUN_AUX -> . EXPRESION COMA FUN_AUX
    (74) FUN_AUX -> . EXPRESION
    (75) FUN_AUX -> . empty
    (39) EXPRESION -> . SUBEXP AND SUBEXP
    (40) EXPRESION -> . SUBEXP OR SUBEXP
    (41) EXPRESION -> . SUBEXP
    (1) empty -> .
    (42) SUBEXP -> . EXP
    (43) SUBEXP -> . EXP COMPARACION EXP
    (50) EXP -> . TERMINO
    (51) EXP -> . TERMINO PLUS EXP
    (52) EXP -> . TERMINO MINUS EXP
    (53) TERMINO -> . FACTOR
    (54) TERMINO -> . FACTOR MULT TERMINO
    (55) TERMINO -> . FACTOR DIV TERMINO
    (56) TERMINO -> . FACTOR MOD TERMINO
    (57) FACTOR -> . LPAREN EXPRESION RPAREN
    (58) FACTOR -> . PLUS CTE
    (59) FACTOR -> . MINUS CTE
    (60) FACTOR -> . NOT CTE
    (61) FACTOR -> . CTE ARROP
    (62) FACTOR -> . CTE
    (63) CTE -> . CTE_I
    (64) CTE -> . CTE_F
    (65) CTE -> . CTE_CH
    (66) CTE -> . CTE_STRING
    (67) CTE -> . FUN
    (68) CTE -> . ID ARRDIM
    (72) FUN -> . ID LPAREN FUN_AUX RPAREN

    RPAREN          reduce using rule 1 (empty -> .)
    LPAREN          shift and go to state 45
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    NOT             shift and go to state 47
    CTE_I           shift and go to state 48
    CTE_F           shift and go to state 49
    CTE_CH          shift and go to state 50
    CTE_STRING      shift and go to state 51
    ID              shift and go to state 53

    EXPRESION                      shift and go to state 102
    FUN_AUX                        shift and go to state 154
    empty                          shift and go to state 103
    SUBEXP                         shift and go to state 39
    EXP                            shift and go to state 40
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 44
    CTE                            shift and go to state 46
    FUN                            shift and go to state 52

state 132

    (28) BLOQUE -> LBRACKET ESTATUTOS RBRACKET .

    $end            reduce using rule 28 (BLOQUE -> LBRACKET ESTATUTOS RBRACKET .)
    FUNCION         reduce using rule 28 (BLOQUE -> LBRACKET ESTATUTOS RBRACKET .)
    PRINCIPAL       reduce using rule 28 (BLOQUE -> LBRACKET ESTATUTOS RBRACKET .)
    SINO            reduce using rule 28 (BLOQUE -> LBRACKET ESTATUTOS RBRACKET .)
    ID              reduce using rule 28 (BLOQUE -> LBRACKET ESTATUTOS RBRACKET .)
    ESCRIBE         reduce using rule 28 (BLOQUE -> LBRACKET ESTATUTOS RBRACKET .)
    LEE             reduce using rule 28 (BLOQUE -> LBRACKET ESTATUTOS RBRACKET .)
    REGRESA         reduce using rule 28 (BLOQUE -> LBRACKET ESTATUTOS RBRACKET .)
    SI              reduce using rule 28 (BLOQUE -> LBRACKET ESTATUTOS RBRACKET .)
    DESDE           reduce using rule 28 (BLOQUE -> LBRACKET ESTATUTOS RBRACKET .)
    MIENTRAS        reduce using rule 28 (BLOQUE -> LBRACKET ESTATUTOS RBRACKET .)
    RBRACKET        reduce using rule 28 (BLOQUE -> LBRACKET ESTATUTOS RBRACKET .)


state 133

    (29) ESTATUTOS -> ESTATUTO ESTATUTOS .

    RBRACKET        reduce using rule 29 (ESTATUTOS -> ESTATUTO ESTATUTOS .)


state 134

    (31) ESTATUTO -> ASIGNACION DOTCOMA .

    ID              reduce using rule 31 (ESTATUTO -> ASIGNACION DOTCOMA .)
    ESCRIBE         reduce using rule 31 (ESTATUTO -> ASIGNACION DOTCOMA .)
    LEE             reduce using rule 31 (ESTATUTO -> ASIGNACION DOTCOMA .)
    REGRESA         reduce using rule 31 (ESTATUTO -> ASIGNACION DOTCOMA .)
    SI              reduce using rule 31 (ESTATUTO -> ASIGNACION DOTCOMA .)
    DESDE           reduce using rule 31 (ESTATUTO -> ASIGNACION DOTCOMA .)
    MIENTRAS        reduce using rule 31 (ESTATUTO -> ASIGNACION DOTCOMA .)
    RBRACKET        reduce using rule 31 (ESTATUTO -> ASIGNACION DOTCOMA .)


state 135

    (32) ESTATUTO -> FUN DOTCOMA .

    ID              reduce using rule 32 (ESTATUTO -> FUN DOTCOMA .)
    ESCRIBE         reduce using rule 32 (ESTATUTO -> FUN DOTCOMA .)
    LEE             reduce using rule 32 (ESTATUTO -> FUN DOTCOMA .)
    REGRESA         reduce using rule 32 (ESTATUTO -> FUN DOTCOMA .)
    SI              reduce using rule 32 (ESTATUTO -> FUN DOTCOMA .)
    DESDE           reduce using rule 32 (ESTATUTO -> FUN DOTCOMA .)
    MIENTRAS        reduce using rule 32 (ESTATUTO -> FUN DOTCOMA .)
    RBRACKET        reduce using rule 32 (ESTATUTO -> FUN DOTCOMA .)


state 136

    (34) ESTATUTO -> WRITE DOTCOMA .

    ID              reduce using rule 34 (ESTATUTO -> WRITE DOTCOMA .)
    ESCRIBE         reduce using rule 34 (ESTATUTO -> WRITE DOTCOMA .)
    LEE             reduce using rule 34 (ESTATUTO -> WRITE DOTCOMA .)
    REGRESA         reduce using rule 34 (ESTATUTO -> WRITE DOTCOMA .)
    SI              reduce using rule 34 (ESTATUTO -> WRITE DOTCOMA .)
    DESDE           reduce using rule 34 (ESTATUTO -> WRITE DOTCOMA .)
    MIENTRAS        reduce using rule 34 (ESTATUTO -> WRITE DOTCOMA .)
    RBRACKET        reduce using rule 34 (ESTATUTO -> WRITE DOTCOMA .)


state 137

    (35) ESTATUTO -> READ DOTCOMA .

    ID              reduce using rule 35 (ESTATUTO -> READ DOTCOMA .)
    ESCRIBE         reduce using rule 35 (ESTATUTO -> READ DOTCOMA .)
    LEE             reduce using rule 35 (ESTATUTO -> READ DOTCOMA .)
    REGRESA         reduce using rule 35 (ESTATUTO -> READ DOTCOMA .)
    SI              reduce using rule 35 (ESTATUTO -> READ DOTCOMA .)
    DESDE           reduce using rule 35 (ESTATUTO -> READ DOTCOMA .)
    MIENTRAS        reduce using rule 35 (ESTATUTO -> READ DOTCOMA .)
    RBRACKET        reduce using rule 35 (ESTATUTO -> READ DOTCOMA .)


state 138

    (36) ESTATUTO -> RETURN DOTCOMA .

    ID              reduce using rule 36 (ESTATUTO -> RETURN DOTCOMA .)
    ESCRIBE         reduce using rule 36 (ESTATUTO -> RETURN DOTCOMA .)
    LEE             reduce using rule 36 (ESTATUTO -> RETURN DOTCOMA .)
    REGRESA         reduce using rule 36 (ESTATUTO -> RETURN DOTCOMA .)
    SI              reduce using rule 36 (ESTATUTO -> RETURN DOTCOMA .)
    DESDE           reduce using rule 36 (ESTATUTO -> RETURN DOTCOMA .)
    MIENTRAS        reduce using rule 36 (ESTATUTO -> RETURN DOTCOMA .)
    RBRACKET        reduce using rule 36 (ESTATUTO -> RETURN DOTCOMA .)


state 139

    (37) ASIGNACION -> ID ARRDIM . EQUAL EXPRESION
    (38) ASIGNACION -> ID ARRDIM . EQUAL CTE_ARR

    EQUAL           shift and go to state 155


state 140

    (89) WRITE -> ESCRIBE LPAREN . WRITE_AUX RPAREN
    (90) WRITE_AUX -> . EXPRESION WRITE_AUXSUB
    (39) EXPRESION -> . SUBEXP AND SUBEXP
    (40) EXPRESION -> . SUBEXP OR SUBEXP
    (41) EXPRESION -> . SUBEXP
    (42) SUBEXP -> . EXP
    (43) SUBEXP -> . EXP COMPARACION EXP
    (50) EXP -> . TERMINO
    (51) EXP -> . TERMINO PLUS EXP
    (52) EXP -> . TERMINO MINUS EXP
    (53) TERMINO -> . FACTOR
    (54) TERMINO -> . FACTOR MULT TERMINO
    (55) TERMINO -> . FACTOR DIV TERMINO
    (56) TERMINO -> . FACTOR MOD TERMINO
    (57) FACTOR -> . LPAREN EXPRESION RPAREN
    (58) FACTOR -> . PLUS CTE
    (59) FACTOR -> . MINUS CTE
    (60) FACTOR -> . NOT CTE
    (61) FACTOR -> . CTE ARROP
    (62) FACTOR -> . CTE
    (63) CTE -> . CTE_I
    (64) CTE -> . CTE_F
    (65) CTE -> . CTE_CH
    (66) CTE -> . CTE_STRING
    (67) CTE -> . FUN
    (68) CTE -> . ID ARRDIM
    (72) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 45
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    NOT             shift and go to state 47
    CTE_I           shift and go to state 48
    CTE_F           shift and go to state 49
    CTE_CH          shift and go to state 50
    CTE_STRING      shift and go to state 51
    ID              shift and go to state 53

    WRITE_AUX                      shift and go to state 156
    EXPRESION                      shift and go to state 157
    SUBEXP                         shift and go to state 39
    EXP                            shift and go to state 40
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 44
    CTE                            shift and go to state 46
    FUN                            shift and go to state 52

state 141

    (93) READ -> LEE LPAREN . READ_AUX RPAREN
    (94) READ_AUX -> . ID ARRDIM READ_AUXSUB

    ID              shift and go to state 159

    READ_AUX                       shift and go to state 158

state 142

    (97) RETURN -> REGRESA LPAREN . EXPRESION RPAREN
    (98) RETURN -> REGRESA LPAREN . NULL RPAREN
    (39) EXPRESION -> . SUBEXP AND SUBEXP
    (40) EXPRESION -> . SUBEXP OR SUBEXP
    (41) EXPRESION -> . SUBEXP
    (42) SUBEXP -> . EXP
    (43) SUBEXP -> . EXP COMPARACION EXP
    (50) EXP -> . TERMINO
    (51) EXP -> . TERMINO PLUS EXP
    (52) EXP -> . TERMINO MINUS EXP
    (53) TERMINO -> . FACTOR
    (54) TERMINO -> . FACTOR MULT TERMINO
    (55) TERMINO -> . FACTOR DIV TERMINO
    (56) TERMINO -> . FACTOR MOD TERMINO
    (57) FACTOR -> . LPAREN EXPRESION RPAREN
    (58) FACTOR -> . PLUS CTE
    (59) FACTOR -> . MINUS CTE
    (60) FACTOR -> . NOT CTE
    (61) FACTOR -> . CTE ARROP
    (62) FACTOR -> . CTE
    (63) CTE -> . CTE_I
    (64) CTE -> . CTE_F
    (65) CTE -> . CTE_CH
    (66) CTE -> . CTE_STRING
    (67) CTE -> . FUN
    (68) CTE -> . ID ARRDIM
    (72) FUN -> . ID LPAREN FUN_AUX RPAREN

    NULL            shift and go to state 161
    LPAREN          shift and go to state 45
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    NOT             shift and go to state 47
    CTE_I           shift and go to state 48
    CTE_F           shift and go to state 49
    CTE_CH          shift and go to state 50
    CTE_STRING      shift and go to state 51
    ID              shift and go to state 53

    EXPRESION                      shift and go to state 160
    SUBEXP                         shift and go to state 39
    EXP                            shift and go to state 40
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 44
    CTE                            shift and go to state 46
    FUN                            shift and go to state 52

state 143

    (79) IF -> SI LPAREN . EXPRESION RPAREN ENTONCES BLOQUE IF_AUX
    (80) IF -> SI LPAREN . EXPRESION RPAREN ENTONCES COND
    (39) EXPRESION -> . SUBEXP AND SUBEXP
    (40) EXPRESION -> . SUBEXP OR SUBEXP
    (41) EXPRESION -> . SUBEXP
    (42) SUBEXP -> . EXP
    (43) SUBEXP -> . EXP COMPARACION EXP
    (50) EXP -> . TERMINO
    (51) EXP -> . TERMINO PLUS EXP
    (52) EXP -> . TERMINO MINUS EXP
    (53) TERMINO -> . FACTOR
    (54) TERMINO -> . FACTOR MULT TERMINO
    (55) TERMINO -> . FACTOR DIV TERMINO
    (56) TERMINO -> . FACTOR MOD TERMINO
    (57) FACTOR -> . LPAREN EXPRESION RPAREN
    (58) FACTOR -> . PLUS CTE
    (59) FACTOR -> . MINUS CTE
    (60) FACTOR -> . NOT CTE
    (61) FACTOR -> . CTE ARROP
    (62) FACTOR -> . CTE
    (63) CTE -> . CTE_I
    (64) CTE -> . CTE_F
    (65) CTE -> . CTE_CH
    (66) CTE -> . CTE_STRING
    (67) CTE -> . FUN
    (68) CTE -> . ID ARRDIM
    (72) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 45
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    NOT             shift and go to state 47
    CTE_I           shift and go to state 48
    CTE_F           shift and go to state 49
    CTE_CH          shift and go to state 50
    CTE_STRING      shift and go to state 51
    ID              shift and go to state 53

    EXPRESION                      shift and go to state 162
    SUBEXP                         shift and go to state 39
    EXP                            shift and go to state 40
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 44
    CTE                            shift and go to state 46
    FUN                            shift and go to state 52

state 144

    (87) FOR -> DESDE ASIGNACION . HASTA EXPRESION HACER BLOQUE
    (88) FOR -> DESDE ASIGNACION . HASTA EXPRESION HACER COND

    HASTA           shift and go to state 163


state 145

    (37) ASIGNACION -> ID . ARRDIM EQUAL EXPRESION
    (38) ASIGNACION -> ID . ARRDIM EQUAL CTE_ARR
    (14) ARRDIM -> . LSTAPLE EXPRESION RSTAPLE
    (15) ARRDIM -> . LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE
    (16) ARRDIM -> . LSTAPLE EXPRESION COMA EXPRESION RSTAPLE
    (17) ARRDIM -> . empty
    (1) empty -> .

    LSTAPLE         shift and go to state 31
    EQUAL           reduce using rule 1 (empty -> .)

    ARRDIM                         shift and go to state 139
    empty                          shift and go to state 32

state 146

    (83) WHILE -> MIENTRAS LPAREN . EXPRESION RPAREN WHILE_AUX BLOQUE
    (84) WHILE -> MIENTRAS LPAREN . EXPRESION RPAREN WHILE_AUX COND
    (39) EXPRESION -> . SUBEXP AND SUBEXP
    (40) EXPRESION -> . SUBEXP OR SUBEXP
    (41) EXPRESION -> . SUBEXP
    (42) SUBEXP -> . EXP
    (43) SUBEXP -> . EXP COMPARACION EXP
    (50) EXP -> . TERMINO
    (51) EXP -> . TERMINO PLUS EXP
    (52) EXP -> . TERMINO MINUS EXP
    (53) TERMINO -> . FACTOR
    (54) TERMINO -> . FACTOR MULT TERMINO
    (55) TERMINO -> . FACTOR DIV TERMINO
    (56) TERMINO -> . FACTOR MOD TERMINO
    (57) FACTOR -> . LPAREN EXPRESION RPAREN
    (58) FACTOR -> . PLUS CTE
    (59) FACTOR -> . MINUS CTE
    (60) FACTOR -> . NOT CTE
    (61) FACTOR -> . CTE ARROP
    (62) FACTOR -> . CTE
    (63) CTE -> . CTE_I
    (64) CTE -> . CTE_F
    (65) CTE -> . CTE_CH
    (66) CTE -> . CTE_STRING
    (67) CTE -> . FUN
    (68) CTE -> . ID ARRDIM
    (72) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 45
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    NOT             shift and go to state 47
    CTE_I           shift and go to state 48
    CTE_F           shift and go to state 49
    CTE_CH          shift and go to state 50
    CTE_STRING      shift and go to state 51
    ID              shift and go to state 53

    EXPRESION                      shift and go to state 164
    SUBEXP                         shift and go to state 39
    EXP                            shift and go to state 40
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 44
    CTE                            shift and go to state 46
    FUN                            shift and go to state 52

state 147

    (22) PARAM -> TIPO ID PARENTESIS PARAM_AUX .

    RPAREN          reduce using rule 22 (PARAM -> TIPO ID PARENTESIS PARAM_AUX .)


state 148

    (23) PARAM_AUX -> COMA . PARAM
    (22) PARAM -> . TIPO ID PARENTESIS PARAM_AUX
    (8) TIPO -> . INT
    (9) TIPO -> . FLOAT
    (10) TIPO -> . CHAR
    (11) TIPO -> . STRING

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18

    PARAM                          shift and go to state 165
    TIPO                           shift and go to state 55

state 149

    (24) PARAM_AUX -> empty .

    RPAREN          reduce using rule 24 (PARAM_AUX -> empty .)


state 150

    (25) PARENTESIS -> LSTAPLE RSTAPLE .
    (26) PARENTESIS -> LSTAPLE RSTAPLE . LSTAPLE RSTAPLE

    COMA            reduce using rule 25 (PARENTESIS -> LSTAPLE RSTAPLE .)
    RPAREN          reduce using rule 25 (PARENTESIS -> LSTAPLE RSTAPLE .)
    LSTAPLE         shift and go to state 166


state 151

    (20) FUNCTION -> FUNCION TIPO ID LPAREN PARAM RPAREN VARS BLOQUE .

    FUNCION         reduce using rule 20 (FUNCTION -> FUNCION TIPO ID LPAREN PARAM RPAREN VARS BLOQUE .)
    PRINCIPAL       reduce using rule 20 (FUNCTION -> FUNCION TIPO ID LPAREN PARAM RPAREN VARS BLOQUE .)


state 152

    (21) FUNCTION -> FUNCION VOID ID LPAREN PARAM RPAREN VARS BLOQUE .

    FUNCION         reduce using rule 21 (FUNCTION -> FUNCION VOID ID LPAREN PARAM RPAREN VARS BLOQUE .)
    PRINCIPAL       reduce using rule 21 (FUNCTION -> FUNCION VOID ID LPAREN PARAM RPAREN VARS BLOQUE .)


state 153

    (15) ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .

    DOTCOMA         reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    COMA            reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    DET_ARR         reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    TRANS_ARR       reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    INV_ARR         reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    MULT            reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    DIV             reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    MOD             reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    PLUS            reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    MINUS           reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    MORE            reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    LESS            reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    COMPARE         reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    DIFFERENT       reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    MOREEQUAL       reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    LESSEQUAL       reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    AND             reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    OR              reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    RSTAPLE         reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    RPAREN          reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    HASTA           reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    HACER           reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    RBRACKET        reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    EQUAL           reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)


state 154

    (73) FUN_AUX -> EXPRESION COMA FUN_AUX .

    RPAREN          reduce using rule 73 (FUN_AUX -> EXPRESION COMA FUN_AUX .)


state 155

    (37) ASIGNACION -> ID ARRDIM EQUAL . EXPRESION
    (38) ASIGNACION -> ID ARRDIM EQUAL . CTE_ARR
    (39) EXPRESION -> . SUBEXP AND SUBEXP
    (40) EXPRESION -> . SUBEXP OR SUBEXP
    (41) EXPRESION -> . SUBEXP
    (99) CTE_ARR -> . LBRACKET CTE_ARR_AUX RBRACKET
    (100) CTE_ARR -> . LBRACKET CTE_ARR_AUX2 RBRACKET
    (42) SUBEXP -> . EXP
    (43) SUBEXP -> . EXP COMPARACION EXP
    (50) EXP -> . TERMINO
    (51) EXP -> . TERMINO PLUS EXP
    (52) EXP -> . TERMINO MINUS EXP
    (53) TERMINO -> . FACTOR
    (54) TERMINO -> . FACTOR MULT TERMINO
    (55) TERMINO -> . FACTOR DIV TERMINO
    (56) TERMINO -> . FACTOR MOD TERMINO
    (57) FACTOR -> . LPAREN EXPRESION RPAREN
    (58) FACTOR -> . PLUS CTE
    (59) FACTOR -> . MINUS CTE
    (60) FACTOR -> . NOT CTE
    (61) FACTOR -> . CTE ARROP
    (62) FACTOR -> . CTE
    (63) CTE -> . CTE_I
    (64) CTE -> . CTE_F
    (65) CTE -> . CTE_CH
    (66) CTE -> . CTE_STRING
    (67) CTE -> . FUN
    (68) CTE -> . ID ARRDIM
    (72) FUN -> . ID LPAREN FUN_AUX RPAREN

    LBRACKET        shift and go to state 169
    LPAREN          shift and go to state 45
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    NOT             shift and go to state 47
    CTE_I           shift and go to state 48
    CTE_F           shift and go to state 49
    CTE_CH          shift and go to state 50
    CTE_STRING      shift and go to state 51
    ID              shift and go to state 53

    EXPRESION                      shift and go to state 167
    CTE_ARR                        shift and go to state 168
    SUBEXP                         shift and go to state 39
    EXP                            shift and go to state 40
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 44
    CTE                            shift and go to state 46
    FUN                            shift and go to state 52

state 156

    (89) WRITE -> ESCRIBE LPAREN WRITE_AUX . RPAREN

    RPAREN          shift and go to state 170


state 157

    (90) WRITE_AUX -> EXPRESION . WRITE_AUXSUB
    (91) WRITE_AUXSUB -> . COMA WRITE_AUX
    (92) WRITE_AUXSUB -> . empty
    (1) empty -> .

    COMA            shift and go to state 172
    RPAREN          reduce using rule 1 (empty -> .)

    WRITE_AUXSUB                   shift and go to state 171
    empty                          shift and go to state 173

state 158

    (93) READ -> LEE LPAREN READ_AUX . RPAREN

    RPAREN          shift and go to state 174


state 159

    (94) READ_AUX -> ID . ARRDIM READ_AUXSUB
    (14) ARRDIM -> . LSTAPLE EXPRESION RSTAPLE
    (15) ARRDIM -> . LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE
    (16) ARRDIM -> . LSTAPLE EXPRESION COMA EXPRESION RSTAPLE
    (17) ARRDIM -> . empty
    (1) empty -> .

    LSTAPLE         shift and go to state 31
    COMA            reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)

    ARRDIM                         shift and go to state 175
    empty                          shift and go to state 32

state 160

    (97) RETURN -> REGRESA LPAREN EXPRESION . RPAREN

    RPAREN          shift and go to state 176


state 161

    (98) RETURN -> REGRESA LPAREN NULL . RPAREN

    RPAREN          shift and go to state 177


state 162

    (79) IF -> SI LPAREN EXPRESION . RPAREN ENTONCES BLOQUE IF_AUX
    (80) IF -> SI LPAREN EXPRESION . RPAREN ENTONCES COND

    RPAREN          shift and go to state 178


state 163

    (87) FOR -> DESDE ASIGNACION HASTA . EXPRESION HACER BLOQUE
    (88) FOR -> DESDE ASIGNACION HASTA . EXPRESION HACER COND
    (39) EXPRESION -> . SUBEXP AND SUBEXP
    (40) EXPRESION -> . SUBEXP OR SUBEXP
    (41) EXPRESION -> . SUBEXP
    (42) SUBEXP -> . EXP
    (43) SUBEXP -> . EXP COMPARACION EXP
    (50) EXP -> . TERMINO
    (51) EXP -> . TERMINO PLUS EXP
    (52) EXP -> . TERMINO MINUS EXP
    (53) TERMINO -> . FACTOR
    (54) TERMINO -> . FACTOR MULT TERMINO
    (55) TERMINO -> . FACTOR DIV TERMINO
    (56) TERMINO -> . FACTOR MOD TERMINO
    (57) FACTOR -> . LPAREN EXPRESION RPAREN
    (58) FACTOR -> . PLUS CTE
    (59) FACTOR -> . MINUS CTE
    (60) FACTOR -> . NOT CTE
    (61) FACTOR -> . CTE ARROP
    (62) FACTOR -> . CTE
    (63) CTE -> . CTE_I
    (64) CTE -> . CTE_F
    (65) CTE -> . CTE_CH
    (66) CTE -> . CTE_STRING
    (67) CTE -> . FUN
    (68) CTE -> . ID ARRDIM
    (72) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 45
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    NOT             shift and go to state 47
    CTE_I           shift and go to state 48
    CTE_F           shift and go to state 49
    CTE_CH          shift and go to state 50
    CTE_STRING      shift and go to state 51
    ID              shift and go to state 53

    EXPRESION                      shift and go to state 179
    SUBEXP                         shift and go to state 39
    EXP                            shift and go to state 40
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 44
    CTE                            shift and go to state 46
    FUN                            shift and go to state 52

state 164

    (83) WHILE -> MIENTRAS LPAREN EXPRESION . RPAREN WHILE_AUX BLOQUE
    (84) WHILE -> MIENTRAS LPAREN EXPRESION . RPAREN WHILE_AUX COND

    RPAREN          shift and go to state 180


state 165

    (23) PARAM_AUX -> COMA PARAM .

    RPAREN          reduce using rule 23 (PARAM_AUX -> COMA PARAM .)


state 166

    (26) PARENTESIS -> LSTAPLE RSTAPLE LSTAPLE . RSTAPLE

    RSTAPLE         shift and go to state 181


state 167

    (37) ASIGNACION -> ID ARRDIM EQUAL EXPRESION .

    DOTCOMA         reduce using rule 37 (ASIGNACION -> ID ARRDIM EQUAL EXPRESION .)
    HASTA           reduce using rule 37 (ASIGNACION -> ID ARRDIM EQUAL EXPRESION .)


state 168

    (38) ASIGNACION -> ID ARRDIM EQUAL CTE_ARR .

    DOTCOMA         reduce using rule 38 (ASIGNACION -> ID ARRDIM EQUAL CTE_ARR .)
    HASTA           reduce using rule 38 (ASIGNACION -> ID ARRDIM EQUAL CTE_ARR .)


state 169

    (99) CTE_ARR -> LBRACKET . CTE_ARR_AUX RBRACKET
    (100) CTE_ARR -> LBRACKET . CTE_ARR_AUX2 RBRACKET
    (101) CTE_ARR_AUX -> . CTE
    (102) CTE_ARR_AUX -> . CTE_ARR_AUXSUB
    (105) CTE_ARR_AUX2 -> . LBRACKET CTE_ARR_AUX RBRACKET CTE_ARR_AUX2SUB
    (63) CTE -> . CTE_I
    (64) CTE -> . CTE_F
    (65) CTE -> . CTE_CH
    (66) CTE -> . CTE_STRING
    (67) CTE -> . FUN
    (68) CTE -> . ID ARRDIM
    (103) CTE_ARR_AUXSUB -> . COMA CTE_ARR_AUX
    (104) CTE_ARR_AUXSUB -> . empty
    (72) FUN -> . ID LPAREN FUN_AUX RPAREN
    (1) empty -> .

    LBRACKET        shift and go to state 182
    CTE_I           shift and go to state 48
    CTE_F           shift and go to state 49
    CTE_CH          shift and go to state 50
    CTE_STRING      shift and go to state 51
    ID              shift and go to state 53
    COMA            shift and go to state 187
    RBRACKET        reduce using rule 1 (empty -> .)

    CTE_ARR_AUX                    shift and go to state 183
    CTE_ARR_AUX2                   shift and go to state 184
    CTE                            shift and go to state 185
    CTE_ARR_AUXSUB                 shift and go to state 186
    FUN                            shift and go to state 52
    empty                          shift and go to state 188

state 170

    (89) WRITE -> ESCRIBE LPAREN WRITE_AUX RPAREN .

    DOTCOMA         reduce using rule 89 (WRITE -> ESCRIBE LPAREN WRITE_AUX RPAREN .)


state 171

    (90) WRITE_AUX -> EXPRESION WRITE_AUXSUB .

    RPAREN          reduce using rule 90 (WRITE_AUX -> EXPRESION WRITE_AUXSUB .)


state 172

    (91) WRITE_AUXSUB -> COMA . WRITE_AUX
    (90) WRITE_AUX -> . EXPRESION WRITE_AUXSUB
    (39) EXPRESION -> . SUBEXP AND SUBEXP
    (40) EXPRESION -> . SUBEXP OR SUBEXP
    (41) EXPRESION -> . SUBEXP
    (42) SUBEXP -> . EXP
    (43) SUBEXP -> . EXP COMPARACION EXP
    (50) EXP -> . TERMINO
    (51) EXP -> . TERMINO PLUS EXP
    (52) EXP -> . TERMINO MINUS EXP
    (53) TERMINO -> . FACTOR
    (54) TERMINO -> . FACTOR MULT TERMINO
    (55) TERMINO -> . FACTOR DIV TERMINO
    (56) TERMINO -> . FACTOR MOD TERMINO
    (57) FACTOR -> . LPAREN EXPRESION RPAREN
    (58) FACTOR -> . PLUS CTE
    (59) FACTOR -> . MINUS CTE
    (60) FACTOR -> . NOT CTE
    (61) FACTOR -> . CTE ARROP
    (62) FACTOR -> . CTE
    (63) CTE -> . CTE_I
    (64) CTE -> . CTE_F
    (65) CTE -> . CTE_CH
    (66) CTE -> . CTE_STRING
    (67) CTE -> . FUN
    (68) CTE -> . ID ARRDIM
    (72) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 45
    PLUS            shift and go to state 42
    MINUS           shift and go to state 43
    NOT             shift and go to state 47
    CTE_I           shift and go to state 48
    CTE_F           shift and go to state 49
    CTE_CH          shift and go to state 50
    CTE_STRING      shift and go to state 51
    ID              shift and go to state 53

    WRITE_AUX                      shift and go to state 189
    EXPRESION                      shift and go to state 157
    SUBEXP                         shift and go to state 39
    EXP                            shift and go to state 40
    TERMINO                        shift and go to state 41
    FACTOR                         shift and go to state 44
    CTE                            shift and go to state 46
    FUN                            shift and go to state 52

state 173

    (92) WRITE_AUXSUB -> empty .

    RPAREN          reduce using rule 92 (WRITE_AUXSUB -> empty .)


state 174

    (93) READ -> LEE LPAREN READ_AUX RPAREN .

    DOTCOMA         reduce using rule 93 (READ -> LEE LPAREN READ_AUX RPAREN .)


state 175

    (94) READ_AUX -> ID ARRDIM . READ_AUXSUB
    (95) READ_AUXSUB -> . COMA READ_AUX
    (96) READ_AUXSUB -> . empty
    (1) empty -> .

    COMA            shift and go to state 191
    RPAREN          reduce using rule 1 (empty -> .)

    READ_AUXSUB                    shift and go to state 190
    empty                          shift and go to state 192

state 176

    (97) RETURN -> REGRESA LPAREN EXPRESION RPAREN .

    DOTCOMA         reduce using rule 97 (RETURN -> REGRESA LPAREN EXPRESION RPAREN .)


state 177

    (98) RETURN -> REGRESA LPAREN NULL RPAREN .

    DOTCOMA         reduce using rule 98 (RETURN -> REGRESA LPAREN NULL RPAREN .)


state 178

    (79) IF -> SI LPAREN EXPRESION RPAREN . ENTONCES BLOQUE IF_AUX
    (80) IF -> SI LPAREN EXPRESION RPAREN . ENTONCES COND

    ENTONCES        shift and go to state 193


state 179

    (87) FOR -> DESDE ASIGNACION HASTA EXPRESION . HACER BLOQUE
    (88) FOR -> DESDE ASIGNACION HASTA EXPRESION . HACER COND

    HACER           shift and go to state 194


state 180

    (83) WHILE -> MIENTRAS LPAREN EXPRESION RPAREN . WHILE_AUX BLOQUE
    (84) WHILE -> MIENTRAS LPAREN EXPRESION RPAREN . WHILE_AUX COND
    (85) WHILE_AUX -> . HAZ
    (86) WHILE_AUX -> . empty
    (1) empty -> .

    HAZ             shift and go to state 196
    LBRACKET        reduce using rule 1 (empty -> .)
    SI              reduce using rule 1 (empty -> .)
    DESDE           reduce using rule 1 (empty -> .)
    MIENTRAS        reduce using rule 1 (empty -> .)

    WHILE_AUX                      shift and go to state 195
    empty                          shift and go to state 197

state 181

    (26) PARENTESIS -> LSTAPLE RSTAPLE LSTAPLE RSTAPLE .

    COMA            reduce using rule 26 (PARENTESIS -> LSTAPLE RSTAPLE LSTAPLE RSTAPLE .)
    RPAREN          reduce using rule 26 (PARENTESIS -> LSTAPLE RSTAPLE LSTAPLE RSTAPLE .)


state 182

    (105) CTE_ARR_AUX2 -> LBRACKET . CTE_ARR_AUX RBRACKET CTE_ARR_AUX2SUB
    (101) CTE_ARR_AUX -> . CTE
    (102) CTE_ARR_AUX -> . CTE_ARR_AUXSUB
    (63) CTE -> . CTE_I
    (64) CTE -> . CTE_F
    (65) CTE -> . CTE_CH
    (66) CTE -> . CTE_STRING
    (67) CTE -> . FUN
    (68) CTE -> . ID ARRDIM
    (103) CTE_ARR_AUXSUB -> . COMA CTE_ARR_AUX
    (104) CTE_ARR_AUXSUB -> . empty
    (72) FUN -> . ID LPAREN FUN_AUX RPAREN
    (1) empty -> .

    CTE_I           shift and go to state 48
    CTE_F           shift and go to state 49
    CTE_CH          shift and go to state 50
    CTE_STRING      shift and go to state 51
    ID              shift and go to state 53
    COMA            shift and go to state 187
    RBRACKET        reduce using rule 1 (empty -> .)

    CTE_ARR_AUX                    shift and go to state 198
    CTE                            shift and go to state 185
    CTE_ARR_AUXSUB                 shift and go to state 186
    FUN                            shift and go to state 52
    empty                          shift and go to state 188

state 183

    (99) CTE_ARR -> LBRACKET CTE_ARR_AUX . RBRACKET

    RBRACKET        shift and go to state 199


state 184

    (100) CTE_ARR -> LBRACKET CTE_ARR_AUX2 . RBRACKET

    RBRACKET        shift and go to state 200


state 185

    (101) CTE_ARR_AUX -> CTE .

    RBRACKET        reduce using rule 101 (CTE_ARR_AUX -> CTE .)


state 186

    (102) CTE_ARR_AUX -> CTE_ARR_AUXSUB .

    RBRACKET        reduce using rule 102 (CTE_ARR_AUX -> CTE_ARR_AUXSUB .)


state 187

    (103) CTE_ARR_AUXSUB -> COMA . CTE_ARR_AUX
    (101) CTE_ARR_AUX -> . CTE
    (102) CTE_ARR_AUX -> . CTE_ARR_AUXSUB
    (63) CTE -> . CTE_I
    (64) CTE -> . CTE_F
    (65) CTE -> . CTE_CH
    (66) CTE -> . CTE_STRING
    (67) CTE -> . FUN
    (68) CTE -> . ID ARRDIM
    (103) CTE_ARR_AUXSUB -> . COMA CTE_ARR_AUX
    (104) CTE_ARR_AUXSUB -> . empty
    (72) FUN -> . ID LPAREN FUN_AUX RPAREN
    (1) empty -> .

    CTE_I           shift and go to state 48
    CTE_F           shift and go to state 49
    CTE_CH          shift and go to state 50
    CTE_STRING      shift and go to state 51
    ID              shift and go to state 53
    COMA            shift and go to state 187
    RBRACKET        reduce using rule 1 (empty -> .)

    CTE_ARR_AUX                    shift and go to state 201
    CTE                            shift and go to state 185
    CTE_ARR_AUXSUB                 shift and go to state 186
    FUN                            shift and go to state 52
    empty                          shift and go to state 188

state 188

    (104) CTE_ARR_AUXSUB -> empty .

    RBRACKET        reduce using rule 104 (CTE_ARR_AUXSUB -> empty .)


state 189

    (91) WRITE_AUXSUB -> COMA WRITE_AUX .

    RPAREN          reduce using rule 91 (WRITE_AUXSUB -> COMA WRITE_AUX .)


state 190

    (94) READ_AUX -> ID ARRDIM READ_AUXSUB .

    RPAREN          reduce using rule 94 (READ_AUX -> ID ARRDIM READ_AUXSUB .)


state 191

    (95) READ_AUXSUB -> COMA . READ_AUX
    (94) READ_AUX -> . ID ARRDIM READ_AUXSUB

    ID              shift and go to state 159

    READ_AUX                       shift and go to state 202

state 192

    (96) READ_AUXSUB -> empty .

    RPAREN          reduce using rule 96 (READ_AUXSUB -> empty .)


state 193

    (79) IF -> SI LPAREN EXPRESION RPAREN ENTONCES . BLOQUE IF_AUX
    (80) IF -> SI LPAREN EXPRESION RPAREN ENTONCES . COND
    (28) BLOQUE -> . LBRACKET ESTATUTOS RBRACKET
    (76) COND -> . IF
    (77) COND -> . FOR
    (78) COND -> . WHILE
    (79) IF -> . SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX
    (80) IF -> . SI LPAREN EXPRESION RPAREN ENTONCES COND
    (87) FOR -> . DESDE ASIGNACION HASTA EXPRESION HACER BLOQUE
    (88) FOR -> . DESDE ASIGNACION HASTA EXPRESION HACER COND
    (83) WHILE -> . MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE
    (84) WHILE -> . MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX COND

    LBRACKET        shift and go to state 86
    SI              shift and go to state 120
    DESDE           shift and go to state 121
    MIENTRAS        shift and go to state 122

    BLOQUE                         shift and go to state 203
    COND                           shift and go to state 204
    IF                             shift and go to state 114
    FOR                            shift and go to state 115
    WHILE                          shift and go to state 116

state 194

    (87) FOR -> DESDE ASIGNACION HASTA EXPRESION HACER . BLOQUE
    (88) FOR -> DESDE ASIGNACION HASTA EXPRESION HACER . COND
    (28) BLOQUE -> . LBRACKET ESTATUTOS RBRACKET
    (76) COND -> . IF
    (77) COND -> . FOR
    (78) COND -> . WHILE
    (79) IF -> . SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX
    (80) IF -> . SI LPAREN EXPRESION RPAREN ENTONCES COND
    (87) FOR -> . DESDE ASIGNACION HASTA EXPRESION HACER BLOQUE
    (88) FOR -> . DESDE ASIGNACION HASTA EXPRESION HACER COND
    (83) WHILE -> . MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE
    (84) WHILE -> . MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX COND

    LBRACKET        shift and go to state 86
    SI              shift and go to state 120
    DESDE           shift and go to state 121
    MIENTRAS        shift and go to state 122

    BLOQUE                         shift and go to state 205
    COND                           shift and go to state 206
    IF                             shift and go to state 114
    FOR                            shift and go to state 115
    WHILE                          shift and go to state 116

state 195

    (83) WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX . BLOQUE
    (84) WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX . COND
    (28) BLOQUE -> . LBRACKET ESTATUTOS RBRACKET
    (76) COND -> . IF
    (77) COND -> . FOR
    (78) COND -> . WHILE
    (79) IF -> . SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX
    (80) IF -> . SI LPAREN EXPRESION RPAREN ENTONCES COND
    (87) FOR -> . DESDE ASIGNACION HASTA EXPRESION HACER BLOQUE
    (88) FOR -> . DESDE ASIGNACION HASTA EXPRESION HACER COND
    (83) WHILE -> . MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE
    (84) WHILE -> . MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX COND

    LBRACKET        shift and go to state 86
    SI              shift and go to state 120
    DESDE           shift and go to state 121
    MIENTRAS        shift and go to state 122

    BLOQUE                         shift and go to state 207
    COND                           shift and go to state 208
    IF                             shift and go to state 114
    FOR                            shift and go to state 115
    WHILE                          shift and go to state 116

state 196

    (85) WHILE_AUX -> HAZ .

    LBRACKET        reduce using rule 85 (WHILE_AUX -> HAZ .)
    SI              reduce using rule 85 (WHILE_AUX -> HAZ .)
    DESDE           reduce using rule 85 (WHILE_AUX -> HAZ .)
    MIENTRAS        reduce using rule 85 (WHILE_AUX -> HAZ .)


state 197

    (86) WHILE_AUX -> empty .

    LBRACKET        reduce using rule 86 (WHILE_AUX -> empty .)
    SI              reduce using rule 86 (WHILE_AUX -> empty .)
    DESDE           reduce using rule 86 (WHILE_AUX -> empty .)
    MIENTRAS        reduce using rule 86 (WHILE_AUX -> empty .)


state 198

    (105) CTE_ARR_AUX2 -> LBRACKET CTE_ARR_AUX . RBRACKET CTE_ARR_AUX2SUB

    RBRACKET        shift and go to state 209


state 199

    (99) CTE_ARR -> LBRACKET CTE_ARR_AUX RBRACKET .

    DOTCOMA         reduce using rule 99 (CTE_ARR -> LBRACKET CTE_ARR_AUX RBRACKET .)
    HASTA           reduce using rule 99 (CTE_ARR -> LBRACKET CTE_ARR_AUX RBRACKET .)


state 200

    (100) CTE_ARR -> LBRACKET CTE_ARR_AUX2 RBRACKET .

    DOTCOMA         reduce using rule 100 (CTE_ARR -> LBRACKET CTE_ARR_AUX2 RBRACKET .)
    HASTA           reduce using rule 100 (CTE_ARR -> LBRACKET CTE_ARR_AUX2 RBRACKET .)


state 201

    (103) CTE_ARR_AUXSUB -> COMA CTE_ARR_AUX .

    RBRACKET        reduce using rule 103 (CTE_ARR_AUXSUB -> COMA CTE_ARR_AUX .)


state 202

    (95) READ_AUXSUB -> COMA READ_AUX .

    RPAREN          reduce using rule 95 (READ_AUXSUB -> COMA READ_AUX .)


state 203

    (79) IF -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE . IF_AUX
    (81) IF_AUX -> . SINO BLOQUE
    (82) IF_AUX -> . empty
    (1) empty -> .

    SINO            shift and go to state 211
    ID              reduce using rule 1 (empty -> .)
    ESCRIBE         reduce using rule 1 (empty -> .)
    LEE             reduce using rule 1 (empty -> .)
    REGRESA         reduce using rule 1 (empty -> .)
    SI              reduce using rule 1 (empty -> .)
    DESDE           reduce using rule 1 (empty -> .)
    MIENTRAS        reduce using rule 1 (empty -> .)
    RBRACKET        reduce using rule 1 (empty -> .)

    IF_AUX                         shift and go to state 210
    empty                          shift and go to state 212

state 204

    (80) IF -> SI LPAREN EXPRESION RPAREN ENTONCES COND .

    ID              reduce using rule 80 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES COND .)
    ESCRIBE         reduce using rule 80 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES COND .)
    LEE             reduce using rule 80 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES COND .)
    REGRESA         reduce using rule 80 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES COND .)
    SI              reduce using rule 80 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES COND .)
    DESDE           reduce using rule 80 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES COND .)
    MIENTRAS        reduce using rule 80 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES COND .)
    RBRACKET        reduce using rule 80 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES COND .)


state 205

    (87) FOR -> DESDE ASIGNACION HASTA EXPRESION HACER BLOQUE .

    ID              reduce using rule 87 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER BLOQUE .)
    ESCRIBE         reduce using rule 87 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER BLOQUE .)
    LEE             reduce using rule 87 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER BLOQUE .)
    REGRESA         reduce using rule 87 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER BLOQUE .)
    SI              reduce using rule 87 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER BLOQUE .)
    DESDE           reduce using rule 87 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER BLOQUE .)
    MIENTRAS        reduce using rule 87 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER BLOQUE .)
    RBRACKET        reduce using rule 87 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER BLOQUE .)


state 206

    (88) FOR -> DESDE ASIGNACION HASTA EXPRESION HACER COND .

    ID              reduce using rule 88 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER COND .)
    ESCRIBE         reduce using rule 88 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER COND .)
    LEE             reduce using rule 88 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER COND .)
    REGRESA         reduce using rule 88 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER COND .)
    SI              reduce using rule 88 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER COND .)
    DESDE           reduce using rule 88 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER COND .)
    MIENTRAS        reduce using rule 88 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER COND .)
    RBRACKET        reduce using rule 88 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER COND .)


state 207

    (83) WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE .

    ID              reduce using rule 83 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE .)
    ESCRIBE         reduce using rule 83 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE .)
    LEE             reduce using rule 83 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE .)
    REGRESA         reduce using rule 83 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE .)
    SI              reduce using rule 83 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE .)
    DESDE           reduce using rule 83 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE .)
    MIENTRAS        reduce using rule 83 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE .)
    RBRACKET        reduce using rule 83 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE .)


state 208

    (84) WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX COND .

    ID              reduce using rule 84 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX COND .)
    ESCRIBE         reduce using rule 84 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX COND .)
    LEE             reduce using rule 84 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX COND .)
    REGRESA         reduce using rule 84 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX COND .)
    SI              reduce using rule 84 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX COND .)
    DESDE           reduce using rule 84 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX COND .)
    MIENTRAS        reduce using rule 84 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX COND .)
    RBRACKET        reduce using rule 84 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX COND .)


state 209

    (105) CTE_ARR_AUX2 -> LBRACKET CTE_ARR_AUX RBRACKET . CTE_ARR_AUX2SUB
    (106) CTE_ARR_AUX2SUB -> . COMA CTE_ARR_AUX2
    (107) CTE_ARR_AUX2SUB -> . empty
    (1) empty -> .

    COMA            shift and go to state 214
    RBRACKET        reduce using rule 1 (empty -> .)

    CTE_ARR_AUX2SUB                shift and go to state 213
    empty                          shift and go to state 215

state 210

    (79) IF -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX .

    ID              reduce using rule 79 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX .)
    ESCRIBE         reduce using rule 79 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX .)
    LEE             reduce using rule 79 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX .)
    REGRESA         reduce using rule 79 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX .)
    SI              reduce using rule 79 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX .)
    DESDE           reduce using rule 79 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX .)
    MIENTRAS        reduce using rule 79 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX .)
    RBRACKET        reduce using rule 79 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX .)


state 211

    (81) IF_AUX -> SINO . BLOQUE
    (28) BLOQUE -> . LBRACKET ESTATUTOS RBRACKET

    LBRACKET        shift and go to state 86

    BLOQUE                         shift and go to state 216

state 212

    (82) IF_AUX -> empty .

    ID              reduce using rule 82 (IF_AUX -> empty .)
    ESCRIBE         reduce using rule 82 (IF_AUX -> empty .)
    LEE             reduce using rule 82 (IF_AUX -> empty .)
    REGRESA         reduce using rule 82 (IF_AUX -> empty .)
    SI              reduce using rule 82 (IF_AUX -> empty .)
    DESDE           reduce using rule 82 (IF_AUX -> empty .)
    MIENTRAS        reduce using rule 82 (IF_AUX -> empty .)
    RBRACKET        reduce using rule 82 (IF_AUX -> empty .)


state 213

    (105) CTE_ARR_AUX2 -> LBRACKET CTE_ARR_AUX RBRACKET CTE_ARR_AUX2SUB .

    RBRACKET        reduce using rule 105 (CTE_ARR_AUX2 -> LBRACKET CTE_ARR_AUX RBRACKET CTE_ARR_AUX2SUB .)


state 214

    (106) CTE_ARR_AUX2SUB -> COMA . CTE_ARR_AUX2
    (105) CTE_ARR_AUX2 -> . LBRACKET CTE_ARR_AUX RBRACKET CTE_ARR_AUX2SUB

    LBRACKET        shift and go to state 182

    CTE_ARR_AUX2                   shift and go to state 217

state 215

    (107) CTE_ARR_AUX2SUB -> empty .

    RBRACKET        reduce using rule 107 (CTE_ARR_AUX2SUB -> empty .)


state 216

    (81) IF_AUX -> SINO BLOQUE .

    ID              reduce using rule 81 (IF_AUX -> SINO BLOQUE .)
    ESCRIBE         reduce using rule 81 (IF_AUX -> SINO BLOQUE .)
    LEE             reduce using rule 81 (IF_AUX -> SINO BLOQUE .)
    REGRESA         reduce using rule 81 (IF_AUX -> SINO BLOQUE .)
    SI              reduce using rule 81 (IF_AUX -> SINO BLOQUE .)
    DESDE           reduce using rule 81 (IF_AUX -> SINO BLOQUE .)
    MIENTRAS        reduce using rule 81 (IF_AUX -> SINO BLOQUE .)
    RBRACKET        reduce using rule 81 (IF_AUX -> SINO BLOQUE .)


state 217

    (106) CTE_ARR_AUX2SUB -> COMA CTE_ARR_AUX2 .

    RBRACKET        reduce using rule 106 (CTE_ARR_AUX2SUB -> COMA CTE_ARR_AUX2 .)

