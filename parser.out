Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> PROGRAM
Rule 1     empty -> <empty>
Rule 2     PROGRAM -> PROGRAMA ID DOTCOMA VARS FUNCTIONS MAIN
Rule 3     MAIN -> PRINCIPAL r_save_func LPAREN RPAREN r_register_princ VARS BLOQUE
Rule 4     VARS -> VAR VAR_AUX
Rule 5     VARS -> empty
Rule 6     VAR_AUX -> TIPO IDS VAR_AUX
Rule 7     VAR_AUX -> empty
Rule 8     TIPO -> INT r_save_type
Rule 9     TIPO -> FLOAT r_save_type
Rule 10    TIPO -> CHAR r_save_type
Rule 11    TIPO -> STRING r_save_type
Rule 12    IDS -> ID r_register_var ARRDIM DOTCOMA
Rule 13    IDS -> ID r_register_var ARRDIM COMA IDS
Rule 14    ARRDIM -> LSTAPLE EXPRESION RSTAPLE
Rule 15    ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE
Rule 16    ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE
Rule 17    ARRDIM -> empty
Rule 18    FUNCTIONS -> FUNCTION FUNCTIONS
Rule 19    FUNCTIONS -> empty
Rule 20    FUNCTION -> FUNCION TIPO ID r_save_func r_register_func LPAREN PARAM RPAREN VARS BLOQUE
Rule 21    FUNCTION -> FUNCION VOID r_save_type ID r_save_func r_register_func LPAREN PARAM RPAREN VARS BLOQUE
Rule 22    PARAM -> TIPO ID r_register_var PARENTESIS PARAM_AUX
Rule 23    PARAM_AUX -> COMA PARAM
Rule 24    PARAM_AUX -> empty
Rule 25    PARENTESIS -> LSTAPLE RSTAPLE
Rule 26    PARENTESIS -> LSTAPLE RSTAPLE LSTAPLE RSTAPLE
Rule 27    PARENTESIS -> empty
Rule 28    BLOQUE -> LBRACKET ESTATUTOS RBRACKET
Rule 29    ESTATUTOS -> ESTATUTO ESTATUTOS
Rule 30    ESTATUTOS -> empty
Rule 31    ESTATUTO -> ASIGNACION DOTCOMA
Rule 32    ESTATUTO -> FUN DOTCOMA
Rule 33    ESTATUTO -> COND
Rule 34    ESTATUTO -> WRITE DOTCOMA
Rule 35    ESTATUTO -> READ DOTCOMA
Rule 36    ESTATUTO -> RETURN DOTCOMA
Rule 37    ASIGNACION -> ID ARRDIM EQUAL r_seen_operator EXPRESION
Rule 38    ASIGNACION -> ID ARRDIM EQUAL r_seen_operator CTE_ARR
Rule 39    EXPRESION -> SUBEXP r_seen_subexp EXPRESION_AUX
Rule 40    EXPRESION_AUX -> AND r_seen_operator EXPRESION
Rule 41    EXPRESION_AUX -> OR r_seen_operator EXPRESION
Rule 42    EXPRESION_AUX -> empty
Rule 43    SUBEXP -> EXP r_seen_exp SUBEXP_AUX
Rule 44    SUBEXP_AUX -> COMPARACION SUBEXP
Rule 45    SUBEXP_AUX -> empty
Rule 46    COMPARACION -> MORE r_seen_operator
Rule 47    COMPARACION -> LESS r_seen_operator
Rule 48    COMPARACION -> COMPARE r_seen_operator
Rule 49    COMPARACION -> DIFFERENT r_seen_operator
Rule 50    COMPARACION -> MOREEQUAL r_seen_operator
Rule 51    COMPARACION -> LESSEQUAL r_seen_operator
Rule 52    EXP -> TERMINO r_seen_term EXP_AUX
Rule 53    EXP_AUX -> PLUS r_seen_operator EXP
Rule 54    EXP_AUX -> MINUS r_seen_operator EXP
Rule 55    EXP_AUX -> empty
Rule 56    TERMINO -> FACTOR r_seen_factor TERMINO_AUX
Rule 57    TERMINO_AUX -> MULT r_seen_operator TERMINO
Rule 58    TERMINO_AUX -> DIV r_seen_operator TERMINO
Rule 59    TERMINO_AUX -> MOD r_seen_operator TERMINO
Rule 60    TERMINO_AUX -> empty
Rule 61    FACTOR -> LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator
Rule 62    FACTOR -> PLUS r_seen_unary_operator CTE
Rule 63    FACTOR -> MINUS r_seen_unary_operator CTE
Rule 64    FACTOR -> NOT r_seen_unary_operator CTE
Rule 65    FACTOR -> CTE ARROP
Rule 66    FACTOR -> CTE
Rule 67    CTE -> CTE_I r_seen_operand
Rule 68    CTE -> CTE_F r_seen_operand
Rule 69    CTE -> CTE_CH r_seen_operand
Rule 70    CTE -> CTE_STRING r_seen_operand
Rule 71    CTE -> FUN
Rule 72    CTE -> ID ARRDIM
Rule 73    ARROP -> DET_ARR
Rule 74    ARROP -> TRANS_ARR
Rule 75    ARROP -> INV_ARR
Rule 76    FUN -> ID LPAREN FUN_AUX RPAREN
Rule 77    FUN_AUX -> EXPRESION COMA FUN_AUX
Rule 78    FUN_AUX -> EXPRESION
Rule 79    FUN_AUX -> empty
Rule 80    COND -> IF
Rule 81    COND -> FOR
Rule 82    COND -> WHILE
Rule 83    IF -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX
Rule 84    IF -> SI LPAREN EXPRESION RPAREN ENTONCES COND
Rule 85    IF_AUX -> SINO BLOQUE
Rule 86    IF_AUX -> empty
Rule 87    WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE
Rule 88    WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX COND
Rule 89    WHILE_AUX -> HAZ
Rule 90    WHILE_AUX -> empty
Rule 91    FOR -> DESDE ASIGNACION HASTA EXPRESION HACER BLOQUE
Rule 92    FOR -> DESDE ASIGNACION HASTA EXPRESION HACER COND
Rule 93    WRITE -> ESCRIBE LPAREN WRITE_AUX RPAREN
Rule 94    WRITE_AUX -> EXPRESION WRITE_AUXSUB
Rule 95    WRITE_AUXSUB -> COMA WRITE_AUX
Rule 96    WRITE_AUXSUB -> empty
Rule 97    READ -> LEE LPAREN READ_AUX RPAREN
Rule 98    READ_AUX -> ID ARRDIM READ_AUXSUB
Rule 99    READ_AUXSUB -> COMA READ_AUX
Rule 100   READ_AUXSUB -> empty
Rule 101   RETURN -> REGRESA LPAREN EXPRESION RPAREN
Rule 102   RETURN -> REGRESA LPAREN NULL RPAREN
Rule 103   CTE_ARR -> LBRACKET CTE_ARR_AUX RBRACKET
Rule 104   CTE_ARR -> LBRACKET CTE_ARR_AUX2 RBRACKET
Rule 105   CTE_ARR_AUX -> CTE
Rule 106   CTE_ARR_AUX -> CTE_ARR_AUXSUB
Rule 107   CTE_ARR_AUXSUB -> COMA CTE_ARR_AUX
Rule 108   CTE_ARR_AUXSUB -> empty
Rule 109   CTE_ARR_AUX2 -> LBRACKET CTE_ARR_AUX RBRACKET CTE_ARR_AUX2SUB
Rule 110   CTE_ARR_AUX2SUB -> COMA CTE_ARR_AUX2
Rule 111   CTE_ARR_AUX2SUB -> empty
Rule 112   r_save_type -> <empty>
Rule 113   r_save_func -> <empty>
Rule 114   r_register_func -> <empty>
Rule 115   r_register_var -> <empty>
Rule 116   r_register_princ -> <empty>
Rule 117   r_seen_operand -> <empty>
Rule 118   r_seen_operator -> <empty>
Rule 119   r_seen_subexp -> <empty>
Rule 120   r_seen_exp -> <empty>
Rule 121   r_seen_term -> <empty>
Rule 122   r_seen_factor -> <empty>
Rule 123   r_seen_unary_operator -> <empty>

Terminals, with rules where they appear

AND                  : 40
CHAR                 : 10
COMA                 : 13 16 23 77 95 99 107 110
COMMENT              : 
COMPARE              : 48
CTE_CH               : 69
CTE_F                : 68
CTE_I                : 67
CTE_STRING           : 70
DESDE                : 91 92
DET_ARR              : 73
DIFFERENT            : 49
DIV                  : 58
DOTCOMA              : 2 12 31 32 34 35 36
ENTONCES             : 83 84
EQUAL                : 37 38
ESCRIBE              : 93
FLOAT                : 9
FUNCION              : 20 21
HACER                : 91 92
HASTA                : 91 92
HAZ                  : 89
ID                   : 2 12 13 20 21 22 37 38 72 76 98
INT                  : 8
INV_ARR              : 75
LBRACKET             : 28 103 104 109
LEE                  : 97
LESS                 : 47
LESSEQUAL            : 51
LPAREN               : 3 20 21 61 76 83 84 87 88 93 97 101 102
LSTAPLE              : 14 15 15 16 25 26 26
MIENTRAS             : 87 88
MINUS                : 54 63
MOD                  : 59
MORE                 : 46
MOREEQUAL            : 50
MULT                 : 57
NOT                  : 64
NULL                 : 102
OR                   : 41
PLUS                 : 53 62
PRINCIPAL            : 3
PROGRAMA             : 2
RBRACKET             : 28 103 104 109
REGRESA              : 101 102
RPAREN               : 3 20 21 61 76 83 84 87 88 93 97 101 102
RSTAPLE              : 14 15 15 16 25 26 26
SI                   : 83 84
SINO                 : 85
STRING               : 11
TRANS_ARR            : 74
VAR                  : 4
VOID                 : 21
error                : 

Nonterminals, with rules where they appear

ARRDIM               : 12 13 37 38 72 98
ARROP                : 65
ASIGNACION           : 31 91 92
BLOQUE               : 3 20 21 83 85 87 91
COMPARACION          : 44
COND                 : 33 84 88 92
CTE                  : 62 63 64 65 66 105
CTE_ARR              : 38
CTE_ARR_AUX          : 103 107 109
CTE_ARR_AUX2         : 104 110
CTE_ARR_AUX2SUB      : 109
CTE_ARR_AUXSUB       : 106
ESTATUTO             : 29
ESTATUTOS            : 28 29
EXP                  : 43 53 54
EXPRESION            : 14 15 15 16 16 37 40 41 61 77 78 83 84 87 88 91 92 94 101
EXPRESION_AUX        : 39
EXP_AUX              : 52
FACTOR               : 56
FOR                  : 81
FUN                  : 32 71
FUNCTION             : 18
FUNCTIONS            : 2 18
FUN_AUX              : 76 77
IDS                  : 6 13
IF                   : 80
IF_AUX               : 83
MAIN                 : 2
PARAM                : 20 21 23
PARAM_AUX            : 22
PARENTESIS           : 22
PROGRAM              : 0
READ                 : 35
READ_AUX             : 97 99
READ_AUXSUB          : 98
RETURN               : 36
SUBEXP               : 39 44
SUBEXP_AUX           : 43
TERMINO              : 52 57 58 59
TERMINO_AUX          : 56
TIPO                 : 6 20 22
VARS                 : 2 3 20 21
VAR_AUX              : 4 6
WHILE                : 82
WHILE_AUX            : 87 88
WRITE                : 34
WRITE_AUX            : 93 95
WRITE_AUXSUB         : 94
empty                : 5 7 17 19 24 27 30 42 45 55 60 79 86 90 96 100 108 111
r_register_func      : 20 21
r_register_princ     : 3
r_register_var       : 12 13 22
r_save_func          : 3 20 21
r_save_type          : 8 9 10 11 21
r_seen_exp           : 43
r_seen_factor        : 56
r_seen_operand       : 67 68 69 70
r_seen_operator      : 37 38 40 41 46 47 48 49 50 51 53 54 57 58 59 61 61
r_seen_subexp        : 39
r_seen_term          : 52
r_seen_unary_operator : 62 63 64

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (2) PROGRAM -> . PROGRAMA ID DOTCOMA VARS FUNCTIONS MAIN

    PROGRAMA        shift and go to state 2

    PROGRAM                        shift and go to state 1

state 1

    (0) S' -> PROGRAM .



state 2

    (2) PROGRAM -> PROGRAMA . ID DOTCOMA VARS FUNCTIONS MAIN

    ID              shift and go to state 3


state 3

    (2) PROGRAM -> PROGRAMA ID . DOTCOMA VARS FUNCTIONS MAIN

    DOTCOMA         shift and go to state 4


state 4

    (2) PROGRAM -> PROGRAMA ID DOTCOMA . VARS FUNCTIONS MAIN
    (4) VARS -> . VAR VAR_AUX
    (5) VARS -> . empty
    (1) empty -> .

    VAR             shift and go to state 6
    FUNCION         reduce using rule 1 (empty -> .)
    PRINCIPAL       reduce using rule 1 (empty -> .)

    VARS                           shift and go to state 5
    empty                          shift and go to state 7

state 5

    (2) PROGRAM -> PROGRAMA ID DOTCOMA VARS . FUNCTIONS MAIN
    (18) FUNCTIONS -> . FUNCTION FUNCTIONS
    (19) FUNCTIONS -> . empty
    (20) FUNCTION -> . FUNCION TIPO ID r_save_func r_register_func LPAREN PARAM RPAREN VARS BLOQUE
    (21) FUNCTION -> . FUNCION VOID r_save_type ID r_save_func r_register_func LPAREN PARAM RPAREN VARS BLOQUE
    (1) empty -> .

    FUNCION         shift and go to state 11
    PRINCIPAL       reduce using rule 1 (empty -> .)

    FUNCTIONS                      shift and go to state 8
    FUNCTION                       shift and go to state 9
    empty                          shift and go to state 10

state 6

    (4) VARS -> VAR . VAR_AUX
    (6) VAR_AUX -> . TIPO IDS VAR_AUX
    (7) VAR_AUX -> . empty
    (8) TIPO -> . INT r_save_type
    (9) TIPO -> . FLOAT r_save_type
    (10) TIPO -> . CHAR r_save_type
    (11) TIPO -> . STRING r_save_type
    (1) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    FUNCION         reduce using rule 1 (empty -> .)
    PRINCIPAL       reduce using rule 1 (empty -> .)
    LBRACKET        reduce using rule 1 (empty -> .)

    VAR_AUX                        shift and go to state 12
    TIPO                           shift and go to state 13
    empty                          shift and go to state 14

state 7

    (5) VARS -> empty .

    FUNCION         reduce using rule 5 (VARS -> empty .)
    PRINCIPAL       reduce using rule 5 (VARS -> empty .)
    LBRACKET        reduce using rule 5 (VARS -> empty .)


state 8

    (2) PROGRAM -> PROGRAMA ID DOTCOMA VARS FUNCTIONS . MAIN
    (3) MAIN -> . PRINCIPAL r_save_func LPAREN RPAREN r_register_princ VARS BLOQUE

    PRINCIPAL       shift and go to state 20

    MAIN                           shift and go to state 19

state 9

    (18) FUNCTIONS -> FUNCTION . FUNCTIONS
    (18) FUNCTIONS -> . FUNCTION FUNCTIONS
    (19) FUNCTIONS -> . empty
    (20) FUNCTION -> . FUNCION TIPO ID r_save_func r_register_func LPAREN PARAM RPAREN VARS BLOQUE
    (21) FUNCTION -> . FUNCION VOID r_save_type ID r_save_func r_register_func LPAREN PARAM RPAREN VARS BLOQUE
    (1) empty -> .

    FUNCION         shift and go to state 11
    PRINCIPAL       reduce using rule 1 (empty -> .)

    FUNCTION                       shift and go to state 9
    FUNCTIONS                      shift and go to state 21
    empty                          shift and go to state 10

state 10

    (19) FUNCTIONS -> empty .

    PRINCIPAL       reduce using rule 19 (FUNCTIONS -> empty .)


state 11

    (20) FUNCTION -> FUNCION . TIPO ID r_save_func r_register_func LPAREN PARAM RPAREN VARS BLOQUE
    (21) FUNCTION -> FUNCION . VOID r_save_type ID r_save_func r_register_func LPAREN PARAM RPAREN VARS BLOQUE
    (8) TIPO -> . INT r_save_type
    (9) TIPO -> . FLOAT r_save_type
    (10) TIPO -> . CHAR r_save_type
    (11) TIPO -> . STRING r_save_type

    VOID            shift and go to state 23
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18

    TIPO                           shift and go to state 22

state 12

    (4) VARS -> VAR VAR_AUX .

    FUNCION         reduce using rule 4 (VARS -> VAR VAR_AUX .)
    PRINCIPAL       reduce using rule 4 (VARS -> VAR VAR_AUX .)
    LBRACKET        reduce using rule 4 (VARS -> VAR VAR_AUX .)


state 13

    (6) VAR_AUX -> TIPO . IDS VAR_AUX
    (12) IDS -> . ID r_register_var ARRDIM DOTCOMA
    (13) IDS -> . ID r_register_var ARRDIM COMA IDS

    ID              shift and go to state 25

    IDS                            shift and go to state 24

state 14

    (7) VAR_AUX -> empty .

    FUNCION         reduce using rule 7 (VAR_AUX -> empty .)
    PRINCIPAL       reduce using rule 7 (VAR_AUX -> empty .)
    LBRACKET        reduce using rule 7 (VAR_AUX -> empty .)


state 15

    (8) TIPO -> INT . r_save_type
    (112) r_save_type -> .

    ID              reduce using rule 112 (r_save_type -> .)

    r_save_type                    shift and go to state 26

state 16

    (9) TIPO -> FLOAT . r_save_type
    (112) r_save_type -> .

    ID              reduce using rule 112 (r_save_type -> .)

    r_save_type                    shift and go to state 27

state 17

    (10) TIPO -> CHAR . r_save_type
    (112) r_save_type -> .

    ID              reduce using rule 112 (r_save_type -> .)

    r_save_type                    shift and go to state 28

state 18

    (11) TIPO -> STRING . r_save_type
    (112) r_save_type -> .

    ID              reduce using rule 112 (r_save_type -> .)

    r_save_type                    shift and go to state 29

state 19

    (2) PROGRAM -> PROGRAMA ID DOTCOMA VARS FUNCTIONS MAIN .

    $end            reduce using rule 2 (PROGRAM -> PROGRAMA ID DOTCOMA VARS FUNCTIONS MAIN .)


state 20

    (3) MAIN -> PRINCIPAL . r_save_func LPAREN RPAREN r_register_princ VARS BLOQUE
    (113) r_save_func -> .

    LPAREN          reduce using rule 113 (r_save_func -> .)

    r_save_func                    shift and go to state 30

state 21

    (18) FUNCTIONS -> FUNCTION FUNCTIONS .

    PRINCIPAL       reduce using rule 18 (FUNCTIONS -> FUNCTION FUNCTIONS .)


state 22

    (20) FUNCTION -> FUNCION TIPO . ID r_save_func r_register_func LPAREN PARAM RPAREN VARS BLOQUE

    ID              shift and go to state 31


state 23

    (21) FUNCTION -> FUNCION VOID . r_save_type ID r_save_func r_register_func LPAREN PARAM RPAREN VARS BLOQUE
    (112) r_save_type -> .

    ID              reduce using rule 112 (r_save_type -> .)

    r_save_type                    shift and go to state 32

state 24

    (6) VAR_AUX -> TIPO IDS . VAR_AUX
    (6) VAR_AUX -> . TIPO IDS VAR_AUX
    (7) VAR_AUX -> . empty
    (8) TIPO -> . INT r_save_type
    (9) TIPO -> . FLOAT r_save_type
    (10) TIPO -> . CHAR r_save_type
    (11) TIPO -> . STRING r_save_type
    (1) empty -> .

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    FUNCION         reduce using rule 1 (empty -> .)
    PRINCIPAL       reduce using rule 1 (empty -> .)
    LBRACKET        reduce using rule 1 (empty -> .)

    TIPO                           shift and go to state 13
    VAR_AUX                        shift and go to state 33
    empty                          shift and go to state 14

state 25

    (12) IDS -> ID . r_register_var ARRDIM DOTCOMA
    (13) IDS -> ID . r_register_var ARRDIM COMA IDS
    (115) r_register_var -> .

    LSTAPLE         reduce using rule 115 (r_register_var -> .)
    DOTCOMA         reduce using rule 115 (r_register_var -> .)
    COMA            reduce using rule 115 (r_register_var -> .)

    r_register_var                 shift and go to state 34

state 26

    (8) TIPO -> INT r_save_type .

    ID              reduce using rule 8 (TIPO -> INT r_save_type .)


state 27

    (9) TIPO -> FLOAT r_save_type .

    ID              reduce using rule 9 (TIPO -> FLOAT r_save_type .)


state 28

    (10) TIPO -> CHAR r_save_type .

    ID              reduce using rule 10 (TIPO -> CHAR r_save_type .)


state 29

    (11) TIPO -> STRING r_save_type .

    ID              reduce using rule 11 (TIPO -> STRING r_save_type .)


state 30

    (3) MAIN -> PRINCIPAL r_save_func . LPAREN RPAREN r_register_princ VARS BLOQUE

    LPAREN          shift and go to state 35


state 31

    (20) FUNCTION -> FUNCION TIPO ID . r_save_func r_register_func LPAREN PARAM RPAREN VARS BLOQUE
    (113) r_save_func -> .

    LPAREN          reduce using rule 113 (r_save_func -> .)

    r_save_func                    shift and go to state 36

state 32

    (21) FUNCTION -> FUNCION VOID r_save_type . ID r_save_func r_register_func LPAREN PARAM RPAREN VARS BLOQUE

    ID              shift and go to state 37


state 33

    (6) VAR_AUX -> TIPO IDS VAR_AUX .

    FUNCION         reduce using rule 6 (VAR_AUX -> TIPO IDS VAR_AUX .)
    PRINCIPAL       reduce using rule 6 (VAR_AUX -> TIPO IDS VAR_AUX .)
    LBRACKET        reduce using rule 6 (VAR_AUX -> TIPO IDS VAR_AUX .)


state 34

    (12) IDS -> ID r_register_var . ARRDIM DOTCOMA
    (13) IDS -> ID r_register_var . ARRDIM COMA IDS
    (14) ARRDIM -> . LSTAPLE EXPRESION RSTAPLE
    (15) ARRDIM -> . LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE
    (16) ARRDIM -> . LSTAPLE EXPRESION COMA EXPRESION RSTAPLE
    (17) ARRDIM -> . empty
    (1) empty -> .

    LSTAPLE         shift and go to state 39
    DOTCOMA         reduce using rule 1 (empty -> .)
    COMA            reduce using rule 1 (empty -> .)

    ARRDIM                         shift and go to state 38
    empty                          shift and go to state 40

state 35

    (3) MAIN -> PRINCIPAL r_save_func LPAREN . RPAREN r_register_princ VARS BLOQUE

    RPAREN          shift and go to state 41


state 36

    (20) FUNCTION -> FUNCION TIPO ID r_save_func . r_register_func LPAREN PARAM RPAREN VARS BLOQUE
    (114) r_register_func -> .

    LPAREN          reduce using rule 114 (r_register_func -> .)

    r_register_func                shift and go to state 42

state 37

    (21) FUNCTION -> FUNCION VOID r_save_type ID . r_save_func r_register_func LPAREN PARAM RPAREN VARS BLOQUE
    (113) r_save_func -> .

    LPAREN          reduce using rule 113 (r_save_func -> .)

    r_save_func                    shift and go to state 43

state 38

    (12) IDS -> ID r_register_var ARRDIM . DOTCOMA
    (13) IDS -> ID r_register_var ARRDIM . COMA IDS

    DOTCOMA         shift and go to state 44
    COMA            shift and go to state 45


state 39

    (14) ARRDIM -> LSTAPLE . EXPRESION RSTAPLE
    (15) ARRDIM -> LSTAPLE . EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE
    (16) ARRDIM -> LSTAPLE . EXPRESION COMA EXPRESION RSTAPLE
    (39) EXPRESION -> . SUBEXP r_seen_subexp EXPRESION_AUX
    (43) SUBEXP -> . EXP r_seen_exp SUBEXP_AUX
    (52) EXP -> . TERMINO r_seen_term EXP_AUX
    (56) TERMINO -> . FACTOR r_seen_factor TERMINO_AUX
    (61) FACTOR -> . LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator
    (62) FACTOR -> . PLUS r_seen_unary_operator CTE
    (63) FACTOR -> . MINUS r_seen_unary_operator CTE
    (64) FACTOR -> . NOT r_seen_unary_operator CTE
    (65) FACTOR -> . CTE ARROP
    (66) FACTOR -> . CTE
    (67) CTE -> . CTE_I r_seen_operand
    (68) CTE -> . CTE_F r_seen_operand
    (69) CTE -> . CTE_CH r_seen_operand
    (70) CTE -> . CTE_STRING r_seen_operand
    (71) CTE -> . FUN
    (72) CTE -> . ID ARRDIM
    (76) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 54
    NOT             shift and go to state 55
    CTE_I           shift and go to state 56
    CTE_F           shift and go to state 57
    CTE_CH          shift and go to state 58
    CTE_STRING      shift and go to state 59
    ID              shift and go to state 61

    EXPRESION                      shift and go to state 46
    SUBEXP                         shift and go to state 47
    EXP                            shift and go to state 48
    TERMINO                        shift and go to state 49
    FACTOR                         shift and go to state 50
    CTE                            shift and go to state 53
    FUN                            shift and go to state 60

state 40

    (17) ARRDIM -> empty .

    DOTCOMA         reduce using rule 17 (ARRDIM -> empty .)
    COMA            reduce using rule 17 (ARRDIM -> empty .)
    DET_ARR         reduce using rule 17 (ARRDIM -> empty .)
    TRANS_ARR       reduce using rule 17 (ARRDIM -> empty .)
    INV_ARR         reduce using rule 17 (ARRDIM -> empty .)
    MULT            reduce using rule 17 (ARRDIM -> empty .)
    DIV             reduce using rule 17 (ARRDIM -> empty .)
    MOD             reduce using rule 17 (ARRDIM -> empty .)
    PLUS            reduce using rule 17 (ARRDIM -> empty .)
    MINUS           reduce using rule 17 (ARRDIM -> empty .)
    MORE            reduce using rule 17 (ARRDIM -> empty .)
    LESS            reduce using rule 17 (ARRDIM -> empty .)
    COMPARE         reduce using rule 17 (ARRDIM -> empty .)
    DIFFERENT       reduce using rule 17 (ARRDIM -> empty .)
    MOREEQUAL       reduce using rule 17 (ARRDIM -> empty .)
    LESSEQUAL       reduce using rule 17 (ARRDIM -> empty .)
    AND             reduce using rule 17 (ARRDIM -> empty .)
    OR              reduce using rule 17 (ARRDIM -> empty .)
    RSTAPLE         reduce using rule 17 (ARRDIM -> empty .)
    RPAREN          reduce using rule 17 (ARRDIM -> empty .)
    HACER           reduce using rule 17 (ARRDIM -> empty .)
    HASTA           reduce using rule 17 (ARRDIM -> empty .)
    RBRACKET        reduce using rule 17 (ARRDIM -> empty .)
    EQUAL           reduce using rule 17 (ARRDIM -> empty .)


state 41

    (3) MAIN -> PRINCIPAL r_save_func LPAREN RPAREN . r_register_princ VARS BLOQUE
    (116) r_register_princ -> .

    VAR             reduce using rule 116 (r_register_princ -> .)
    LBRACKET        reduce using rule 116 (r_register_princ -> .)

    r_register_princ               shift and go to state 62

state 42

    (20) FUNCTION -> FUNCION TIPO ID r_save_func r_register_func . LPAREN PARAM RPAREN VARS BLOQUE

    LPAREN          shift and go to state 63


state 43

    (21) FUNCTION -> FUNCION VOID r_save_type ID r_save_func . r_register_func LPAREN PARAM RPAREN VARS BLOQUE
    (114) r_register_func -> .

    LPAREN          reduce using rule 114 (r_register_func -> .)

    r_register_func                shift and go to state 64

state 44

    (12) IDS -> ID r_register_var ARRDIM DOTCOMA .

    INT             reduce using rule 12 (IDS -> ID r_register_var ARRDIM DOTCOMA .)
    FLOAT           reduce using rule 12 (IDS -> ID r_register_var ARRDIM DOTCOMA .)
    CHAR            reduce using rule 12 (IDS -> ID r_register_var ARRDIM DOTCOMA .)
    STRING          reduce using rule 12 (IDS -> ID r_register_var ARRDIM DOTCOMA .)
    FUNCION         reduce using rule 12 (IDS -> ID r_register_var ARRDIM DOTCOMA .)
    PRINCIPAL       reduce using rule 12 (IDS -> ID r_register_var ARRDIM DOTCOMA .)
    LBRACKET        reduce using rule 12 (IDS -> ID r_register_var ARRDIM DOTCOMA .)


state 45

    (13) IDS -> ID r_register_var ARRDIM COMA . IDS
    (12) IDS -> . ID r_register_var ARRDIM DOTCOMA
    (13) IDS -> . ID r_register_var ARRDIM COMA IDS

    ID              shift and go to state 25

    IDS                            shift and go to state 65

state 46

    (14) ARRDIM -> LSTAPLE EXPRESION . RSTAPLE
    (15) ARRDIM -> LSTAPLE EXPRESION . RSTAPLE LSTAPLE EXPRESION RSTAPLE
    (16) ARRDIM -> LSTAPLE EXPRESION . COMA EXPRESION RSTAPLE

    RSTAPLE         shift and go to state 66
    COMA            shift and go to state 67


state 47

    (39) EXPRESION -> SUBEXP . r_seen_subexp EXPRESION_AUX
    (119) r_seen_subexp -> .

    AND             reduce using rule 119 (r_seen_subexp -> .)
    OR              reduce using rule 119 (r_seen_subexp -> .)
    RSTAPLE         reduce using rule 119 (r_seen_subexp -> .)
    COMA            reduce using rule 119 (r_seen_subexp -> .)
    RPAREN          reduce using rule 119 (r_seen_subexp -> .)
    HACER           reduce using rule 119 (r_seen_subexp -> .)
    DOTCOMA         reduce using rule 119 (r_seen_subexp -> .)
    HASTA           reduce using rule 119 (r_seen_subexp -> .)

    r_seen_subexp                  shift and go to state 68

state 48

    (43) SUBEXP -> EXP . r_seen_exp SUBEXP_AUX
    (120) r_seen_exp -> .

    MORE            reduce using rule 120 (r_seen_exp -> .)
    LESS            reduce using rule 120 (r_seen_exp -> .)
    COMPARE         reduce using rule 120 (r_seen_exp -> .)
    DIFFERENT       reduce using rule 120 (r_seen_exp -> .)
    MOREEQUAL       reduce using rule 120 (r_seen_exp -> .)
    LESSEQUAL       reduce using rule 120 (r_seen_exp -> .)
    AND             reduce using rule 120 (r_seen_exp -> .)
    OR              reduce using rule 120 (r_seen_exp -> .)
    RSTAPLE         reduce using rule 120 (r_seen_exp -> .)
    COMA            reduce using rule 120 (r_seen_exp -> .)
    RPAREN          reduce using rule 120 (r_seen_exp -> .)
    HACER           reduce using rule 120 (r_seen_exp -> .)
    DOTCOMA         reduce using rule 120 (r_seen_exp -> .)
    HASTA           reduce using rule 120 (r_seen_exp -> .)

    r_seen_exp                     shift and go to state 69

state 49

    (52) EXP -> TERMINO . r_seen_term EXP_AUX
    (121) r_seen_term -> .

    PLUS            reduce using rule 121 (r_seen_term -> .)
    MINUS           reduce using rule 121 (r_seen_term -> .)
    MORE            reduce using rule 121 (r_seen_term -> .)
    LESS            reduce using rule 121 (r_seen_term -> .)
    COMPARE         reduce using rule 121 (r_seen_term -> .)
    DIFFERENT       reduce using rule 121 (r_seen_term -> .)
    MOREEQUAL       reduce using rule 121 (r_seen_term -> .)
    LESSEQUAL       reduce using rule 121 (r_seen_term -> .)
    AND             reduce using rule 121 (r_seen_term -> .)
    OR              reduce using rule 121 (r_seen_term -> .)
    RSTAPLE         reduce using rule 121 (r_seen_term -> .)
    COMA            reduce using rule 121 (r_seen_term -> .)
    RPAREN          reduce using rule 121 (r_seen_term -> .)
    HACER           reduce using rule 121 (r_seen_term -> .)
    DOTCOMA         reduce using rule 121 (r_seen_term -> .)
    HASTA           reduce using rule 121 (r_seen_term -> .)

    r_seen_term                    shift and go to state 70

state 50

    (56) TERMINO -> FACTOR . r_seen_factor TERMINO_AUX
    (122) r_seen_factor -> .

    MULT            reduce using rule 122 (r_seen_factor -> .)
    DIV             reduce using rule 122 (r_seen_factor -> .)
    MOD             reduce using rule 122 (r_seen_factor -> .)
    PLUS            reduce using rule 122 (r_seen_factor -> .)
    MINUS           reduce using rule 122 (r_seen_factor -> .)
    MORE            reduce using rule 122 (r_seen_factor -> .)
    LESS            reduce using rule 122 (r_seen_factor -> .)
    COMPARE         reduce using rule 122 (r_seen_factor -> .)
    DIFFERENT       reduce using rule 122 (r_seen_factor -> .)
    MOREEQUAL       reduce using rule 122 (r_seen_factor -> .)
    LESSEQUAL       reduce using rule 122 (r_seen_factor -> .)
    AND             reduce using rule 122 (r_seen_factor -> .)
    OR              reduce using rule 122 (r_seen_factor -> .)
    RSTAPLE         reduce using rule 122 (r_seen_factor -> .)
    COMA            reduce using rule 122 (r_seen_factor -> .)
    RPAREN          reduce using rule 122 (r_seen_factor -> .)
    HACER           reduce using rule 122 (r_seen_factor -> .)
    DOTCOMA         reduce using rule 122 (r_seen_factor -> .)
    HASTA           reduce using rule 122 (r_seen_factor -> .)

    r_seen_factor                  shift and go to state 71

state 51

    (61) FACTOR -> LPAREN . r_seen_operator EXPRESION RPAREN r_seen_operator
    (118) r_seen_operator -> .

    LPAREN          reduce using rule 118 (r_seen_operator -> .)
    PLUS            reduce using rule 118 (r_seen_operator -> .)
    MINUS           reduce using rule 118 (r_seen_operator -> .)
    NOT             reduce using rule 118 (r_seen_operator -> .)
    CTE_I           reduce using rule 118 (r_seen_operator -> .)
    CTE_F           reduce using rule 118 (r_seen_operator -> .)
    CTE_CH          reduce using rule 118 (r_seen_operator -> .)
    CTE_STRING      reduce using rule 118 (r_seen_operator -> .)
    ID              reduce using rule 118 (r_seen_operator -> .)

    r_seen_operator                shift and go to state 72

state 52

    (62) FACTOR -> PLUS . r_seen_unary_operator CTE
    (123) r_seen_unary_operator -> .

    CTE_I           reduce using rule 123 (r_seen_unary_operator -> .)
    CTE_F           reduce using rule 123 (r_seen_unary_operator -> .)
    CTE_CH          reduce using rule 123 (r_seen_unary_operator -> .)
    CTE_STRING      reduce using rule 123 (r_seen_unary_operator -> .)
    ID              reduce using rule 123 (r_seen_unary_operator -> .)

    r_seen_unary_operator          shift and go to state 73

state 53

    (65) FACTOR -> CTE . ARROP
    (66) FACTOR -> CTE .
    (73) ARROP -> . DET_ARR
    (74) ARROP -> . TRANS_ARR
    (75) ARROP -> . INV_ARR

    MULT            reduce using rule 66 (FACTOR -> CTE .)
    DIV             reduce using rule 66 (FACTOR -> CTE .)
    MOD             reduce using rule 66 (FACTOR -> CTE .)
    PLUS            reduce using rule 66 (FACTOR -> CTE .)
    MINUS           reduce using rule 66 (FACTOR -> CTE .)
    MORE            reduce using rule 66 (FACTOR -> CTE .)
    LESS            reduce using rule 66 (FACTOR -> CTE .)
    COMPARE         reduce using rule 66 (FACTOR -> CTE .)
    DIFFERENT       reduce using rule 66 (FACTOR -> CTE .)
    MOREEQUAL       reduce using rule 66 (FACTOR -> CTE .)
    LESSEQUAL       reduce using rule 66 (FACTOR -> CTE .)
    AND             reduce using rule 66 (FACTOR -> CTE .)
    OR              reduce using rule 66 (FACTOR -> CTE .)
    RSTAPLE         reduce using rule 66 (FACTOR -> CTE .)
    COMA            reduce using rule 66 (FACTOR -> CTE .)
    RPAREN          reduce using rule 66 (FACTOR -> CTE .)
    HACER           reduce using rule 66 (FACTOR -> CTE .)
    DOTCOMA         reduce using rule 66 (FACTOR -> CTE .)
    HASTA           reduce using rule 66 (FACTOR -> CTE .)
    DET_ARR         shift and go to state 75
    TRANS_ARR       shift and go to state 76
    INV_ARR         shift and go to state 77

    ARROP                          shift and go to state 74

state 54

    (63) FACTOR -> MINUS . r_seen_unary_operator CTE
    (123) r_seen_unary_operator -> .

    CTE_I           reduce using rule 123 (r_seen_unary_operator -> .)
    CTE_F           reduce using rule 123 (r_seen_unary_operator -> .)
    CTE_CH          reduce using rule 123 (r_seen_unary_operator -> .)
    CTE_STRING      reduce using rule 123 (r_seen_unary_operator -> .)
    ID              reduce using rule 123 (r_seen_unary_operator -> .)

    r_seen_unary_operator          shift and go to state 78

state 55

    (64) FACTOR -> NOT . r_seen_unary_operator CTE
    (123) r_seen_unary_operator -> .

    CTE_I           reduce using rule 123 (r_seen_unary_operator -> .)
    CTE_F           reduce using rule 123 (r_seen_unary_operator -> .)
    CTE_CH          reduce using rule 123 (r_seen_unary_operator -> .)
    CTE_STRING      reduce using rule 123 (r_seen_unary_operator -> .)
    ID              reduce using rule 123 (r_seen_unary_operator -> .)

    r_seen_unary_operator          shift and go to state 79

state 56

    (67) CTE -> CTE_I . r_seen_operand
    (117) r_seen_operand -> .

    DET_ARR         reduce using rule 117 (r_seen_operand -> .)
    TRANS_ARR       reduce using rule 117 (r_seen_operand -> .)
    INV_ARR         reduce using rule 117 (r_seen_operand -> .)
    MULT            reduce using rule 117 (r_seen_operand -> .)
    DIV             reduce using rule 117 (r_seen_operand -> .)
    MOD             reduce using rule 117 (r_seen_operand -> .)
    PLUS            reduce using rule 117 (r_seen_operand -> .)
    MINUS           reduce using rule 117 (r_seen_operand -> .)
    MORE            reduce using rule 117 (r_seen_operand -> .)
    LESS            reduce using rule 117 (r_seen_operand -> .)
    COMPARE         reduce using rule 117 (r_seen_operand -> .)
    DIFFERENT       reduce using rule 117 (r_seen_operand -> .)
    MOREEQUAL       reduce using rule 117 (r_seen_operand -> .)
    LESSEQUAL       reduce using rule 117 (r_seen_operand -> .)
    AND             reduce using rule 117 (r_seen_operand -> .)
    OR              reduce using rule 117 (r_seen_operand -> .)
    RSTAPLE         reduce using rule 117 (r_seen_operand -> .)
    COMA            reduce using rule 117 (r_seen_operand -> .)
    RPAREN          reduce using rule 117 (r_seen_operand -> .)
    HACER           reduce using rule 117 (r_seen_operand -> .)
    DOTCOMA         reduce using rule 117 (r_seen_operand -> .)
    HASTA           reduce using rule 117 (r_seen_operand -> .)
    RBRACKET        reduce using rule 117 (r_seen_operand -> .)

    r_seen_operand                 shift and go to state 80

state 57

    (68) CTE -> CTE_F . r_seen_operand
    (117) r_seen_operand -> .

    DET_ARR         reduce using rule 117 (r_seen_operand -> .)
    TRANS_ARR       reduce using rule 117 (r_seen_operand -> .)
    INV_ARR         reduce using rule 117 (r_seen_operand -> .)
    MULT            reduce using rule 117 (r_seen_operand -> .)
    DIV             reduce using rule 117 (r_seen_operand -> .)
    MOD             reduce using rule 117 (r_seen_operand -> .)
    PLUS            reduce using rule 117 (r_seen_operand -> .)
    MINUS           reduce using rule 117 (r_seen_operand -> .)
    MORE            reduce using rule 117 (r_seen_operand -> .)
    LESS            reduce using rule 117 (r_seen_operand -> .)
    COMPARE         reduce using rule 117 (r_seen_operand -> .)
    DIFFERENT       reduce using rule 117 (r_seen_operand -> .)
    MOREEQUAL       reduce using rule 117 (r_seen_operand -> .)
    LESSEQUAL       reduce using rule 117 (r_seen_operand -> .)
    AND             reduce using rule 117 (r_seen_operand -> .)
    OR              reduce using rule 117 (r_seen_operand -> .)
    RSTAPLE         reduce using rule 117 (r_seen_operand -> .)
    COMA            reduce using rule 117 (r_seen_operand -> .)
    RPAREN          reduce using rule 117 (r_seen_operand -> .)
    HACER           reduce using rule 117 (r_seen_operand -> .)
    DOTCOMA         reduce using rule 117 (r_seen_operand -> .)
    HASTA           reduce using rule 117 (r_seen_operand -> .)
    RBRACKET        reduce using rule 117 (r_seen_operand -> .)

    r_seen_operand                 shift and go to state 81

state 58

    (69) CTE -> CTE_CH . r_seen_operand
    (117) r_seen_operand -> .

    DET_ARR         reduce using rule 117 (r_seen_operand -> .)
    TRANS_ARR       reduce using rule 117 (r_seen_operand -> .)
    INV_ARR         reduce using rule 117 (r_seen_operand -> .)
    MULT            reduce using rule 117 (r_seen_operand -> .)
    DIV             reduce using rule 117 (r_seen_operand -> .)
    MOD             reduce using rule 117 (r_seen_operand -> .)
    PLUS            reduce using rule 117 (r_seen_operand -> .)
    MINUS           reduce using rule 117 (r_seen_operand -> .)
    MORE            reduce using rule 117 (r_seen_operand -> .)
    LESS            reduce using rule 117 (r_seen_operand -> .)
    COMPARE         reduce using rule 117 (r_seen_operand -> .)
    DIFFERENT       reduce using rule 117 (r_seen_operand -> .)
    MOREEQUAL       reduce using rule 117 (r_seen_operand -> .)
    LESSEQUAL       reduce using rule 117 (r_seen_operand -> .)
    AND             reduce using rule 117 (r_seen_operand -> .)
    OR              reduce using rule 117 (r_seen_operand -> .)
    RSTAPLE         reduce using rule 117 (r_seen_operand -> .)
    COMA            reduce using rule 117 (r_seen_operand -> .)
    RPAREN          reduce using rule 117 (r_seen_operand -> .)
    HACER           reduce using rule 117 (r_seen_operand -> .)
    DOTCOMA         reduce using rule 117 (r_seen_operand -> .)
    HASTA           reduce using rule 117 (r_seen_operand -> .)
    RBRACKET        reduce using rule 117 (r_seen_operand -> .)

    r_seen_operand                 shift and go to state 82

state 59

    (70) CTE -> CTE_STRING . r_seen_operand
    (117) r_seen_operand -> .

    DET_ARR         reduce using rule 117 (r_seen_operand -> .)
    TRANS_ARR       reduce using rule 117 (r_seen_operand -> .)
    INV_ARR         reduce using rule 117 (r_seen_operand -> .)
    MULT            reduce using rule 117 (r_seen_operand -> .)
    DIV             reduce using rule 117 (r_seen_operand -> .)
    MOD             reduce using rule 117 (r_seen_operand -> .)
    PLUS            reduce using rule 117 (r_seen_operand -> .)
    MINUS           reduce using rule 117 (r_seen_operand -> .)
    MORE            reduce using rule 117 (r_seen_operand -> .)
    LESS            reduce using rule 117 (r_seen_operand -> .)
    COMPARE         reduce using rule 117 (r_seen_operand -> .)
    DIFFERENT       reduce using rule 117 (r_seen_operand -> .)
    MOREEQUAL       reduce using rule 117 (r_seen_operand -> .)
    LESSEQUAL       reduce using rule 117 (r_seen_operand -> .)
    AND             reduce using rule 117 (r_seen_operand -> .)
    OR              reduce using rule 117 (r_seen_operand -> .)
    RSTAPLE         reduce using rule 117 (r_seen_operand -> .)
    COMA            reduce using rule 117 (r_seen_operand -> .)
    RPAREN          reduce using rule 117 (r_seen_operand -> .)
    HACER           reduce using rule 117 (r_seen_operand -> .)
    DOTCOMA         reduce using rule 117 (r_seen_operand -> .)
    HASTA           reduce using rule 117 (r_seen_operand -> .)
    RBRACKET        reduce using rule 117 (r_seen_operand -> .)

    r_seen_operand                 shift and go to state 83

state 60

    (71) CTE -> FUN .

    DET_ARR         reduce using rule 71 (CTE -> FUN .)
    TRANS_ARR       reduce using rule 71 (CTE -> FUN .)
    INV_ARR         reduce using rule 71 (CTE -> FUN .)
    MULT            reduce using rule 71 (CTE -> FUN .)
    DIV             reduce using rule 71 (CTE -> FUN .)
    MOD             reduce using rule 71 (CTE -> FUN .)
    PLUS            reduce using rule 71 (CTE -> FUN .)
    MINUS           reduce using rule 71 (CTE -> FUN .)
    MORE            reduce using rule 71 (CTE -> FUN .)
    LESS            reduce using rule 71 (CTE -> FUN .)
    COMPARE         reduce using rule 71 (CTE -> FUN .)
    DIFFERENT       reduce using rule 71 (CTE -> FUN .)
    MOREEQUAL       reduce using rule 71 (CTE -> FUN .)
    LESSEQUAL       reduce using rule 71 (CTE -> FUN .)
    AND             reduce using rule 71 (CTE -> FUN .)
    OR              reduce using rule 71 (CTE -> FUN .)
    RSTAPLE         reduce using rule 71 (CTE -> FUN .)
    COMA            reduce using rule 71 (CTE -> FUN .)
    RPAREN          reduce using rule 71 (CTE -> FUN .)
    HACER           reduce using rule 71 (CTE -> FUN .)
    DOTCOMA         reduce using rule 71 (CTE -> FUN .)
    HASTA           reduce using rule 71 (CTE -> FUN .)
    RBRACKET        reduce using rule 71 (CTE -> FUN .)


state 61

    (72) CTE -> ID . ARRDIM
    (76) FUN -> ID . LPAREN FUN_AUX RPAREN
    (14) ARRDIM -> . LSTAPLE EXPRESION RSTAPLE
    (15) ARRDIM -> . LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE
    (16) ARRDIM -> . LSTAPLE EXPRESION COMA EXPRESION RSTAPLE
    (17) ARRDIM -> . empty
    (1) empty -> .

    LPAREN          shift and go to state 85
    LSTAPLE         shift and go to state 39
    DET_ARR         reduce using rule 1 (empty -> .)
    TRANS_ARR       reduce using rule 1 (empty -> .)
    INV_ARR         reduce using rule 1 (empty -> .)
    MULT            reduce using rule 1 (empty -> .)
    DIV             reduce using rule 1 (empty -> .)
    MOD             reduce using rule 1 (empty -> .)
    PLUS            reduce using rule 1 (empty -> .)
    MINUS           reduce using rule 1 (empty -> .)
    MORE            reduce using rule 1 (empty -> .)
    LESS            reduce using rule 1 (empty -> .)
    COMPARE         reduce using rule 1 (empty -> .)
    DIFFERENT       reduce using rule 1 (empty -> .)
    MOREEQUAL       reduce using rule 1 (empty -> .)
    LESSEQUAL       reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    RSTAPLE         reduce using rule 1 (empty -> .)
    COMA            reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    HACER           reduce using rule 1 (empty -> .)
    DOTCOMA         reduce using rule 1 (empty -> .)
    HASTA           reduce using rule 1 (empty -> .)
    RBRACKET        reduce using rule 1 (empty -> .)

    ARRDIM                         shift and go to state 84
    empty                          shift and go to state 40

state 62

    (3) MAIN -> PRINCIPAL r_save_func LPAREN RPAREN r_register_princ . VARS BLOQUE
    (4) VARS -> . VAR VAR_AUX
    (5) VARS -> . empty
    (1) empty -> .

    VAR             shift and go to state 6
    LBRACKET        reduce using rule 1 (empty -> .)

    VARS                           shift and go to state 86
    empty                          shift and go to state 7

state 63

    (20) FUNCTION -> FUNCION TIPO ID r_save_func r_register_func LPAREN . PARAM RPAREN VARS BLOQUE
    (22) PARAM -> . TIPO ID r_register_var PARENTESIS PARAM_AUX
    (8) TIPO -> . INT r_save_type
    (9) TIPO -> . FLOAT r_save_type
    (10) TIPO -> . CHAR r_save_type
    (11) TIPO -> . STRING r_save_type

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18

    TIPO                           shift and go to state 87
    PARAM                          shift and go to state 88

state 64

    (21) FUNCTION -> FUNCION VOID r_save_type ID r_save_func r_register_func . LPAREN PARAM RPAREN VARS BLOQUE

    LPAREN          shift and go to state 89


state 65

    (13) IDS -> ID r_register_var ARRDIM COMA IDS .

    INT             reduce using rule 13 (IDS -> ID r_register_var ARRDIM COMA IDS .)
    FLOAT           reduce using rule 13 (IDS -> ID r_register_var ARRDIM COMA IDS .)
    CHAR            reduce using rule 13 (IDS -> ID r_register_var ARRDIM COMA IDS .)
    STRING          reduce using rule 13 (IDS -> ID r_register_var ARRDIM COMA IDS .)
    FUNCION         reduce using rule 13 (IDS -> ID r_register_var ARRDIM COMA IDS .)
    PRINCIPAL       reduce using rule 13 (IDS -> ID r_register_var ARRDIM COMA IDS .)
    LBRACKET        reduce using rule 13 (IDS -> ID r_register_var ARRDIM COMA IDS .)


state 66

    (14) ARRDIM -> LSTAPLE EXPRESION RSTAPLE .
    (15) ARRDIM -> LSTAPLE EXPRESION RSTAPLE . LSTAPLE EXPRESION RSTAPLE

    DOTCOMA         reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    COMA            reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    DET_ARR         reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    TRANS_ARR       reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    INV_ARR         reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    MULT            reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    DIV             reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    MOD             reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    PLUS            reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    MINUS           reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    MORE            reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    LESS            reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    COMPARE         reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    DIFFERENT       reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    MOREEQUAL       reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    LESSEQUAL       reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    AND             reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    OR              reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    RSTAPLE         reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    RPAREN          reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    HACER           reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    HASTA           reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    RBRACKET        reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    EQUAL           reduce using rule 14 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE .)
    LSTAPLE         shift and go to state 90


state 67

    (16) ARRDIM -> LSTAPLE EXPRESION COMA . EXPRESION RSTAPLE
    (39) EXPRESION -> . SUBEXP r_seen_subexp EXPRESION_AUX
    (43) SUBEXP -> . EXP r_seen_exp SUBEXP_AUX
    (52) EXP -> . TERMINO r_seen_term EXP_AUX
    (56) TERMINO -> . FACTOR r_seen_factor TERMINO_AUX
    (61) FACTOR -> . LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator
    (62) FACTOR -> . PLUS r_seen_unary_operator CTE
    (63) FACTOR -> . MINUS r_seen_unary_operator CTE
    (64) FACTOR -> . NOT r_seen_unary_operator CTE
    (65) FACTOR -> . CTE ARROP
    (66) FACTOR -> . CTE
    (67) CTE -> . CTE_I r_seen_operand
    (68) CTE -> . CTE_F r_seen_operand
    (69) CTE -> . CTE_CH r_seen_operand
    (70) CTE -> . CTE_STRING r_seen_operand
    (71) CTE -> . FUN
    (72) CTE -> . ID ARRDIM
    (76) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 54
    NOT             shift and go to state 55
    CTE_I           shift and go to state 56
    CTE_F           shift and go to state 57
    CTE_CH          shift and go to state 58
    CTE_STRING      shift and go to state 59
    ID              shift and go to state 61

    EXPRESION                      shift and go to state 91
    SUBEXP                         shift and go to state 47
    EXP                            shift and go to state 48
    TERMINO                        shift and go to state 49
    FACTOR                         shift and go to state 50
    CTE                            shift and go to state 53
    FUN                            shift and go to state 60

state 68

    (39) EXPRESION -> SUBEXP r_seen_subexp . EXPRESION_AUX
    (40) EXPRESION_AUX -> . AND r_seen_operator EXPRESION
    (41) EXPRESION_AUX -> . OR r_seen_operator EXPRESION
    (42) EXPRESION_AUX -> . empty
    (1) empty -> .

    AND             shift and go to state 93
    OR              shift and go to state 94
    RSTAPLE         reduce using rule 1 (empty -> .)
    COMA            reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    HACER           reduce using rule 1 (empty -> .)
    DOTCOMA         reduce using rule 1 (empty -> .)
    HASTA           reduce using rule 1 (empty -> .)

    EXPRESION_AUX                  shift and go to state 92
    empty                          shift and go to state 95

state 69

    (43) SUBEXP -> EXP r_seen_exp . SUBEXP_AUX
    (44) SUBEXP_AUX -> . COMPARACION SUBEXP
    (45) SUBEXP_AUX -> . empty
    (46) COMPARACION -> . MORE r_seen_operator
    (47) COMPARACION -> . LESS r_seen_operator
    (48) COMPARACION -> . COMPARE r_seen_operator
    (49) COMPARACION -> . DIFFERENT r_seen_operator
    (50) COMPARACION -> . MOREEQUAL r_seen_operator
    (51) COMPARACION -> . LESSEQUAL r_seen_operator
    (1) empty -> .

    MORE            shift and go to state 99
    LESS            shift and go to state 100
    COMPARE         shift and go to state 101
    DIFFERENT       shift and go to state 102
    MOREEQUAL       shift and go to state 103
    LESSEQUAL       shift and go to state 104
    AND             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    RSTAPLE         reduce using rule 1 (empty -> .)
    COMA            reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    HACER           reduce using rule 1 (empty -> .)
    DOTCOMA         reduce using rule 1 (empty -> .)
    HASTA           reduce using rule 1 (empty -> .)

    SUBEXP_AUX                     shift and go to state 96
    COMPARACION                    shift and go to state 97
    empty                          shift and go to state 98

state 70

    (52) EXP -> TERMINO r_seen_term . EXP_AUX
    (53) EXP_AUX -> . PLUS r_seen_operator EXP
    (54) EXP_AUX -> . MINUS r_seen_operator EXP
    (55) EXP_AUX -> . empty
    (1) empty -> .

    PLUS            shift and go to state 106
    MINUS           shift and go to state 107
    MORE            reduce using rule 1 (empty -> .)
    LESS            reduce using rule 1 (empty -> .)
    COMPARE         reduce using rule 1 (empty -> .)
    DIFFERENT       reduce using rule 1 (empty -> .)
    MOREEQUAL       reduce using rule 1 (empty -> .)
    LESSEQUAL       reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    RSTAPLE         reduce using rule 1 (empty -> .)
    COMA            reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    HACER           reduce using rule 1 (empty -> .)
    DOTCOMA         reduce using rule 1 (empty -> .)
    HASTA           reduce using rule 1 (empty -> .)

    EXP_AUX                        shift and go to state 105
    empty                          shift and go to state 108

state 71

    (56) TERMINO -> FACTOR r_seen_factor . TERMINO_AUX
    (57) TERMINO_AUX -> . MULT r_seen_operator TERMINO
    (58) TERMINO_AUX -> . DIV r_seen_operator TERMINO
    (59) TERMINO_AUX -> . MOD r_seen_operator TERMINO
    (60) TERMINO_AUX -> . empty
    (1) empty -> .

    MULT            shift and go to state 110
    DIV             shift and go to state 111
    MOD             shift and go to state 112
    PLUS            reduce using rule 1 (empty -> .)
    MINUS           reduce using rule 1 (empty -> .)
    MORE            reduce using rule 1 (empty -> .)
    LESS            reduce using rule 1 (empty -> .)
    COMPARE         reduce using rule 1 (empty -> .)
    DIFFERENT       reduce using rule 1 (empty -> .)
    MOREEQUAL       reduce using rule 1 (empty -> .)
    LESSEQUAL       reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    RSTAPLE         reduce using rule 1 (empty -> .)
    COMA            reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    HACER           reduce using rule 1 (empty -> .)
    DOTCOMA         reduce using rule 1 (empty -> .)
    HASTA           reduce using rule 1 (empty -> .)

    TERMINO_AUX                    shift and go to state 109
    empty                          shift and go to state 113

state 72

    (61) FACTOR -> LPAREN r_seen_operator . EXPRESION RPAREN r_seen_operator
    (39) EXPRESION -> . SUBEXP r_seen_subexp EXPRESION_AUX
    (43) SUBEXP -> . EXP r_seen_exp SUBEXP_AUX
    (52) EXP -> . TERMINO r_seen_term EXP_AUX
    (56) TERMINO -> . FACTOR r_seen_factor TERMINO_AUX
    (61) FACTOR -> . LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator
    (62) FACTOR -> . PLUS r_seen_unary_operator CTE
    (63) FACTOR -> . MINUS r_seen_unary_operator CTE
    (64) FACTOR -> . NOT r_seen_unary_operator CTE
    (65) FACTOR -> . CTE ARROP
    (66) FACTOR -> . CTE
    (67) CTE -> . CTE_I r_seen_operand
    (68) CTE -> . CTE_F r_seen_operand
    (69) CTE -> . CTE_CH r_seen_operand
    (70) CTE -> . CTE_STRING r_seen_operand
    (71) CTE -> . FUN
    (72) CTE -> . ID ARRDIM
    (76) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 54
    NOT             shift and go to state 55
    CTE_I           shift and go to state 56
    CTE_F           shift and go to state 57
    CTE_CH          shift and go to state 58
    CTE_STRING      shift and go to state 59
    ID              shift and go to state 61

    EXPRESION                      shift and go to state 114
    SUBEXP                         shift and go to state 47
    EXP                            shift and go to state 48
    TERMINO                        shift and go to state 49
    FACTOR                         shift and go to state 50
    CTE                            shift and go to state 53
    FUN                            shift and go to state 60

state 73

    (62) FACTOR -> PLUS r_seen_unary_operator . CTE
    (67) CTE -> . CTE_I r_seen_operand
    (68) CTE -> . CTE_F r_seen_operand
    (69) CTE -> . CTE_CH r_seen_operand
    (70) CTE -> . CTE_STRING r_seen_operand
    (71) CTE -> . FUN
    (72) CTE -> . ID ARRDIM
    (76) FUN -> . ID LPAREN FUN_AUX RPAREN

    CTE_I           shift and go to state 56
    CTE_F           shift and go to state 57
    CTE_CH          shift and go to state 58
    CTE_STRING      shift and go to state 59
    ID              shift and go to state 61

    CTE                            shift and go to state 115
    FUN                            shift and go to state 60

state 74

    (65) FACTOR -> CTE ARROP .

    MULT            reduce using rule 65 (FACTOR -> CTE ARROP .)
    DIV             reduce using rule 65 (FACTOR -> CTE ARROP .)
    MOD             reduce using rule 65 (FACTOR -> CTE ARROP .)
    PLUS            reduce using rule 65 (FACTOR -> CTE ARROP .)
    MINUS           reduce using rule 65 (FACTOR -> CTE ARROP .)
    MORE            reduce using rule 65 (FACTOR -> CTE ARROP .)
    LESS            reduce using rule 65 (FACTOR -> CTE ARROP .)
    COMPARE         reduce using rule 65 (FACTOR -> CTE ARROP .)
    DIFFERENT       reduce using rule 65 (FACTOR -> CTE ARROP .)
    MOREEQUAL       reduce using rule 65 (FACTOR -> CTE ARROP .)
    LESSEQUAL       reduce using rule 65 (FACTOR -> CTE ARROP .)
    AND             reduce using rule 65 (FACTOR -> CTE ARROP .)
    OR              reduce using rule 65 (FACTOR -> CTE ARROP .)
    RSTAPLE         reduce using rule 65 (FACTOR -> CTE ARROP .)
    COMA            reduce using rule 65 (FACTOR -> CTE ARROP .)
    RPAREN          reduce using rule 65 (FACTOR -> CTE ARROP .)
    HACER           reduce using rule 65 (FACTOR -> CTE ARROP .)
    DOTCOMA         reduce using rule 65 (FACTOR -> CTE ARROP .)
    HASTA           reduce using rule 65 (FACTOR -> CTE ARROP .)


state 75

    (73) ARROP -> DET_ARR .

    MULT            reduce using rule 73 (ARROP -> DET_ARR .)
    DIV             reduce using rule 73 (ARROP -> DET_ARR .)
    MOD             reduce using rule 73 (ARROP -> DET_ARR .)
    PLUS            reduce using rule 73 (ARROP -> DET_ARR .)
    MINUS           reduce using rule 73 (ARROP -> DET_ARR .)
    MORE            reduce using rule 73 (ARROP -> DET_ARR .)
    LESS            reduce using rule 73 (ARROP -> DET_ARR .)
    COMPARE         reduce using rule 73 (ARROP -> DET_ARR .)
    DIFFERENT       reduce using rule 73 (ARROP -> DET_ARR .)
    MOREEQUAL       reduce using rule 73 (ARROP -> DET_ARR .)
    LESSEQUAL       reduce using rule 73 (ARROP -> DET_ARR .)
    AND             reduce using rule 73 (ARROP -> DET_ARR .)
    OR              reduce using rule 73 (ARROP -> DET_ARR .)
    RSTAPLE         reduce using rule 73 (ARROP -> DET_ARR .)
    COMA            reduce using rule 73 (ARROP -> DET_ARR .)
    RPAREN          reduce using rule 73 (ARROP -> DET_ARR .)
    HACER           reduce using rule 73 (ARROP -> DET_ARR .)
    DOTCOMA         reduce using rule 73 (ARROP -> DET_ARR .)
    HASTA           reduce using rule 73 (ARROP -> DET_ARR .)


state 76

    (74) ARROP -> TRANS_ARR .

    MULT            reduce using rule 74 (ARROP -> TRANS_ARR .)
    DIV             reduce using rule 74 (ARROP -> TRANS_ARR .)
    MOD             reduce using rule 74 (ARROP -> TRANS_ARR .)
    PLUS            reduce using rule 74 (ARROP -> TRANS_ARR .)
    MINUS           reduce using rule 74 (ARROP -> TRANS_ARR .)
    MORE            reduce using rule 74 (ARROP -> TRANS_ARR .)
    LESS            reduce using rule 74 (ARROP -> TRANS_ARR .)
    COMPARE         reduce using rule 74 (ARROP -> TRANS_ARR .)
    DIFFERENT       reduce using rule 74 (ARROP -> TRANS_ARR .)
    MOREEQUAL       reduce using rule 74 (ARROP -> TRANS_ARR .)
    LESSEQUAL       reduce using rule 74 (ARROP -> TRANS_ARR .)
    AND             reduce using rule 74 (ARROP -> TRANS_ARR .)
    OR              reduce using rule 74 (ARROP -> TRANS_ARR .)
    RSTAPLE         reduce using rule 74 (ARROP -> TRANS_ARR .)
    COMA            reduce using rule 74 (ARROP -> TRANS_ARR .)
    RPAREN          reduce using rule 74 (ARROP -> TRANS_ARR .)
    HACER           reduce using rule 74 (ARROP -> TRANS_ARR .)
    DOTCOMA         reduce using rule 74 (ARROP -> TRANS_ARR .)
    HASTA           reduce using rule 74 (ARROP -> TRANS_ARR .)


state 77

    (75) ARROP -> INV_ARR .

    MULT            reduce using rule 75 (ARROP -> INV_ARR .)
    DIV             reduce using rule 75 (ARROP -> INV_ARR .)
    MOD             reduce using rule 75 (ARROP -> INV_ARR .)
    PLUS            reduce using rule 75 (ARROP -> INV_ARR .)
    MINUS           reduce using rule 75 (ARROP -> INV_ARR .)
    MORE            reduce using rule 75 (ARROP -> INV_ARR .)
    LESS            reduce using rule 75 (ARROP -> INV_ARR .)
    COMPARE         reduce using rule 75 (ARROP -> INV_ARR .)
    DIFFERENT       reduce using rule 75 (ARROP -> INV_ARR .)
    MOREEQUAL       reduce using rule 75 (ARROP -> INV_ARR .)
    LESSEQUAL       reduce using rule 75 (ARROP -> INV_ARR .)
    AND             reduce using rule 75 (ARROP -> INV_ARR .)
    OR              reduce using rule 75 (ARROP -> INV_ARR .)
    RSTAPLE         reduce using rule 75 (ARROP -> INV_ARR .)
    COMA            reduce using rule 75 (ARROP -> INV_ARR .)
    RPAREN          reduce using rule 75 (ARROP -> INV_ARR .)
    HACER           reduce using rule 75 (ARROP -> INV_ARR .)
    DOTCOMA         reduce using rule 75 (ARROP -> INV_ARR .)
    HASTA           reduce using rule 75 (ARROP -> INV_ARR .)


state 78

    (63) FACTOR -> MINUS r_seen_unary_operator . CTE
    (67) CTE -> . CTE_I r_seen_operand
    (68) CTE -> . CTE_F r_seen_operand
    (69) CTE -> . CTE_CH r_seen_operand
    (70) CTE -> . CTE_STRING r_seen_operand
    (71) CTE -> . FUN
    (72) CTE -> . ID ARRDIM
    (76) FUN -> . ID LPAREN FUN_AUX RPAREN

    CTE_I           shift and go to state 56
    CTE_F           shift and go to state 57
    CTE_CH          shift and go to state 58
    CTE_STRING      shift and go to state 59
    ID              shift and go to state 61

    CTE                            shift and go to state 116
    FUN                            shift and go to state 60

state 79

    (64) FACTOR -> NOT r_seen_unary_operator . CTE
    (67) CTE -> . CTE_I r_seen_operand
    (68) CTE -> . CTE_F r_seen_operand
    (69) CTE -> . CTE_CH r_seen_operand
    (70) CTE -> . CTE_STRING r_seen_operand
    (71) CTE -> . FUN
    (72) CTE -> . ID ARRDIM
    (76) FUN -> . ID LPAREN FUN_AUX RPAREN

    CTE_I           shift and go to state 56
    CTE_F           shift and go to state 57
    CTE_CH          shift and go to state 58
    CTE_STRING      shift and go to state 59
    ID              shift and go to state 61

    CTE                            shift and go to state 117
    FUN                            shift and go to state 60

state 80

    (67) CTE -> CTE_I r_seen_operand .

    DET_ARR         reduce using rule 67 (CTE -> CTE_I r_seen_operand .)
    TRANS_ARR       reduce using rule 67 (CTE -> CTE_I r_seen_operand .)
    INV_ARR         reduce using rule 67 (CTE -> CTE_I r_seen_operand .)
    MULT            reduce using rule 67 (CTE -> CTE_I r_seen_operand .)
    DIV             reduce using rule 67 (CTE -> CTE_I r_seen_operand .)
    MOD             reduce using rule 67 (CTE -> CTE_I r_seen_operand .)
    PLUS            reduce using rule 67 (CTE -> CTE_I r_seen_operand .)
    MINUS           reduce using rule 67 (CTE -> CTE_I r_seen_operand .)
    MORE            reduce using rule 67 (CTE -> CTE_I r_seen_operand .)
    LESS            reduce using rule 67 (CTE -> CTE_I r_seen_operand .)
    COMPARE         reduce using rule 67 (CTE -> CTE_I r_seen_operand .)
    DIFFERENT       reduce using rule 67 (CTE -> CTE_I r_seen_operand .)
    MOREEQUAL       reduce using rule 67 (CTE -> CTE_I r_seen_operand .)
    LESSEQUAL       reduce using rule 67 (CTE -> CTE_I r_seen_operand .)
    AND             reduce using rule 67 (CTE -> CTE_I r_seen_operand .)
    OR              reduce using rule 67 (CTE -> CTE_I r_seen_operand .)
    RSTAPLE         reduce using rule 67 (CTE -> CTE_I r_seen_operand .)
    COMA            reduce using rule 67 (CTE -> CTE_I r_seen_operand .)
    RPAREN          reduce using rule 67 (CTE -> CTE_I r_seen_operand .)
    HACER           reduce using rule 67 (CTE -> CTE_I r_seen_operand .)
    DOTCOMA         reduce using rule 67 (CTE -> CTE_I r_seen_operand .)
    HASTA           reduce using rule 67 (CTE -> CTE_I r_seen_operand .)
    RBRACKET        reduce using rule 67 (CTE -> CTE_I r_seen_operand .)


state 81

    (68) CTE -> CTE_F r_seen_operand .

    DET_ARR         reduce using rule 68 (CTE -> CTE_F r_seen_operand .)
    TRANS_ARR       reduce using rule 68 (CTE -> CTE_F r_seen_operand .)
    INV_ARR         reduce using rule 68 (CTE -> CTE_F r_seen_operand .)
    MULT            reduce using rule 68 (CTE -> CTE_F r_seen_operand .)
    DIV             reduce using rule 68 (CTE -> CTE_F r_seen_operand .)
    MOD             reduce using rule 68 (CTE -> CTE_F r_seen_operand .)
    PLUS            reduce using rule 68 (CTE -> CTE_F r_seen_operand .)
    MINUS           reduce using rule 68 (CTE -> CTE_F r_seen_operand .)
    MORE            reduce using rule 68 (CTE -> CTE_F r_seen_operand .)
    LESS            reduce using rule 68 (CTE -> CTE_F r_seen_operand .)
    COMPARE         reduce using rule 68 (CTE -> CTE_F r_seen_operand .)
    DIFFERENT       reduce using rule 68 (CTE -> CTE_F r_seen_operand .)
    MOREEQUAL       reduce using rule 68 (CTE -> CTE_F r_seen_operand .)
    LESSEQUAL       reduce using rule 68 (CTE -> CTE_F r_seen_operand .)
    AND             reduce using rule 68 (CTE -> CTE_F r_seen_operand .)
    OR              reduce using rule 68 (CTE -> CTE_F r_seen_operand .)
    RSTAPLE         reduce using rule 68 (CTE -> CTE_F r_seen_operand .)
    COMA            reduce using rule 68 (CTE -> CTE_F r_seen_operand .)
    RPAREN          reduce using rule 68 (CTE -> CTE_F r_seen_operand .)
    HACER           reduce using rule 68 (CTE -> CTE_F r_seen_operand .)
    DOTCOMA         reduce using rule 68 (CTE -> CTE_F r_seen_operand .)
    HASTA           reduce using rule 68 (CTE -> CTE_F r_seen_operand .)
    RBRACKET        reduce using rule 68 (CTE -> CTE_F r_seen_operand .)


state 82

    (69) CTE -> CTE_CH r_seen_operand .

    DET_ARR         reduce using rule 69 (CTE -> CTE_CH r_seen_operand .)
    TRANS_ARR       reduce using rule 69 (CTE -> CTE_CH r_seen_operand .)
    INV_ARR         reduce using rule 69 (CTE -> CTE_CH r_seen_operand .)
    MULT            reduce using rule 69 (CTE -> CTE_CH r_seen_operand .)
    DIV             reduce using rule 69 (CTE -> CTE_CH r_seen_operand .)
    MOD             reduce using rule 69 (CTE -> CTE_CH r_seen_operand .)
    PLUS            reduce using rule 69 (CTE -> CTE_CH r_seen_operand .)
    MINUS           reduce using rule 69 (CTE -> CTE_CH r_seen_operand .)
    MORE            reduce using rule 69 (CTE -> CTE_CH r_seen_operand .)
    LESS            reduce using rule 69 (CTE -> CTE_CH r_seen_operand .)
    COMPARE         reduce using rule 69 (CTE -> CTE_CH r_seen_operand .)
    DIFFERENT       reduce using rule 69 (CTE -> CTE_CH r_seen_operand .)
    MOREEQUAL       reduce using rule 69 (CTE -> CTE_CH r_seen_operand .)
    LESSEQUAL       reduce using rule 69 (CTE -> CTE_CH r_seen_operand .)
    AND             reduce using rule 69 (CTE -> CTE_CH r_seen_operand .)
    OR              reduce using rule 69 (CTE -> CTE_CH r_seen_operand .)
    RSTAPLE         reduce using rule 69 (CTE -> CTE_CH r_seen_operand .)
    COMA            reduce using rule 69 (CTE -> CTE_CH r_seen_operand .)
    RPAREN          reduce using rule 69 (CTE -> CTE_CH r_seen_operand .)
    HACER           reduce using rule 69 (CTE -> CTE_CH r_seen_operand .)
    DOTCOMA         reduce using rule 69 (CTE -> CTE_CH r_seen_operand .)
    HASTA           reduce using rule 69 (CTE -> CTE_CH r_seen_operand .)
    RBRACKET        reduce using rule 69 (CTE -> CTE_CH r_seen_operand .)


state 83

    (70) CTE -> CTE_STRING r_seen_operand .

    DET_ARR         reduce using rule 70 (CTE -> CTE_STRING r_seen_operand .)
    TRANS_ARR       reduce using rule 70 (CTE -> CTE_STRING r_seen_operand .)
    INV_ARR         reduce using rule 70 (CTE -> CTE_STRING r_seen_operand .)
    MULT            reduce using rule 70 (CTE -> CTE_STRING r_seen_operand .)
    DIV             reduce using rule 70 (CTE -> CTE_STRING r_seen_operand .)
    MOD             reduce using rule 70 (CTE -> CTE_STRING r_seen_operand .)
    PLUS            reduce using rule 70 (CTE -> CTE_STRING r_seen_operand .)
    MINUS           reduce using rule 70 (CTE -> CTE_STRING r_seen_operand .)
    MORE            reduce using rule 70 (CTE -> CTE_STRING r_seen_operand .)
    LESS            reduce using rule 70 (CTE -> CTE_STRING r_seen_operand .)
    COMPARE         reduce using rule 70 (CTE -> CTE_STRING r_seen_operand .)
    DIFFERENT       reduce using rule 70 (CTE -> CTE_STRING r_seen_operand .)
    MOREEQUAL       reduce using rule 70 (CTE -> CTE_STRING r_seen_operand .)
    LESSEQUAL       reduce using rule 70 (CTE -> CTE_STRING r_seen_operand .)
    AND             reduce using rule 70 (CTE -> CTE_STRING r_seen_operand .)
    OR              reduce using rule 70 (CTE -> CTE_STRING r_seen_operand .)
    RSTAPLE         reduce using rule 70 (CTE -> CTE_STRING r_seen_operand .)
    COMA            reduce using rule 70 (CTE -> CTE_STRING r_seen_operand .)
    RPAREN          reduce using rule 70 (CTE -> CTE_STRING r_seen_operand .)
    HACER           reduce using rule 70 (CTE -> CTE_STRING r_seen_operand .)
    DOTCOMA         reduce using rule 70 (CTE -> CTE_STRING r_seen_operand .)
    HASTA           reduce using rule 70 (CTE -> CTE_STRING r_seen_operand .)
    RBRACKET        reduce using rule 70 (CTE -> CTE_STRING r_seen_operand .)


state 84

    (72) CTE -> ID ARRDIM .

    DET_ARR         reduce using rule 72 (CTE -> ID ARRDIM .)
    TRANS_ARR       reduce using rule 72 (CTE -> ID ARRDIM .)
    INV_ARR         reduce using rule 72 (CTE -> ID ARRDIM .)
    MULT            reduce using rule 72 (CTE -> ID ARRDIM .)
    DIV             reduce using rule 72 (CTE -> ID ARRDIM .)
    MOD             reduce using rule 72 (CTE -> ID ARRDIM .)
    PLUS            reduce using rule 72 (CTE -> ID ARRDIM .)
    MINUS           reduce using rule 72 (CTE -> ID ARRDIM .)
    MORE            reduce using rule 72 (CTE -> ID ARRDIM .)
    LESS            reduce using rule 72 (CTE -> ID ARRDIM .)
    COMPARE         reduce using rule 72 (CTE -> ID ARRDIM .)
    DIFFERENT       reduce using rule 72 (CTE -> ID ARRDIM .)
    MOREEQUAL       reduce using rule 72 (CTE -> ID ARRDIM .)
    LESSEQUAL       reduce using rule 72 (CTE -> ID ARRDIM .)
    AND             reduce using rule 72 (CTE -> ID ARRDIM .)
    OR              reduce using rule 72 (CTE -> ID ARRDIM .)
    RSTAPLE         reduce using rule 72 (CTE -> ID ARRDIM .)
    COMA            reduce using rule 72 (CTE -> ID ARRDIM .)
    RPAREN          reduce using rule 72 (CTE -> ID ARRDIM .)
    HACER           reduce using rule 72 (CTE -> ID ARRDIM .)
    DOTCOMA         reduce using rule 72 (CTE -> ID ARRDIM .)
    HASTA           reduce using rule 72 (CTE -> ID ARRDIM .)
    RBRACKET        reduce using rule 72 (CTE -> ID ARRDIM .)


state 85

    (76) FUN -> ID LPAREN . FUN_AUX RPAREN
    (77) FUN_AUX -> . EXPRESION COMA FUN_AUX
    (78) FUN_AUX -> . EXPRESION
    (79) FUN_AUX -> . empty
    (39) EXPRESION -> . SUBEXP r_seen_subexp EXPRESION_AUX
    (1) empty -> .
    (43) SUBEXP -> . EXP r_seen_exp SUBEXP_AUX
    (52) EXP -> . TERMINO r_seen_term EXP_AUX
    (56) TERMINO -> . FACTOR r_seen_factor TERMINO_AUX
    (61) FACTOR -> . LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator
    (62) FACTOR -> . PLUS r_seen_unary_operator CTE
    (63) FACTOR -> . MINUS r_seen_unary_operator CTE
    (64) FACTOR -> . NOT r_seen_unary_operator CTE
    (65) FACTOR -> . CTE ARROP
    (66) FACTOR -> . CTE
    (67) CTE -> . CTE_I r_seen_operand
    (68) CTE -> . CTE_F r_seen_operand
    (69) CTE -> . CTE_CH r_seen_operand
    (70) CTE -> . CTE_STRING r_seen_operand
    (71) CTE -> . FUN
    (72) CTE -> . ID ARRDIM
    (76) FUN -> . ID LPAREN FUN_AUX RPAREN

    RPAREN          reduce using rule 1 (empty -> .)
    LPAREN          shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 54
    NOT             shift and go to state 55
    CTE_I           shift and go to state 56
    CTE_F           shift and go to state 57
    CTE_CH          shift and go to state 58
    CTE_STRING      shift and go to state 59
    ID              shift and go to state 61

    FUN_AUX                        shift and go to state 118
    EXPRESION                      shift and go to state 119
    empty                          shift and go to state 120
    SUBEXP                         shift and go to state 47
    EXP                            shift and go to state 48
    TERMINO                        shift and go to state 49
    FACTOR                         shift and go to state 50
    CTE                            shift and go to state 53
    FUN                            shift and go to state 60

state 86

    (3) MAIN -> PRINCIPAL r_save_func LPAREN RPAREN r_register_princ VARS . BLOQUE
    (28) BLOQUE -> . LBRACKET ESTATUTOS RBRACKET

    LBRACKET        shift and go to state 122

    BLOQUE                         shift and go to state 121

state 87

    (22) PARAM -> TIPO . ID r_register_var PARENTESIS PARAM_AUX

    ID              shift and go to state 123


state 88

    (20) FUNCTION -> FUNCION TIPO ID r_save_func r_register_func LPAREN PARAM . RPAREN VARS BLOQUE

    RPAREN          shift and go to state 124


state 89

    (21) FUNCTION -> FUNCION VOID r_save_type ID r_save_func r_register_func LPAREN . PARAM RPAREN VARS BLOQUE
    (22) PARAM -> . TIPO ID r_register_var PARENTESIS PARAM_AUX
    (8) TIPO -> . INT r_save_type
    (9) TIPO -> . FLOAT r_save_type
    (10) TIPO -> . CHAR r_save_type
    (11) TIPO -> . STRING r_save_type

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18

    PARAM                          shift and go to state 125
    TIPO                           shift and go to state 87

state 90

    (15) ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE . EXPRESION RSTAPLE
    (39) EXPRESION -> . SUBEXP r_seen_subexp EXPRESION_AUX
    (43) SUBEXP -> . EXP r_seen_exp SUBEXP_AUX
    (52) EXP -> . TERMINO r_seen_term EXP_AUX
    (56) TERMINO -> . FACTOR r_seen_factor TERMINO_AUX
    (61) FACTOR -> . LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator
    (62) FACTOR -> . PLUS r_seen_unary_operator CTE
    (63) FACTOR -> . MINUS r_seen_unary_operator CTE
    (64) FACTOR -> . NOT r_seen_unary_operator CTE
    (65) FACTOR -> . CTE ARROP
    (66) FACTOR -> . CTE
    (67) CTE -> . CTE_I r_seen_operand
    (68) CTE -> . CTE_F r_seen_operand
    (69) CTE -> . CTE_CH r_seen_operand
    (70) CTE -> . CTE_STRING r_seen_operand
    (71) CTE -> . FUN
    (72) CTE -> . ID ARRDIM
    (76) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 54
    NOT             shift and go to state 55
    CTE_I           shift and go to state 56
    CTE_F           shift and go to state 57
    CTE_CH          shift and go to state 58
    CTE_STRING      shift and go to state 59
    ID              shift and go to state 61

    EXPRESION                      shift and go to state 126
    SUBEXP                         shift and go to state 47
    EXP                            shift and go to state 48
    TERMINO                        shift and go to state 49
    FACTOR                         shift and go to state 50
    CTE                            shift and go to state 53
    FUN                            shift and go to state 60

state 91

    (16) ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION . RSTAPLE

    RSTAPLE         shift and go to state 127


state 92

    (39) EXPRESION -> SUBEXP r_seen_subexp EXPRESION_AUX .

    RSTAPLE         reduce using rule 39 (EXPRESION -> SUBEXP r_seen_subexp EXPRESION_AUX .)
    COMA            reduce using rule 39 (EXPRESION -> SUBEXP r_seen_subexp EXPRESION_AUX .)
    RPAREN          reduce using rule 39 (EXPRESION -> SUBEXP r_seen_subexp EXPRESION_AUX .)
    HACER           reduce using rule 39 (EXPRESION -> SUBEXP r_seen_subexp EXPRESION_AUX .)
    DOTCOMA         reduce using rule 39 (EXPRESION -> SUBEXP r_seen_subexp EXPRESION_AUX .)
    HASTA           reduce using rule 39 (EXPRESION -> SUBEXP r_seen_subexp EXPRESION_AUX .)


state 93

    (40) EXPRESION_AUX -> AND . r_seen_operator EXPRESION
    (118) r_seen_operator -> .

    LPAREN          reduce using rule 118 (r_seen_operator -> .)
    PLUS            reduce using rule 118 (r_seen_operator -> .)
    MINUS           reduce using rule 118 (r_seen_operator -> .)
    NOT             reduce using rule 118 (r_seen_operator -> .)
    CTE_I           reduce using rule 118 (r_seen_operator -> .)
    CTE_F           reduce using rule 118 (r_seen_operator -> .)
    CTE_CH          reduce using rule 118 (r_seen_operator -> .)
    CTE_STRING      reduce using rule 118 (r_seen_operator -> .)
    ID              reduce using rule 118 (r_seen_operator -> .)

    r_seen_operator                shift and go to state 128

state 94

    (41) EXPRESION_AUX -> OR . r_seen_operator EXPRESION
    (118) r_seen_operator -> .

    LPAREN          reduce using rule 118 (r_seen_operator -> .)
    PLUS            reduce using rule 118 (r_seen_operator -> .)
    MINUS           reduce using rule 118 (r_seen_operator -> .)
    NOT             reduce using rule 118 (r_seen_operator -> .)
    CTE_I           reduce using rule 118 (r_seen_operator -> .)
    CTE_F           reduce using rule 118 (r_seen_operator -> .)
    CTE_CH          reduce using rule 118 (r_seen_operator -> .)
    CTE_STRING      reduce using rule 118 (r_seen_operator -> .)
    ID              reduce using rule 118 (r_seen_operator -> .)

    r_seen_operator                shift and go to state 129

state 95

    (42) EXPRESION_AUX -> empty .

    RSTAPLE         reduce using rule 42 (EXPRESION_AUX -> empty .)
    COMA            reduce using rule 42 (EXPRESION_AUX -> empty .)
    RPAREN          reduce using rule 42 (EXPRESION_AUX -> empty .)
    HACER           reduce using rule 42 (EXPRESION_AUX -> empty .)
    DOTCOMA         reduce using rule 42 (EXPRESION_AUX -> empty .)
    HASTA           reduce using rule 42 (EXPRESION_AUX -> empty .)


state 96

    (43) SUBEXP -> EXP r_seen_exp SUBEXP_AUX .

    AND             reduce using rule 43 (SUBEXP -> EXP r_seen_exp SUBEXP_AUX .)
    OR              reduce using rule 43 (SUBEXP -> EXP r_seen_exp SUBEXP_AUX .)
    RSTAPLE         reduce using rule 43 (SUBEXP -> EXP r_seen_exp SUBEXP_AUX .)
    COMA            reduce using rule 43 (SUBEXP -> EXP r_seen_exp SUBEXP_AUX .)
    RPAREN          reduce using rule 43 (SUBEXP -> EXP r_seen_exp SUBEXP_AUX .)
    HACER           reduce using rule 43 (SUBEXP -> EXP r_seen_exp SUBEXP_AUX .)
    DOTCOMA         reduce using rule 43 (SUBEXP -> EXP r_seen_exp SUBEXP_AUX .)
    HASTA           reduce using rule 43 (SUBEXP -> EXP r_seen_exp SUBEXP_AUX .)


state 97

    (44) SUBEXP_AUX -> COMPARACION . SUBEXP
    (43) SUBEXP -> . EXP r_seen_exp SUBEXP_AUX
    (52) EXP -> . TERMINO r_seen_term EXP_AUX
    (56) TERMINO -> . FACTOR r_seen_factor TERMINO_AUX
    (61) FACTOR -> . LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator
    (62) FACTOR -> . PLUS r_seen_unary_operator CTE
    (63) FACTOR -> . MINUS r_seen_unary_operator CTE
    (64) FACTOR -> . NOT r_seen_unary_operator CTE
    (65) FACTOR -> . CTE ARROP
    (66) FACTOR -> . CTE
    (67) CTE -> . CTE_I r_seen_operand
    (68) CTE -> . CTE_F r_seen_operand
    (69) CTE -> . CTE_CH r_seen_operand
    (70) CTE -> . CTE_STRING r_seen_operand
    (71) CTE -> . FUN
    (72) CTE -> . ID ARRDIM
    (76) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 54
    NOT             shift and go to state 55
    CTE_I           shift and go to state 56
    CTE_F           shift and go to state 57
    CTE_CH          shift and go to state 58
    CTE_STRING      shift and go to state 59
    ID              shift and go to state 61

    SUBEXP                         shift and go to state 130
    EXP                            shift and go to state 48
    TERMINO                        shift and go to state 49
    FACTOR                         shift and go to state 50
    CTE                            shift and go to state 53
    FUN                            shift and go to state 60

state 98

    (45) SUBEXP_AUX -> empty .

    AND             reduce using rule 45 (SUBEXP_AUX -> empty .)
    OR              reduce using rule 45 (SUBEXP_AUX -> empty .)
    RSTAPLE         reduce using rule 45 (SUBEXP_AUX -> empty .)
    COMA            reduce using rule 45 (SUBEXP_AUX -> empty .)
    RPAREN          reduce using rule 45 (SUBEXP_AUX -> empty .)
    HACER           reduce using rule 45 (SUBEXP_AUX -> empty .)
    DOTCOMA         reduce using rule 45 (SUBEXP_AUX -> empty .)
    HASTA           reduce using rule 45 (SUBEXP_AUX -> empty .)


state 99

    (46) COMPARACION -> MORE . r_seen_operator
    (118) r_seen_operator -> .

    LPAREN          reduce using rule 118 (r_seen_operator -> .)
    PLUS            reduce using rule 118 (r_seen_operator -> .)
    MINUS           reduce using rule 118 (r_seen_operator -> .)
    NOT             reduce using rule 118 (r_seen_operator -> .)
    CTE_I           reduce using rule 118 (r_seen_operator -> .)
    CTE_F           reduce using rule 118 (r_seen_operator -> .)
    CTE_CH          reduce using rule 118 (r_seen_operator -> .)
    CTE_STRING      reduce using rule 118 (r_seen_operator -> .)
    ID              reduce using rule 118 (r_seen_operator -> .)

    r_seen_operator                shift and go to state 131

state 100

    (47) COMPARACION -> LESS . r_seen_operator
    (118) r_seen_operator -> .

    LPAREN          reduce using rule 118 (r_seen_operator -> .)
    PLUS            reduce using rule 118 (r_seen_operator -> .)
    MINUS           reduce using rule 118 (r_seen_operator -> .)
    NOT             reduce using rule 118 (r_seen_operator -> .)
    CTE_I           reduce using rule 118 (r_seen_operator -> .)
    CTE_F           reduce using rule 118 (r_seen_operator -> .)
    CTE_CH          reduce using rule 118 (r_seen_operator -> .)
    CTE_STRING      reduce using rule 118 (r_seen_operator -> .)
    ID              reduce using rule 118 (r_seen_operator -> .)

    r_seen_operator                shift and go to state 132

state 101

    (48) COMPARACION -> COMPARE . r_seen_operator
    (118) r_seen_operator -> .

    LPAREN          reduce using rule 118 (r_seen_operator -> .)
    PLUS            reduce using rule 118 (r_seen_operator -> .)
    MINUS           reduce using rule 118 (r_seen_operator -> .)
    NOT             reduce using rule 118 (r_seen_operator -> .)
    CTE_I           reduce using rule 118 (r_seen_operator -> .)
    CTE_F           reduce using rule 118 (r_seen_operator -> .)
    CTE_CH          reduce using rule 118 (r_seen_operator -> .)
    CTE_STRING      reduce using rule 118 (r_seen_operator -> .)
    ID              reduce using rule 118 (r_seen_operator -> .)

    r_seen_operator                shift and go to state 133

state 102

    (49) COMPARACION -> DIFFERENT . r_seen_operator
    (118) r_seen_operator -> .

    LPAREN          reduce using rule 118 (r_seen_operator -> .)
    PLUS            reduce using rule 118 (r_seen_operator -> .)
    MINUS           reduce using rule 118 (r_seen_operator -> .)
    NOT             reduce using rule 118 (r_seen_operator -> .)
    CTE_I           reduce using rule 118 (r_seen_operator -> .)
    CTE_F           reduce using rule 118 (r_seen_operator -> .)
    CTE_CH          reduce using rule 118 (r_seen_operator -> .)
    CTE_STRING      reduce using rule 118 (r_seen_operator -> .)
    ID              reduce using rule 118 (r_seen_operator -> .)

    r_seen_operator                shift and go to state 134

state 103

    (50) COMPARACION -> MOREEQUAL . r_seen_operator
    (118) r_seen_operator -> .

    LPAREN          reduce using rule 118 (r_seen_operator -> .)
    PLUS            reduce using rule 118 (r_seen_operator -> .)
    MINUS           reduce using rule 118 (r_seen_operator -> .)
    NOT             reduce using rule 118 (r_seen_operator -> .)
    CTE_I           reduce using rule 118 (r_seen_operator -> .)
    CTE_F           reduce using rule 118 (r_seen_operator -> .)
    CTE_CH          reduce using rule 118 (r_seen_operator -> .)
    CTE_STRING      reduce using rule 118 (r_seen_operator -> .)
    ID              reduce using rule 118 (r_seen_operator -> .)

    r_seen_operator                shift and go to state 135

state 104

    (51) COMPARACION -> LESSEQUAL . r_seen_operator
    (118) r_seen_operator -> .

    LPAREN          reduce using rule 118 (r_seen_operator -> .)
    PLUS            reduce using rule 118 (r_seen_operator -> .)
    MINUS           reduce using rule 118 (r_seen_operator -> .)
    NOT             reduce using rule 118 (r_seen_operator -> .)
    CTE_I           reduce using rule 118 (r_seen_operator -> .)
    CTE_F           reduce using rule 118 (r_seen_operator -> .)
    CTE_CH          reduce using rule 118 (r_seen_operator -> .)
    CTE_STRING      reduce using rule 118 (r_seen_operator -> .)
    ID              reduce using rule 118 (r_seen_operator -> .)

    r_seen_operator                shift and go to state 136

state 105

    (52) EXP -> TERMINO r_seen_term EXP_AUX .

    MORE            reduce using rule 52 (EXP -> TERMINO r_seen_term EXP_AUX .)
    LESS            reduce using rule 52 (EXP -> TERMINO r_seen_term EXP_AUX .)
    COMPARE         reduce using rule 52 (EXP -> TERMINO r_seen_term EXP_AUX .)
    DIFFERENT       reduce using rule 52 (EXP -> TERMINO r_seen_term EXP_AUX .)
    MOREEQUAL       reduce using rule 52 (EXP -> TERMINO r_seen_term EXP_AUX .)
    LESSEQUAL       reduce using rule 52 (EXP -> TERMINO r_seen_term EXP_AUX .)
    AND             reduce using rule 52 (EXP -> TERMINO r_seen_term EXP_AUX .)
    OR              reduce using rule 52 (EXP -> TERMINO r_seen_term EXP_AUX .)
    RSTAPLE         reduce using rule 52 (EXP -> TERMINO r_seen_term EXP_AUX .)
    COMA            reduce using rule 52 (EXP -> TERMINO r_seen_term EXP_AUX .)
    RPAREN          reduce using rule 52 (EXP -> TERMINO r_seen_term EXP_AUX .)
    HACER           reduce using rule 52 (EXP -> TERMINO r_seen_term EXP_AUX .)
    DOTCOMA         reduce using rule 52 (EXP -> TERMINO r_seen_term EXP_AUX .)
    HASTA           reduce using rule 52 (EXP -> TERMINO r_seen_term EXP_AUX .)


state 106

    (53) EXP_AUX -> PLUS . r_seen_operator EXP
    (118) r_seen_operator -> .

    LPAREN          reduce using rule 118 (r_seen_operator -> .)
    PLUS            reduce using rule 118 (r_seen_operator -> .)
    MINUS           reduce using rule 118 (r_seen_operator -> .)
    NOT             reduce using rule 118 (r_seen_operator -> .)
    CTE_I           reduce using rule 118 (r_seen_operator -> .)
    CTE_F           reduce using rule 118 (r_seen_operator -> .)
    CTE_CH          reduce using rule 118 (r_seen_operator -> .)
    CTE_STRING      reduce using rule 118 (r_seen_operator -> .)
    ID              reduce using rule 118 (r_seen_operator -> .)

    r_seen_operator                shift and go to state 137

state 107

    (54) EXP_AUX -> MINUS . r_seen_operator EXP
    (118) r_seen_operator -> .

    LPAREN          reduce using rule 118 (r_seen_operator -> .)
    PLUS            reduce using rule 118 (r_seen_operator -> .)
    MINUS           reduce using rule 118 (r_seen_operator -> .)
    NOT             reduce using rule 118 (r_seen_operator -> .)
    CTE_I           reduce using rule 118 (r_seen_operator -> .)
    CTE_F           reduce using rule 118 (r_seen_operator -> .)
    CTE_CH          reduce using rule 118 (r_seen_operator -> .)
    CTE_STRING      reduce using rule 118 (r_seen_operator -> .)
    ID              reduce using rule 118 (r_seen_operator -> .)

    r_seen_operator                shift and go to state 138

state 108

    (55) EXP_AUX -> empty .

    MORE            reduce using rule 55 (EXP_AUX -> empty .)
    LESS            reduce using rule 55 (EXP_AUX -> empty .)
    COMPARE         reduce using rule 55 (EXP_AUX -> empty .)
    DIFFERENT       reduce using rule 55 (EXP_AUX -> empty .)
    MOREEQUAL       reduce using rule 55 (EXP_AUX -> empty .)
    LESSEQUAL       reduce using rule 55 (EXP_AUX -> empty .)
    AND             reduce using rule 55 (EXP_AUX -> empty .)
    OR              reduce using rule 55 (EXP_AUX -> empty .)
    RSTAPLE         reduce using rule 55 (EXP_AUX -> empty .)
    COMA            reduce using rule 55 (EXP_AUX -> empty .)
    RPAREN          reduce using rule 55 (EXP_AUX -> empty .)
    HACER           reduce using rule 55 (EXP_AUX -> empty .)
    DOTCOMA         reduce using rule 55 (EXP_AUX -> empty .)
    HASTA           reduce using rule 55 (EXP_AUX -> empty .)


state 109

    (56) TERMINO -> FACTOR r_seen_factor TERMINO_AUX .

    PLUS            reduce using rule 56 (TERMINO -> FACTOR r_seen_factor TERMINO_AUX .)
    MINUS           reduce using rule 56 (TERMINO -> FACTOR r_seen_factor TERMINO_AUX .)
    MORE            reduce using rule 56 (TERMINO -> FACTOR r_seen_factor TERMINO_AUX .)
    LESS            reduce using rule 56 (TERMINO -> FACTOR r_seen_factor TERMINO_AUX .)
    COMPARE         reduce using rule 56 (TERMINO -> FACTOR r_seen_factor TERMINO_AUX .)
    DIFFERENT       reduce using rule 56 (TERMINO -> FACTOR r_seen_factor TERMINO_AUX .)
    MOREEQUAL       reduce using rule 56 (TERMINO -> FACTOR r_seen_factor TERMINO_AUX .)
    LESSEQUAL       reduce using rule 56 (TERMINO -> FACTOR r_seen_factor TERMINO_AUX .)
    AND             reduce using rule 56 (TERMINO -> FACTOR r_seen_factor TERMINO_AUX .)
    OR              reduce using rule 56 (TERMINO -> FACTOR r_seen_factor TERMINO_AUX .)
    RSTAPLE         reduce using rule 56 (TERMINO -> FACTOR r_seen_factor TERMINO_AUX .)
    COMA            reduce using rule 56 (TERMINO -> FACTOR r_seen_factor TERMINO_AUX .)
    RPAREN          reduce using rule 56 (TERMINO -> FACTOR r_seen_factor TERMINO_AUX .)
    HACER           reduce using rule 56 (TERMINO -> FACTOR r_seen_factor TERMINO_AUX .)
    DOTCOMA         reduce using rule 56 (TERMINO -> FACTOR r_seen_factor TERMINO_AUX .)
    HASTA           reduce using rule 56 (TERMINO -> FACTOR r_seen_factor TERMINO_AUX .)


state 110

    (57) TERMINO_AUX -> MULT . r_seen_operator TERMINO
    (118) r_seen_operator -> .

    LPAREN          reduce using rule 118 (r_seen_operator -> .)
    PLUS            reduce using rule 118 (r_seen_operator -> .)
    MINUS           reduce using rule 118 (r_seen_operator -> .)
    NOT             reduce using rule 118 (r_seen_operator -> .)
    CTE_I           reduce using rule 118 (r_seen_operator -> .)
    CTE_F           reduce using rule 118 (r_seen_operator -> .)
    CTE_CH          reduce using rule 118 (r_seen_operator -> .)
    CTE_STRING      reduce using rule 118 (r_seen_operator -> .)
    ID              reduce using rule 118 (r_seen_operator -> .)

    r_seen_operator                shift and go to state 139

state 111

    (58) TERMINO_AUX -> DIV . r_seen_operator TERMINO
    (118) r_seen_operator -> .

    LPAREN          reduce using rule 118 (r_seen_operator -> .)
    PLUS            reduce using rule 118 (r_seen_operator -> .)
    MINUS           reduce using rule 118 (r_seen_operator -> .)
    NOT             reduce using rule 118 (r_seen_operator -> .)
    CTE_I           reduce using rule 118 (r_seen_operator -> .)
    CTE_F           reduce using rule 118 (r_seen_operator -> .)
    CTE_CH          reduce using rule 118 (r_seen_operator -> .)
    CTE_STRING      reduce using rule 118 (r_seen_operator -> .)
    ID              reduce using rule 118 (r_seen_operator -> .)

    r_seen_operator                shift and go to state 140

state 112

    (59) TERMINO_AUX -> MOD . r_seen_operator TERMINO
    (118) r_seen_operator -> .

    LPAREN          reduce using rule 118 (r_seen_operator -> .)
    PLUS            reduce using rule 118 (r_seen_operator -> .)
    MINUS           reduce using rule 118 (r_seen_operator -> .)
    NOT             reduce using rule 118 (r_seen_operator -> .)
    CTE_I           reduce using rule 118 (r_seen_operator -> .)
    CTE_F           reduce using rule 118 (r_seen_operator -> .)
    CTE_CH          reduce using rule 118 (r_seen_operator -> .)
    CTE_STRING      reduce using rule 118 (r_seen_operator -> .)
    ID              reduce using rule 118 (r_seen_operator -> .)

    r_seen_operator                shift and go to state 141

state 113

    (60) TERMINO_AUX -> empty .

    PLUS            reduce using rule 60 (TERMINO_AUX -> empty .)
    MINUS           reduce using rule 60 (TERMINO_AUX -> empty .)
    MORE            reduce using rule 60 (TERMINO_AUX -> empty .)
    LESS            reduce using rule 60 (TERMINO_AUX -> empty .)
    COMPARE         reduce using rule 60 (TERMINO_AUX -> empty .)
    DIFFERENT       reduce using rule 60 (TERMINO_AUX -> empty .)
    MOREEQUAL       reduce using rule 60 (TERMINO_AUX -> empty .)
    LESSEQUAL       reduce using rule 60 (TERMINO_AUX -> empty .)
    AND             reduce using rule 60 (TERMINO_AUX -> empty .)
    OR              reduce using rule 60 (TERMINO_AUX -> empty .)
    RSTAPLE         reduce using rule 60 (TERMINO_AUX -> empty .)
    COMA            reduce using rule 60 (TERMINO_AUX -> empty .)
    RPAREN          reduce using rule 60 (TERMINO_AUX -> empty .)
    HACER           reduce using rule 60 (TERMINO_AUX -> empty .)
    DOTCOMA         reduce using rule 60 (TERMINO_AUX -> empty .)
    HASTA           reduce using rule 60 (TERMINO_AUX -> empty .)


state 114

    (61) FACTOR -> LPAREN r_seen_operator EXPRESION . RPAREN r_seen_operator

    RPAREN          shift and go to state 142


state 115

    (62) FACTOR -> PLUS r_seen_unary_operator CTE .

    MULT            reduce using rule 62 (FACTOR -> PLUS r_seen_unary_operator CTE .)
    DIV             reduce using rule 62 (FACTOR -> PLUS r_seen_unary_operator CTE .)
    MOD             reduce using rule 62 (FACTOR -> PLUS r_seen_unary_operator CTE .)
    PLUS            reduce using rule 62 (FACTOR -> PLUS r_seen_unary_operator CTE .)
    MINUS           reduce using rule 62 (FACTOR -> PLUS r_seen_unary_operator CTE .)
    MORE            reduce using rule 62 (FACTOR -> PLUS r_seen_unary_operator CTE .)
    LESS            reduce using rule 62 (FACTOR -> PLUS r_seen_unary_operator CTE .)
    COMPARE         reduce using rule 62 (FACTOR -> PLUS r_seen_unary_operator CTE .)
    DIFFERENT       reduce using rule 62 (FACTOR -> PLUS r_seen_unary_operator CTE .)
    MOREEQUAL       reduce using rule 62 (FACTOR -> PLUS r_seen_unary_operator CTE .)
    LESSEQUAL       reduce using rule 62 (FACTOR -> PLUS r_seen_unary_operator CTE .)
    AND             reduce using rule 62 (FACTOR -> PLUS r_seen_unary_operator CTE .)
    OR              reduce using rule 62 (FACTOR -> PLUS r_seen_unary_operator CTE .)
    RSTAPLE         reduce using rule 62 (FACTOR -> PLUS r_seen_unary_operator CTE .)
    COMA            reduce using rule 62 (FACTOR -> PLUS r_seen_unary_operator CTE .)
    RPAREN          reduce using rule 62 (FACTOR -> PLUS r_seen_unary_operator CTE .)
    HACER           reduce using rule 62 (FACTOR -> PLUS r_seen_unary_operator CTE .)
    DOTCOMA         reduce using rule 62 (FACTOR -> PLUS r_seen_unary_operator CTE .)
    HASTA           reduce using rule 62 (FACTOR -> PLUS r_seen_unary_operator CTE .)


state 116

    (63) FACTOR -> MINUS r_seen_unary_operator CTE .

    MULT            reduce using rule 63 (FACTOR -> MINUS r_seen_unary_operator CTE .)
    DIV             reduce using rule 63 (FACTOR -> MINUS r_seen_unary_operator CTE .)
    MOD             reduce using rule 63 (FACTOR -> MINUS r_seen_unary_operator CTE .)
    PLUS            reduce using rule 63 (FACTOR -> MINUS r_seen_unary_operator CTE .)
    MINUS           reduce using rule 63 (FACTOR -> MINUS r_seen_unary_operator CTE .)
    MORE            reduce using rule 63 (FACTOR -> MINUS r_seen_unary_operator CTE .)
    LESS            reduce using rule 63 (FACTOR -> MINUS r_seen_unary_operator CTE .)
    COMPARE         reduce using rule 63 (FACTOR -> MINUS r_seen_unary_operator CTE .)
    DIFFERENT       reduce using rule 63 (FACTOR -> MINUS r_seen_unary_operator CTE .)
    MOREEQUAL       reduce using rule 63 (FACTOR -> MINUS r_seen_unary_operator CTE .)
    LESSEQUAL       reduce using rule 63 (FACTOR -> MINUS r_seen_unary_operator CTE .)
    AND             reduce using rule 63 (FACTOR -> MINUS r_seen_unary_operator CTE .)
    OR              reduce using rule 63 (FACTOR -> MINUS r_seen_unary_operator CTE .)
    RSTAPLE         reduce using rule 63 (FACTOR -> MINUS r_seen_unary_operator CTE .)
    COMA            reduce using rule 63 (FACTOR -> MINUS r_seen_unary_operator CTE .)
    RPAREN          reduce using rule 63 (FACTOR -> MINUS r_seen_unary_operator CTE .)
    HACER           reduce using rule 63 (FACTOR -> MINUS r_seen_unary_operator CTE .)
    DOTCOMA         reduce using rule 63 (FACTOR -> MINUS r_seen_unary_operator CTE .)
    HASTA           reduce using rule 63 (FACTOR -> MINUS r_seen_unary_operator CTE .)


state 117

    (64) FACTOR -> NOT r_seen_unary_operator CTE .

    MULT            reduce using rule 64 (FACTOR -> NOT r_seen_unary_operator CTE .)
    DIV             reduce using rule 64 (FACTOR -> NOT r_seen_unary_operator CTE .)
    MOD             reduce using rule 64 (FACTOR -> NOT r_seen_unary_operator CTE .)
    PLUS            reduce using rule 64 (FACTOR -> NOT r_seen_unary_operator CTE .)
    MINUS           reduce using rule 64 (FACTOR -> NOT r_seen_unary_operator CTE .)
    MORE            reduce using rule 64 (FACTOR -> NOT r_seen_unary_operator CTE .)
    LESS            reduce using rule 64 (FACTOR -> NOT r_seen_unary_operator CTE .)
    COMPARE         reduce using rule 64 (FACTOR -> NOT r_seen_unary_operator CTE .)
    DIFFERENT       reduce using rule 64 (FACTOR -> NOT r_seen_unary_operator CTE .)
    MOREEQUAL       reduce using rule 64 (FACTOR -> NOT r_seen_unary_operator CTE .)
    LESSEQUAL       reduce using rule 64 (FACTOR -> NOT r_seen_unary_operator CTE .)
    AND             reduce using rule 64 (FACTOR -> NOT r_seen_unary_operator CTE .)
    OR              reduce using rule 64 (FACTOR -> NOT r_seen_unary_operator CTE .)
    RSTAPLE         reduce using rule 64 (FACTOR -> NOT r_seen_unary_operator CTE .)
    COMA            reduce using rule 64 (FACTOR -> NOT r_seen_unary_operator CTE .)
    RPAREN          reduce using rule 64 (FACTOR -> NOT r_seen_unary_operator CTE .)
    HACER           reduce using rule 64 (FACTOR -> NOT r_seen_unary_operator CTE .)
    DOTCOMA         reduce using rule 64 (FACTOR -> NOT r_seen_unary_operator CTE .)
    HASTA           reduce using rule 64 (FACTOR -> NOT r_seen_unary_operator CTE .)


state 118

    (76) FUN -> ID LPAREN FUN_AUX . RPAREN

    RPAREN          shift and go to state 143


state 119

    (77) FUN_AUX -> EXPRESION . COMA FUN_AUX
    (78) FUN_AUX -> EXPRESION .

    COMA            shift and go to state 144
    RPAREN          reduce using rule 78 (FUN_AUX -> EXPRESION .)


state 120

    (79) FUN_AUX -> empty .

    RPAREN          reduce using rule 79 (FUN_AUX -> empty .)


state 121

    (3) MAIN -> PRINCIPAL r_save_func LPAREN RPAREN r_register_princ VARS BLOQUE .

    $end            reduce using rule 3 (MAIN -> PRINCIPAL r_save_func LPAREN RPAREN r_register_princ VARS BLOQUE .)


state 122

    (28) BLOQUE -> LBRACKET . ESTATUTOS RBRACKET
    (29) ESTATUTOS -> . ESTATUTO ESTATUTOS
    (30) ESTATUTOS -> . empty
    (31) ESTATUTO -> . ASIGNACION DOTCOMA
    (32) ESTATUTO -> . FUN DOTCOMA
    (33) ESTATUTO -> . COND
    (34) ESTATUTO -> . WRITE DOTCOMA
    (35) ESTATUTO -> . READ DOTCOMA
    (36) ESTATUTO -> . RETURN DOTCOMA
    (1) empty -> .
    (37) ASIGNACION -> . ID ARRDIM EQUAL r_seen_operator EXPRESION
    (38) ASIGNACION -> . ID ARRDIM EQUAL r_seen_operator CTE_ARR
    (76) FUN -> . ID LPAREN FUN_AUX RPAREN
    (80) COND -> . IF
    (81) COND -> . FOR
    (82) COND -> . WHILE
    (93) WRITE -> . ESCRIBE LPAREN WRITE_AUX RPAREN
    (97) READ -> . LEE LPAREN READ_AUX RPAREN
    (101) RETURN -> . REGRESA LPAREN EXPRESION RPAREN
    (102) RETURN -> . REGRESA LPAREN NULL RPAREN
    (83) IF -> . SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX
    (84) IF -> . SI LPAREN EXPRESION RPAREN ENTONCES COND
    (91) FOR -> . DESDE ASIGNACION HASTA EXPRESION HACER BLOQUE
    (92) FOR -> . DESDE ASIGNACION HASTA EXPRESION HACER COND
    (87) WHILE -> . MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE
    (88) WHILE -> . MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX COND

    RBRACKET        reduce using rule 1 (empty -> .)
    ID              shift and go to state 154
    ESCRIBE         shift and go to state 158
    LEE             shift and go to state 159
    REGRESA         shift and go to state 160
    SI              shift and go to state 161
    DESDE           shift and go to state 162
    MIENTRAS        shift and go to state 163

    ESTATUTOS                      shift and go to state 145
    ESTATUTO                       shift and go to state 146
    empty                          shift and go to state 147
    ASIGNACION                     shift and go to state 148
    FUN                            shift and go to state 149
    COND                           shift and go to state 150
    WRITE                          shift and go to state 151
    READ                           shift and go to state 152
    RETURN                         shift and go to state 153
    IF                             shift and go to state 155
    FOR                            shift and go to state 156
    WHILE                          shift and go to state 157

state 123

    (22) PARAM -> TIPO ID . r_register_var PARENTESIS PARAM_AUX
    (115) r_register_var -> .

    LSTAPLE         reduce using rule 115 (r_register_var -> .)
    COMA            reduce using rule 115 (r_register_var -> .)
    RPAREN          reduce using rule 115 (r_register_var -> .)

    r_register_var                 shift and go to state 164

state 124

    (20) FUNCTION -> FUNCION TIPO ID r_save_func r_register_func LPAREN PARAM RPAREN . VARS BLOQUE
    (4) VARS -> . VAR VAR_AUX
    (5) VARS -> . empty
    (1) empty -> .

    VAR             shift and go to state 6
    LBRACKET        reduce using rule 1 (empty -> .)

    VARS                           shift and go to state 165
    empty                          shift and go to state 7

state 125

    (21) FUNCTION -> FUNCION VOID r_save_type ID r_save_func r_register_func LPAREN PARAM . RPAREN VARS BLOQUE

    RPAREN          shift and go to state 166


state 126

    (15) ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION . RSTAPLE

    RSTAPLE         shift and go to state 167


state 127

    (16) ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .

    DOTCOMA         reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    COMA            reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    DET_ARR         reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    TRANS_ARR       reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    INV_ARR         reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    MULT            reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    DIV             reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    MOD             reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    PLUS            reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    MINUS           reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    MORE            reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    LESS            reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    COMPARE         reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    DIFFERENT       reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    MOREEQUAL       reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    LESSEQUAL       reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    AND             reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    OR              reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    RSTAPLE         reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    RPAREN          reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    HACER           reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    HASTA           reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    RBRACKET        reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)
    EQUAL           reduce using rule 16 (ARRDIM -> LSTAPLE EXPRESION COMA EXPRESION RSTAPLE .)


state 128

    (40) EXPRESION_AUX -> AND r_seen_operator . EXPRESION
    (39) EXPRESION -> . SUBEXP r_seen_subexp EXPRESION_AUX
    (43) SUBEXP -> . EXP r_seen_exp SUBEXP_AUX
    (52) EXP -> . TERMINO r_seen_term EXP_AUX
    (56) TERMINO -> . FACTOR r_seen_factor TERMINO_AUX
    (61) FACTOR -> . LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator
    (62) FACTOR -> . PLUS r_seen_unary_operator CTE
    (63) FACTOR -> . MINUS r_seen_unary_operator CTE
    (64) FACTOR -> . NOT r_seen_unary_operator CTE
    (65) FACTOR -> . CTE ARROP
    (66) FACTOR -> . CTE
    (67) CTE -> . CTE_I r_seen_operand
    (68) CTE -> . CTE_F r_seen_operand
    (69) CTE -> . CTE_CH r_seen_operand
    (70) CTE -> . CTE_STRING r_seen_operand
    (71) CTE -> . FUN
    (72) CTE -> . ID ARRDIM
    (76) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 54
    NOT             shift and go to state 55
    CTE_I           shift and go to state 56
    CTE_F           shift and go to state 57
    CTE_CH          shift and go to state 58
    CTE_STRING      shift and go to state 59
    ID              shift and go to state 61

    EXPRESION                      shift and go to state 168
    SUBEXP                         shift and go to state 47
    EXP                            shift and go to state 48
    TERMINO                        shift and go to state 49
    FACTOR                         shift and go to state 50
    CTE                            shift and go to state 53
    FUN                            shift and go to state 60

state 129

    (41) EXPRESION_AUX -> OR r_seen_operator . EXPRESION
    (39) EXPRESION -> . SUBEXP r_seen_subexp EXPRESION_AUX
    (43) SUBEXP -> . EXP r_seen_exp SUBEXP_AUX
    (52) EXP -> . TERMINO r_seen_term EXP_AUX
    (56) TERMINO -> . FACTOR r_seen_factor TERMINO_AUX
    (61) FACTOR -> . LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator
    (62) FACTOR -> . PLUS r_seen_unary_operator CTE
    (63) FACTOR -> . MINUS r_seen_unary_operator CTE
    (64) FACTOR -> . NOT r_seen_unary_operator CTE
    (65) FACTOR -> . CTE ARROP
    (66) FACTOR -> . CTE
    (67) CTE -> . CTE_I r_seen_operand
    (68) CTE -> . CTE_F r_seen_operand
    (69) CTE -> . CTE_CH r_seen_operand
    (70) CTE -> . CTE_STRING r_seen_operand
    (71) CTE -> . FUN
    (72) CTE -> . ID ARRDIM
    (76) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 54
    NOT             shift and go to state 55
    CTE_I           shift and go to state 56
    CTE_F           shift and go to state 57
    CTE_CH          shift and go to state 58
    CTE_STRING      shift and go to state 59
    ID              shift and go to state 61

    EXPRESION                      shift and go to state 169
    SUBEXP                         shift and go to state 47
    EXP                            shift and go to state 48
    TERMINO                        shift and go to state 49
    FACTOR                         shift and go to state 50
    CTE                            shift and go to state 53
    FUN                            shift and go to state 60

state 130

    (44) SUBEXP_AUX -> COMPARACION SUBEXP .

    AND             reduce using rule 44 (SUBEXP_AUX -> COMPARACION SUBEXP .)
    OR              reduce using rule 44 (SUBEXP_AUX -> COMPARACION SUBEXP .)
    RSTAPLE         reduce using rule 44 (SUBEXP_AUX -> COMPARACION SUBEXP .)
    COMA            reduce using rule 44 (SUBEXP_AUX -> COMPARACION SUBEXP .)
    RPAREN          reduce using rule 44 (SUBEXP_AUX -> COMPARACION SUBEXP .)
    HACER           reduce using rule 44 (SUBEXP_AUX -> COMPARACION SUBEXP .)
    DOTCOMA         reduce using rule 44 (SUBEXP_AUX -> COMPARACION SUBEXP .)
    HASTA           reduce using rule 44 (SUBEXP_AUX -> COMPARACION SUBEXP .)


state 131

    (46) COMPARACION -> MORE r_seen_operator .

    LPAREN          reduce using rule 46 (COMPARACION -> MORE r_seen_operator .)
    PLUS            reduce using rule 46 (COMPARACION -> MORE r_seen_operator .)
    MINUS           reduce using rule 46 (COMPARACION -> MORE r_seen_operator .)
    NOT             reduce using rule 46 (COMPARACION -> MORE r_seen_operator .)
    CTE_I           reduce using rule 46 (COMPARACION -> MORE r_seen_operator .)
    CTE_F           reduce using rule 46 (COMPARACION -> MORE r_seen_operator .)
    CTE_CH          reduce using rule 46 (COMPARACION -> MORE r_seen_operator .)
    CTE_STRING      reduce using rule 46 (COMPARACION -> MORE r_seen_operator .)
    ID              reduce using rule 46 (COMPARACION -> MORE r_seen_operator .)


state 132

    (47) COMPARACION -> LESS r_seen_operator .

    LPAREN          reduce using rule 47 (COMPARACION -> LESS r_seen_operator .)
    PLUS            reduce using rule 47 (COMPARACION -> LESS r_seen_operator .)
    MINUS           reduce using rule 47 (COMPARACION -> LESS r_seen_operator .)
    NOT             reduce using rule 47 (COMPARACION -> LESS r_seen_operator .)
    CTE_I           reduce using rule 47 (COMPARACION -> LESS r_seen_operator .)
    CTE_F           reduce using rule 47 (COMPARACION -> LESS r_seen_operator .)
    CTE_CH          reduce using rule 47 (COMPARACION -> LESS r_seen_operator .)
    CTE_STRING      reduce using rule 47 (COMPARACION -> LESS r_seen_operator .)
    ID              reduce using rule 47 (COMPARACION -> LESS r_seen_operator .)


state 133

    (48) COMPARACION -> COMPARE r_seen_operator .

    LPAREN          reduce using rule 48 (COMPARACION -> COMPARE r_seen_operator .)
    PLUS            reduce using rule 48 (COMPARACION -> COMPARE r_seen_operator .)
    MINUS           reduce using rule 48 (COMPARACION -> COMPARE r_seen_operator .)
    NOT             reduce using rule 48 (COMPARACION -> COMPARE r_seen_operator .)
    CTE_I           reduce using rule 48 (COMPARACION -> COMPARE r_seen_operator .)
    CTE_F           reduce using rule 48 (COMPARACION -> COMPARE r_seen_operator .)
    CTE_CH          reduce using rule 48 (COMPARACION -> COMPARE r_seen_operator .)
    CTE_STRING      reduce using rule 48 (COMPARACION -> COMPARE r_seen_operator .)
    ID              reduce using rule 48 (COMPARACION -> COMPARE r_seen_operator .)


state 134

    (49) COMPARACION -> DIFFERENT r_seen_operator .

    LPAREN          reduce using rule 49 (COMPARACION -> DIFFERENT r_seen_operator .)
    PLUS            reduce using rule 49 (COMPARACION -> DIFFERENT r_seen_operator .)
    MINUS           reduce using rule 49 (COMPARACION -> DIFFERENT r_seen_operator .)
    NOT             reduce using rule 49 (COMPARACION -> DIFFERENT r_seen_operator .)
    CTE_I           reduce using rule 49 (COMPARACION -> DIFFERENT r_seen_operator .)
    CTE_F           reduce using rule 49 (COMPARACION -> DIFFERENT r_seen_operator .)
    CTE_CH          reduce using rule 49 (COMPARACION -> DIFFERENT r_seen_operator .)
    CTE_STRING      reduce using rule 49 (COMPARACION -> DIFFERENT r_seen_operator .)
    ID              reduce using rule 49 (COMPARACION -> DIFFERENT r_seen_operator .)


state 135

    (50) COMPARACION -> MOREEQUAL r_seen_operator .

    LPAREN          reduce using rule 50 (COMPARACION -> MOREEQUAL r_seen_operator .)
    PLUS            reduce using rule 50 (COMPARACION -> MOREEQUAL r_seen_operator .)
    MINUS           reduce using rule 50 (COMPARACION -> MOREEQUAL r_seen_operator .)
    NOT             reduce using rule 50 (COMPARACION -> MOREEQUAL r_seen_operator .)
    CTE_I           reduce using rule 50 (COMPARACION -> MOREEQUAL r_seen_operator .)
    CTE_F           reduce using rule 50 (COMPARACION -> MOREEQUAL r_seen_operator .)
    CTE_CH          reduce using rule 50 (COMPARACION -> MOREEQUAL r_seen_operator .)
    CTE_STRING      reduce using rule 50 (COMPARACION -> MOREEQUAL r_seen_operator .)
    ID              reduce using rule 50 (COMPARACION -> MOREEQUAL r_seen_operator .)


state 136

    (51) COMPARACION -> LESSEQUAL r_seen_operator .

    LPAREN          reduce using rule 51 (COMPARACION -> LESSEQUAL r_seen_operator .)
    PLUS            reduce using rule 51 (COMPARACION -> LESSEQUAL r_seen_operator .)
    MINUS           reduce using rule 51 (COMPARACION -> LESSEQUAL r_seen_operator .)
    NOT             reduce using rule 51 (COMPARACION -> LESSEQUAL r_seen_operator .)
    CTE_I           reduce using rule 51 (COMPARACION -> LESSEQUAL r_seen_operator .)
    CTE_F           reduce using rule 51 (COMPARACION -> LESSEQUAL r_seen_operator .)
    CTE_CH          reduce using rule 51 (COMPARACION -> LESSEQUAL r_seen_operator .)
    CTE_STRING      reduce using rule 51 (COMPARACION -> LESSEQUAL r_seen_operator .)
    ID              reduce using rule 51 (COMPARACION -> LESSEQUAL r_seen_operator .)


state 137

    (53) EXP_AUX -> PLUS r_seen_operator . EXP
    (52) EXP -> . TERMINO r_seen_term EXP_AUX
    (56) TERMINO -> . FACTOR r_seen_factor TERMINO_AUX
    (61) FACTOR -> . LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator
    (62) FACTOR -> . PLUS r_seen_unary_operator CTE
    (63) FACTOR -> . MINUS r_seen_unary_operator CTE
    (64) FACTOR -> . NOT r_seen_unary_operator CTE
    (65) FACTOR -> . CTE ARROP
    (66) FACTOR -> . CTE
    (67) CTE -> . CTE_I r_seen_operand
    (68) CTE -> . CTE_F r_seen_operand
    (69) CTE -> . CTE_CH r_seen_operand
    (70) CTE -> . CTE_STRING r_seen_operand
    (71) CTE -> . FUN
    (72) CTE -> . ID ARRDIM
    (76) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 54
    NOT             shift and go to state 55
    CTE_I           shift and go to state 56
    CTE_F           shift and go to state 57
    CTE_CH          shift and go to state 58
    CTE_STRING      shift and go to state 59
    ID              shift and go to state 61

    EXP                            shift and go to state 170
    TERMINO                        shift and go to state 49
    FACTOR                         shift and go to state 50
    CTE                            shift and go to state 53
    FUN                            shift and go to state 60

state 138

    (54) EXP_AUX -> MINUS r_seen_operator . EXP
    (52) EXP -> . TERMINO r_seen_term EXP_AUX
    (56) TERMINO -> . FACTOR r_seen_factor TERMINO_AUX
    (61) FACTOR -> . LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator
    (62) FACTOR -> . PLUS r_seen_unary_operator CTE
    (63) FACTOR -> . MINUS r_seen_unary_operator CTE
    (64) FACTOR -> . NOT r_seen_unary_operator CTE
    (65) FACTOR -> . CTE ARROP
    (66) FACTOR -> . CTE
    (67) CTE -> . CTE_I r_seen_operand
    (68) CTE -> . CTE_F r_seen_operand
    (69) CTE -> . CTE_CH r_seen_operand
    (70) CTE -> . CTE_STRING r_seen_operand
    (71) CTE -> . FUN
    (72) CTE -> . ID ARRDIM
    (76) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 54
    NOT             shift and go to state 55
    CTE_I           shift and go to state 56
    CTE_F           shift and go to state 57
    CTE_CH          shift and go to state 58
    CTE_STRING      shift and go to state 59
    ID              shift and go to state 61

    EXP                            shift and go to state 171
    TERMINO                        shift and go to state 49
    FACTOR                         shift and go to state 50
    CTE                            shift and go to state 53
    FUN                            shift and go to state 60

state 139

    (57) TERMINO_AUX -> MULT r_seen_operator . TERMINO
    (56) TERMINO -> . FACTOR r_seen_factor TERMINO_AUX
    (61) FACTOR -> . LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator
    (62) FACTOR -> . PLUS r_seen_unary_operator CTE
    (63) FACTOR -> . MINUS r_seen_unary_operator CTE
    (64) FACTOR -> . NOT r_seen_unary_operator CTE
    (65) FACTOR -> . CTE ARROP
    (66) FACTOR -> . CTE
    (67) CTE -> . CTE_I r_seen_operand
    (68) CTE -> . CTE_F r_seen_operand
    (69) CTE -> . CTE_CH r_seen_operand
    (70) CTE -> . CTE_STRING r_seen_operand
    (71) CTE -> . FUN
    (72) CTE -> . ID ARRDIM
    (76) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 54
    NOT             shift and go to state 55
    CTE_I           shift and go to state 56
    CTE_F           shift and go to state 57
    CTE_CH          shift and go to state 58
    CTE_STRING      shift and go to state 59
    ID              shift and go to state 61

    TERMINO                        shift and go to state 172
    FACTOR                         shift and go to state 50
    CTE                            shift and go to state 53
    FUN                            shift and go to state 60

state 140

    (58) TERMINO_AUX -> DIV r_seen_operator . TERMINO
    (56) TERMINO -> . FACTOR r_seen_factor TERMINO_AUX
    (61) FACTOR -> . LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator
    (62) FACTOR -> . PLUS r_seen_unary_operator CTE
    (63) FACTOR -> . MINUS r_seen_unary_operator CTE
    (64) FACTOR -> . NOT r_seen_unary_operator CTE
    (65) FACTOR -> . CTE ARROP
    (66) FACTOR -> . CTE
    (67) CTE -> . CTE_I r_seen_operand
    (68) CTE -> . CTE_F r_seen_operand
    (69) CTE -> . CTE_CH r_seen_operand
    (70) CTE -> . CTE_STRING r_seen_operand
    (71) CTE -> . FUN
    (72) CTE -> . ID ARRDIM
    (76) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 54
    NOT             shift and go to state 55
    CTE_I           shift and go to state 56
    CTE_F           shift and go to state 57
    CTE_CH          shift and go to state 58
    CTE_STRING      shift and go to state 59
    ID              shift and go to state 61

    TERMINO                        shift and go to state 173
    FACTOR                         shift and go to state 50
    CTE                            shift and go to state 53
    FUN                            shift and go to state 60

state 141

    (59) TERMINO_AUX -> MOD r_seen_operator . TERMINO
    (56) TERMINO -> . FACTOR r_seen_factor TERMINO_AUX
    (61) FACTOR -> . LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator
    (62) FACTOR -> . PLUS r_seen_unary_operator CTE
    (63) FACTOR -> . MINUS r_seen_unary_operator CTE
    (64) FACTOR -> . NOT r_seen_unary_operator CTE
    (65) FACTOR -> . CTE ARROP
    (66) FACTOR -> . CTE
    (67) CTE -> . CTE_I r_seen_operand
    (68) CTE -> . CTE_F r_seen_operand
    (69) CTE -> . CTE_CH r_seen_operand
    (70) CTE -> . CTE_STRING r_seen_operand
    (71) CTE -> . FUN
    (72) CTE -> . ID ARRDIM
    (76) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 54
    NOT             shift and go to state 55
    CTE_I           shift and go to state 56
    CTE_F           shift and go to state 57
    CTE_CH          shift and go to state 58
    CTE_STRING      shift and go to state 59
    ID              shift and go to state 61

    TERMINO                        shift and go to state 174
    FACTOR                         shift and go to state 50
    CTE                            shift and go to state 53
    FUN                            shift and go to state 60

state 142

    (61) FACTOR -> LPAREN r_seen_operator EXPRESION RPAREN . r_seen_operator
    (118) r_seen_operator -> .

    MULT            reduce using rule 118 (r_seen_operator -> .)
    DIV             reduce using rule 118 (r_seen_operator -> .)
    MOD             reduce using rule 118 (r_seen_operator -> .)
    PLUS            reduce using rule 118 (r_seen_operator -> .)
    MINUS           reduce using rule 118 (r_seen_operator -> .)
    MORE            reduce using rule 118 (r_seen_operator -> .)
    LESS            reduce using rule 118 (r_seen_operator -> .)
    COMPARE         reduce using rule 118 (r_seen_operator -> .)
    DIFFERENT       reduce using rule 118 (r_seen_operator -> .)
    MOREEQUAL       reduce using rule 118 (r_seen_operator -> .)
    LESSEQUAL       reduce using rule 118 (r_seen_operator -> .)
    AND             reduce using rule 118 (r_seen_operator -> .)
    OR              reduce using rule 118 (r_seen_operator -> .)
    RSTAPLE         reduce using rule 118 (r_seen_operator -> .)
    COMA            reduce using rule 118 (r_seen_operator -> .)
    RPAREN          reduce using rule 118 (r_seen_operator -> .)
    HACER           reduce using rule 118 (r_seen_operator -> .)
    DOTCOMA         reduce using rule 118 (r_seen_operator -> .)
    HASTA           reduce using rule 118 (r_seen_operator -> .)

    r_seen_operator                shift and go to state 175

state 143

    (76) FUN -> ID LPAREN FUN_AUX RPAREN .

    DET_ARR         reduce using rule 76 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    TRANS_ARR       reduce using rule 76 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    INV_ARR         reduce using rule 76 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    MULT            reduce using rule 76 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    DIV             reduce using rule 76 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    MOD             reduce using rule 76 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    PLUS            reduce using rule 76 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    MINUS           reduce using rule 76 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    MORE            reduce using rule 76 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    LESS            reduce using rule 76 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    COMPARE         reduce using rule 76 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    DIFFERENT       reduce using rule 76 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    MOREEQUAL       reduce using rule 76 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    LESSEQUAL       reduce using rule 76 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    AND             reduce using rule 76 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    OR              reduce using rule 76 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    RSTAPLE         reduce using rule 76 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    COMA            reduce using rule 76 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    RPAREN          reduce using rule 76 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    HACER           reduce using rule 76 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    DOTCOMA         reduce using rule 76 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    HASTA           reduce using rule 76 (FUN -> ID LPAREN FUN_AUX RPAREN .)
    RBRACKET        reduce using rule 76 (FUN -> ID LPAREN FUN_AUX RPAREN .)


state 144

    (77) FUN_AUX -> EXPRESION COMA . FUN_AUX
    (77) FUN_AUX -> . EXPRESION COMA FUN_AUX
    (78) FUN_AUX -> . EXPRESION
    (79) FUN_AUX -> . empty
    (39) EXPRESION -> . SUBEXP r_seen_subexp EXPRESION_AUX
    (1) empty -> .
    (43) SUBEXP -> . EXP r_seen_exp SUBEXP_AUX
    (52) EXP -> . TERMINO r_seen_term EXP_AUX
    (56) TERMINO -> . FACTOR r_seen_factor TERMINO_AUX
    (61) FACTOR -> . LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator
    (62) FACTOR -> . PLUS r_seen_unary_operator CTE
    (63) FACTOR -> . MINUS r_seen_unary_operator CTE
    (64) FACTOR -> . NOT r_seen_unary_operator CTE
    (65) FACTOR -> . CTE ARROP
    (66) FACTOR -> . CTE
    (67) CTE -> . CTE_I r_seen_operand
    (68) CTE -> . CTE_F r_seen_operand
    (69) CTE -> . CTE_CH r_seen_operand
    (70) CTE -> . CTE_STRING r_seen_operand
    (71) CTE -> . FUN
    (72) CTE -> . ID ARRDIM
    (76) FUN -> . ID LPAREN FUN_AUX RPAREN

    RPAREN          reduce using rule 1 (empty -> .)
    LPAREN          shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 54
    NOT             shift and go to state 55
    CTE_I           shift and go to state 56
    CTE_F           shift and go to state 57
    CTE_CH          shift and go to state 58
    CTE_STRING      shift and go to state 59
    ID              shift and go to state 61

    EXPRESION                      shift and go to state 119
    FUN_AUX                        shift and go to state 176
    empty                          shift and go to state 120
    SUBEXP                         shift and go to state 47
    EXP                            shift and go to state 48
    TERMINO                        shift and go to state 49
    FACTOR                         shift and go to state 50
    CTE                            shift and go to state 53
    FUN                            shift and go to state 60

state 145

    (28) BLOQUE -> LBRACKET ESTATUTOS . RBRACKET

    RBRACKET        shift and go to state 177


state 146

    (29) ESTATUTOS -> ESTATUTO . ESTATUTOS
    (29) ESTATUTOS -> . ESTATUTO ESTATUTOS
    (30) ESTATUTOS -> . empty
    (31) ESTATUTO -> . ASIGNACION DOTCOMA
    (32) ESTATUTO -> . FUN DOTCOMA
    (33) ESTATUTO -> . COND
    (34) ESTATUTO -> . WRITE DOTCOMA
    (35) ESTATUTO -> . READ DOTCOMA
    (36) ESTATUTO -> . RETURN DOTCOMA
    (1) empty -> .
    (37) ASIGNACION -> . ID ARRDIM EQUAL r_seen_operator EXPRESION
    (38) ASIGNACION -> . ID ARRDIM EQUAL r_seen_operator CTE_ARR
    (76) FUN -> . ID LPAREN FUN_AUX RPAREN
    (80) COND -> . IF
    (81) COND -> . FOR
    (82) COND -> . WHILE
    (93) WRITE -> . ESCRIBE LPAREN WRITE_AUX RPAREN
    (97) READ -> . LEE LPAREN READ_AUX RPAREN
    (101) RETURN -> . REGRESA LPAREN EXPRESION RPAREN
    (102) RETURN -> . REGRESA LPAREN NULL RPAREN
    (83) IF -> . SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX
    (84) IF -> . SI LPAREN EXPRESION RPAREN ENTONCES COND
    (91) FOR -> . DESDE ASIGNACION HASTA EXPRESION HACER BLOQUE
    (92) FOR -> . DESDE ASIGNACION HASTA EXPRESION HACER COND
    (87) WHILE -> . MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE
    (88) WHILE -> . MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX COND

    RBRACKET        reduce using rule 1 (empty -> .)
    ID              shift and go to state 154
    ESCRIBE         shift and go to state 158
    LEE             shift and go to state 159
    REGRESA         shift and go to state 160
    SI              shift and go to state 161
    DESDE           shift and go to state 162
    MIENTRAS        shift and go to state 163

    ESTATUTO                       shift and go to state 146
    ESTATUTOS                      shift and go to state 178
    empty                          shift and go to state 147
    ASIGNACION                     shift and go to state 148
    FUN                            shift and go to state 149
    COND                           shift and go to state 150
    WRITE                          shift and go to state 151
    READ                           shift and go to state 152
    RETURN                         shift and go to state 153
    IF                             shift and go to state 155
    FOR                            shift and go to state 156
    WHILE                          shift and go to state 157

state 147

    (30) ESTATUTOS -> empty .

    RBRACKET        reduce using rule 30 (ESTATUTOS -> empty .)


state 148

    (31) ESTATUTO -> ASIGNACION . DOTCOMA

    DOTCOMA         shift and go to state 179


state 149

    (32) ESTATUTO -> FUN . DOTCOMA

    DOTCOMA         shift and go to state 180


state 150

    (33) ESTATUTO -> COND .

    ID              reduce using rule 33 (ESTATUTO -> COND .)
    ESCRIBE         reduce using rule 33 (ESTATUTO -> COND .)
    LEE             reduce using rule 33 (ESTATUTO -> COND .)
    REGRESA         reduce using rule 33 (ESTATUTO -> COND .)
    SI              reduce using rule 33 (ESTATUTO -> COND .)
    DESDE           reduce using rule 33 (ESTATUTO -> COND .)
    MIENTRAS        reduce using rule 33 (ESTATUTO -> COND .)
    RBRACKET        reduce using rule 33 (ESTATUTO -> COND .)


state 151

    (34) ESTATUTO -> WRITE . DOTCOMA

    DOTCOMA         shift and go to state 181


state 152

    (35) ESTATUTO -> READ . DOTCOMA

    DOTCOMA         shift and go to state 182


state 153

    (36) ESTATUTO -> RETURN . DOTCOMA

    DOTCOMA         shift and go to state 183


state 154

    (37) ASIGNACION -> ID . ARRDIM EQUAL r_seen_operator EXPRESION
    (38) ASIGNACION -> ID . ARRDIM EQUAL r_seen_operator CTE_ARR
    (76) FUN -> ID . LPAREN FUN_AUX RPAREN
    (14) ARRDIM -> . LSTAPLE EXPRESION RSTAPLE
    (15) ARRDIM -> . LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE
    (16) ARRDIM -> . LSTAPLE EXPRESION COMA EXPRESION RSTAPLE
    (17) ARRDIM -> . empty
    (1) empty -> .

    LPAREN          shift and go to state 85
    LSTAPLE         shift and go to state 39
    EQUAL           reduce using rule 1 (empty -> .)

    ARRDIM                         shift and go to state 184
    empty                          shift and go to state 40

state 155

    (80) COND -> IF .

    ID              reduce using rule 80 (COND -> IF .)
    ESCRIBE         reduce using rule 80 (COND -> IF .)
    LEE             reduce using rule 80 (COND -> IF .)
    REGRESA         reduce using rule 80 (COND -> IF .)
    SI              reduce using rule 80 (COND -> IF .)
    DESDE           reduce using rule 80 (COND -> IF .)
    MIENTRAS        reduce using rule 80 (COND -> IF .)
    RBRACKET        reduce using rule 80 (COND -> IF .)


state 156

    (81) COND -> FOR .

    ID              reduce using rule 81 (COND -> FOR .)
    ESCRIBE         reduce using rule 81 (COND -> FOR .)
    LEE             reduce using rule 81 (COND -> FOR .)
    REGRESA         reduce using rule 81 (COND -> FOR .)
    SI              reduce using rule 81 (COND -> FOR .)
    DESDE           reduce using rule 81 (COND -> FOR .)
    MIENTRAS        reduce using rule 81 (COND -> FOR .)
    RBRACKET        reduce using rule 81 (COND -> FOR .)


state 157

    (82) COND -> WHILE .

    ID              reduce using rule 82 (COND -> WHILE .)
    ESCRIBE         reduce using rule 82 (COND -> WHILE .)
    LEE             reduce using rule 82 (COND -> WHILE .)
    REGRESA         reduce using rule 82 (COND -> WHILE .)
    SI              reduce using rule 82 (COND -> WHILE .)
    DESDE           reduce using rule 82 (COND -> WHILE .)
    MIENTRAS        reduce using rule 82 (COND -> WHILE .)
    RBRACKET        reduce using rule 82 (COND -> WHILE .)


state 158

    (93) WRITE -> ESCRIBE . LPAREN WRITE_AUX RPAREN

    LPAREN          shift and go to state 185


state 159

    (97) READ -> LEE . LPAREN READ_AUX RPAREN

    LPAREN          shift and go to state 186


state 160

    (101) RETURN -> REGRESA . LPAREN EXPRESION RPAREN
    (102) RETURN -> REGRESA . LPAREN NULL RPAREN

    LPAREN          shift and go to state 187


state 161

    (83) IF -> SI . LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX
    (84) IF -> SI . LPAREN EXPRESION RPAREN ENTONCES COND

    LPAREN          shift and go to state 188


state 162

    (91) FOR -> DESDE . ASIGNACION HASTA EXPRESION HACER BLOQUE
    (92) FOR -> DESDE . ASIGNACION HASTA EXPRESION HACER COND
    (37) ASIGNACION -> . ID ARRDIM EQUAL r_seen_operator EXPRESION
    (38) ASIGNACION -> . ID ARRDIM EQUAL r_seen_operator CTE_ARR

    ID              shift and go to state 190

    ASIGNACION                     shift and go to state 189

state 163

    (87) WHILE -> MIENTRAS . LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE
    (88) WHILE -> MIENTRAS . LPAREN EXPRESION RPAREN WHILE_AUX COND

    LPAREN          shift and go to state 191


state 164

    (22) PARAM -> TIPO ID r_register_var . PARENTESIS PARAM_AUX
    (25) PARENTESIS -> . LSTAPLE RSTAPLE
    (26) PARENTESIS -> . LSTAPLE RSTAPLE LSTAPLE RSTAPLE
    (27) PARENTESIS -> . empty
    (1) empty -> .

    LSTAPLE         shift and go to state 193
    COMA            reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)

    PARENTESIS                     shift and go to state 192
    empty                          shift and go to state 194

state 165

    (20) FUNCTION -> FUNCION TIPO ID r_save_func r_register_func LPAREN PARAM RPAREN VARS . BLOQUE
    (28) BLOQUE -> . LBRACKET ESTATUTOS RBRACKET

    LBRACKET        shift and go to state 122

    BLOQUE                         shift and go to state 195

state 166

    (21) FUNCTION -> FUNCION VOID r_save_type ID r_save_func r_register_func LPAREN PARAM RPAREN . VARS BLOQUE
    (4) VARS -> . VAR VAR_AUX
    (5) VARS -> . empty
    (1) empty -> .

    VAR             shift and go to state 6
    LBRACKET        reduce using rule 1 (empty -> .)

    VARS                           shift and go to state 196
    empty                          shift and go to state 7

state 167

    (15) ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .

    DOTCOMA         reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    COMA            reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    DET_ARR         reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    TRANS_ARR       reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    INV_ARR         reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    MULT            reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    DIV             reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    MOD             reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    PLUS            reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    MINUS           reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    MORE            reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    LESS            reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    COMPARE         reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    DIFFERENT       reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    MOREEQUAL       reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    LESSEQUAL       reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    AND             reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    OR              reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    RSTAPLE         reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    RPAREN          reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    HACER           reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    HASTA           reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    RBRACKET        reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)
    EQUAL           reduce using rule 15 (ARRDIM -> LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE .)


state 168

    (40) EXPRESION_AUX -> AND r_seen_operator EXPRESION .

    RSTAPLE         reduce using rule 40 (EXPRESION_AUX -> AND r_seen_operator EXPRESION .)
    COMA            reduce using rule 40 (EXPRESION_AUX -> AND r_seen_operator EXPRESION .)
    RPAREN          reduce using rule 40 (EXPRESION_AUX -> AND r_seen_operator EXPRESION .)
    HACER           reduce using rule 40 (EXPRESION_AUX -> AND r_seen_operator EXPRESION .)
    DOTCOMA         reduce using rule 40 (EXPRESION_AUX -> AND r_seen_operator EXPRESION .)
    HASTA           reduce using rule 40 (EXPRESION_AUX -> AND r_seen_operator EXPRESION .)


state 169

    (41) EXPRESION_AUX -> OR r_seen_operator EXPRESION .

    RSTAPLE         reduce using rule 41 (EXPRESION_AUX -> OR r_seen_operator EXPRESION .)
    COMA            reduce using rule 41 (EXPRESION_AUX -> OR r_seen_operator EXPRESION .)
    RPAREN          reduce using rule 41 (EXPRESION_AUX -> OR r_seen_operator EXPRESION .)
    HACER           reduce using rule 41 (EXPRESION_AUX -> OR r_seen_operator EXPRESION .)
    DOTCOMA         reduce using rule 41 (EXPRESION_AUX -> OR r_seen_operator EXPRESION .)
    HASTA           reduce using rule 41 (EXPRESION_AUX -> OR r_seen_operator EXPRESION .)


state 170

    (53) EXP_AUX -> PLUS r_seen_operator EXP .

    MORE            reduce using rule 53 (EXP_AUX -> PLUS r_seen_operator EXP .)
    LESS            reduce using rule 53 (EXP_AUX -> PLUS r_seen_operator EXP .)
    COMPARE         reduce using rule 53 (EXP_AUX -> PLUS r_seen_operator EXP .)
    DIFFERENT       reduce using rule 53 (EXP_AUX -> PLUS r_seen_operator EXP .)
    MOREEQUAL       reduce using rule 53 (EXP_AUX -> PLUS r_seen_operator EXP .)
    LESSEQUAL       reduce using rule 53 (EXP_AUX -> PLUS r_seen_operator EXP .)
    AND             reduce using rule 53 (EXP_AUX -> PLUS r_seen_operator EXP .)
    OR              reduce using rule 53 (EXP_AUX -> PLUS r_seen_operator EXP .)
    RSTAPLE         reduce using rule 53 (EXP_AUX -> PLUS r_seen_operator EXP .)
    COMA            reduce using rule 53 (EXP_AUX -> PLUS r_seen_operator EXP .)
    RPAREN          reduce using rule 53 (EXP_AUX -> PLUS r_seen_operator EXP .)
    HACER           reduce using rule 53 (EXP_AUX -> PLUS r_seen_operator EXP .)
    DOTCOMA         reduce using rule 53 (EXP_AUX -> PLUS r_seen_operator EXP .)
    HASTA           reduce using rule 53 (EXP_AUX -> PLUS r_seen_operator EXP .)


state 171

    (54) EXP_AUX -> MINUS r_seen_operator EXP .

    MORE            reduce using rule 54 (EXP_AUX -> MINUS r_seen_operator EXP .)
    LESS            reduce using rule 54 (EXP_AUX -> MINUS r_seen_operator EXP .)
    COMPARE         reduce using rule 54 (EXP_AUX -> MINUS r_seen_operator EXP .)
    DIFFERENT       reduce using rule 54 (EXP_AUX -> MINUS r_seen_operator EXP .)
    MOREEQUAL       reduce using rule 54 (EXP_AUX -> MINUS r_seen_operator EXP .)
    LESSEQUAL       reduce using rule 54 (EXP_AUX -> MINUS r_seen_operator EXP .)
    AND             reduce using rule 54 (EXP_AUX -> MINUS r_seen_operator EXP .)
    OR              reduce using rule 54 (EXP_AUX -> MINUS r_seen_operator EXP .)
    RSTAPLE         reduce using rule 54 (EXP_AUX -> MINUS r_seen_operator EXP .)
    COMA            reduce using rule 54 (EXP_AUX -> MINUS r_seen_operator EXP .)
    RPAREN          reduce using rule 54 (EXP_AUX -> MINUS r_seen_operator EXP .)
    HACER           reduce using rule 54 (EXP_AUX -> MINUS r_seen_operator EXP .)
    DOTCOMA         reduce using rule 54 (EXP_AUX -> MINUS r_seen_operator EXP .)
    HASTA           reduce using rule 54 (EXP_AUX -> MINUS r_seen_operator EXP .)


state 172

    (57) TERMINO_AUX -> MULT r_seen_operator TERMINO .

    PLUS            reduce using rule 57 (TERMINO_AUX -> MULT r_seen_operator TERMINO .)
    MINUS           reduce using rule 57 (TERMINO_AUX -> MULT r_seen_operator TERMINO .)
    MORE            reduce using rule 57 (TERMINO_AUX -> MULT r_seen_operator TERMINO .)
    LESS            reduce using rule 57 (TERMINO_AUX -> MULT r_seen_operator TERMINO .)
    COMPARE         reduce using rule 57 (TERMINO_AUX -> MULT r_seen_operator TERMINO .)
    DIFFERENT       reduce using rule 57 (TERMINO_AUX -> MULT r_seen_operator TERMINO .)
    MOREEQUAL       reduce using rule 57 (TERMINO_AUX -> MULT r_seen_operator TERMINO .)
    LESSEQUAL       reduce using rule 57 (TERMINO_AUX -> MULT r_seen_operator TERMINO .)
    AND             reduce using rule 57 (TERMINO_AUX -> MULT r_seen_operator TERMINO .)
    OR              reduce using rule 57 (TERMINO_AUX -> MULT r_seen_operator TERMINO .)
    RSTAPLE         reduce using rule 57 (TERMINO_AUX -> MULT r_seen_operator TERMINO .)
    COMA            reduce using rule 57 (TERMINO_AUX -> MULT r_seen_operator TERMINO .)
    RPAREN          reduce using rule 57 (TERMINO_AUX -> MULT r_seen_operator TERMINO .)
    HACER           reduce using rule 57 (TERMINO_AUX -> MULT r_seen_operator TERMINO .)
    DOTCOMA         reduce using rule 57 (TERMINO_AUX -> MULT r_seen_operator TERMINO .)
    HASTA           reduce using rule 57 (TERMINO_AUX -> MULT r_seen_operator TERMINO .)


state 173

    (58) TERMINO_AUX -> DIV r_seen_operator TERMINO .

    PLUS            reduce using rule 58 (TERMINO_AUX -> DIV r_seen_operator TERMINO .)
    MINUS           reduce using rule 58 (TERMINO_AUX -> DIV r_seen_operator TERMINO .)
    MORE            reduce using rule 58 (TERMINO_AUX -> DIV r_seen_operator TERMINO .)
    LESS            reduce using rule 58 (TERMINO_AUX -> DIV r_seen_operator TERMINO .)
    COMPARE         reduce using rule 58 (TERMINO_AUX -> DIV r_seen_operator TERMINO .)
    DIFFERENT       reduce using rule 58 (TERMINO_AUX -> DIV r_seen_operator TERMINO .)
    MOREEQUAL       reduce using rule 58 (TERMINO_AUX -> DIV r_seen_operator TERMINO .)
    LESSEQUAL       reduce using rule 58 (TERMINO_AUX -> DIV r_seen_operator TERMINO .)
    AND             reduce using rule 58 (TERMINO_AUX -> DIV r_seen_operator TERMINO .)
    OR              reduce using rule 58 (TERMINO_AUX -> DIV r_seen_operator TERMINO .)
    RSTAPLE         reduce using rule 58 (TERMINO_AUX -> DIV r_seen_operator TERMINO .)
    COMA            reduce using rule 58 (TERMINO_AUX -> DIV r_seen_operator TERMINO .)
    RPAREN          reduce using rule 58 (TERMINO_AUX -> DIV r_seen_operator TERMINO .)
    HACER           reduce using rule 58 (TERMINO_AUX -> DIV r_seen_operator TERMINO .)
    DOTCOMA         reduce using rule 58 (TERMINO_AUX -> DIV r_seen_operator TERMINO .)
    HASTA           reduce using rule 58 (TERMINO_AUX -> DIV r_seen_operator TERMINO .)


state 174

    (59) TERMINO_AUX -> MOD r_seen_operator TERMINO .

    PLUS            reduce using rule 59 (TERMINO_AUX -> MOD r_seen_operator TERMINO .)
    MINUS           reduce using rule 59 (TERMINO_AUX -> MOD r_seen_operator TERMINO .)
    MORE            reduce using rule 59 (TERMINO_AUX -> MOD r_seen_operator TERMINO .)
    LESS            reduce using rule 59 (TERMINO_AUX -> MOD r_seen_operator TERMINO .)
    COMPARE         reduce using rule 59 (TERMINO_AUX -> MOD r_seen_operator TERMINO .)
    DIFFERENT       reduce using rule 59 (TERMINO_AUX -> MOD r_seen_operator TERMINO .)
    MOREEQUAL       reduce using rule 59 (TERMINO_AUX -> MOD r_seen_operator TERMINO .)
    LESSEQUAL       reduce using rule 59 (TERMINO_AUX -> MOD r_seen_operator TERMINO .)
    AND             reduce using rule 59 (TERMINO_AUX -> MOD r_seen_operator TERMINO .)
    OR              reduce using rule 59 (TERMINO_AUX -> MOD r_seen_operator TERMINO .)
    RSTAPLE         reduce using rule 59 (TERMINO_AUX -> MOD r_seen_operator TERMINO .)
    COMA            reduce using rule 59 (TERMINO_AUX -> MOD r_seen_operator TERMINO .)
    RPAREN          reduce using rule 59 (TERMINO_AUX -> MOD r_seen_operator TERMINO .)
    HACER           reduce using rule 59 (TERMINO_AUX -> MOD r_seen_operator TERMINO .)
    DOTCOMA         reduce using rule 59 (TERMINO_AUX -> MOD r_seen_operator TERMINO .)
    HASTA           reduce using rule 59 (TERMINO_AUX -> MOD r_seen_operator TERMINO .)


state 175

    (61) FACTOR -> LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator .

    MULT            reduce using rule 61 (FACTOR -> LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator .)
    DIV             reduce using rule 61 (FACTOR -> LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator .)
    MOD             reduce using rule 61 (FACTOR -> LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator .)
    PLUS            reduce using rule 61 (FACTOR -> LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator .)
    MINUS           reduce using rule 61 (FACTOR -> LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator .)
    MORE            reduce using rule 61 (FACTOR -> LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator .)
    LESS            reduce using rule 61 (FACTOR -> LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator .)
    COMPARE         reduce using rule 61 (FACTOR -> LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator .)
    DIFFERENT       reduce using rule 61 (FACTOR -> LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator .)
    MOREEQUAL       reduce using rule 61 (FACTOR -> LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator .)
    LESSEQUAL       reduce using rule 61 (FACTOR -> LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator .)
    AND             reduce using rule 61 (FACTOR -> LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator .)
    OR              reduce using rule 61 (FACTOR -> LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator .)
    RSTAPLE         reduce using rule 61 (FACTOR -> LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator .)
    COMA            reduce using rule 61 (FACTOR -> LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator .)
    RPAREN          reduce using rule 61 (FACTOR -> LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator .)
    HACER           reduce using rule 61 (FACTOR -> LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator .)
    DOTCOMA         reduce using rule 61 (FACTOR -> LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator .)
    HASTA           reduce using rule 61 (FACTOR -> LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator .)


state 176

    (77) FUN_AUX -> EXPRESION COMA FUN_AUX .

    RPAREN          reduce using rule 77 (FUN_AUX -> EXPRESION COMA FUN_AUX .)


state 177

    (28) BLOQUE -> LBRACKET ESTATUTOS RBRACKET .

    $end            reduce using rule 28 (BLOQUE -> LBRACKET ESTATUTOS RBRACKET .)
    FUNCION         reduce using rule 28 (BLOQUE -> LBRACKET ESTATUTOS RBRACKET .)
    PRINCIPAL       reduce using rule 28 (BLOQUE -> LBRACKET ESTATUTOS RBRACKET .)
    SINO            reduce using rule 28 (BLOQUE -> LBRACKET ESTATUTOS RBRACKET .)
    ID              reduce using rule 28 (BLOQUE -> LBRACKET ESTATUTOS RBRACKET .)
    ESCRIBE         reduce using rule 28 (BLOQUE -> LBRACKET ESTATUTOS RBRACKET .)
    LEE             reduce using rule 28 (BLOQUE -> LBRACKET ESTATUTOS RBRACKET .)
    REGRESA         reduce using rule 28 (BLOQUE -> LBRACKET ESTATUTOS RBRACKET .)
    SI              reduce using rule 28 (BLOQUE -> LBRACKET ESTATUTOS RBRACKET .)
    DESDE           reduce using rule 28 (BLOQUE -> LBRACKET ESTATUTOS RBRACKET .)
    MIENTRAS        reduce using rule 28 (BLOQUE -> LBRACKET ESTATUTOS RBRACKET .)
    RBRACKET        reduce using rule 28 (BLOQUE -> LBRACKET ESTATUTOS RBRACKET .)


state 178

    (29) ESTATUTOS -> ESTATUTO ESTATUTOS .

    RBRACKET        reduce using rule 29 (ESTATUTOS -> ESTATUTO ESTATUTOS .)


state 179

    (31) ESTATUTO -> ASIGNACION DOTCOMA .

    ID              reduce using rule 31 (ESTATUTO -> ASIGNACION DOTCOMA .)
    ESCRIBE         reduce using rule 31 (ESTATUTO -> ASIGNACION DOTCOMA .)
    LEE             reduce using rule 31 (ESTATUTO -> ASIGNACION DOTCOMA .)
    REGRESA         reduce using rule 31 (ESTATUTO -> ASIGNACION DOTCOMA .)
    SI              reduce using rule 31 (ESTATUTO -> ASIGNACION DOTCOMA .)
    DESDE           reduce using rule 31 (ESTATUTO -> ASIGNACION DOTCOMA .)
    MIENTRAS        reduce using rule 31 (ESTATUTO -> ASIGNACION DOTCOMA .)
    RBRACKET        reduce using rule 31 (ESTATUTO -> ASIGNACION DOTCOMA .)


state 180

    (32) ESTATUTO -> FUN DOTCOMA .

    ID              reduce using rule 32 (ESTATUTO -> FUN DOTCOMA .)
    ESCRIBE         reduce using rule 32 (ESTATUTO -> FUN DOTCOMA .)
    LEE             reduce using rule 32 (ESTATUTO -> FUN DOTCOMA .)
    REGRESA         reduce using rule 32 (ESTATUTO -> FUN DOTCOMA .)
    SI              reduce using rule 32 (ESTATUTO -> FUN DOTCOMA .)
    DESDE           reduce using rule 32 (ESTATUTO -> FUN DOTCOMA .)
    MIENTRAS        reduce using rule 32 (ESTATUTO -> FUN DOTCOMA .)
    RBRACKET        reduce using rule 32 (ESTATUTO -> FUN DOTCOMA .)


state 181

    (34) ESTATUTO -> WRITE DOTCOMA .

    ID              reduce using rule 34 (ESTATUTO -> WRITE DOTCOMA .)
    ESCRIBE         reduce using rule 34 (ESTATUTO -> WRITE DOTCOMA .)
    LEE             reduce using rule 34 (ESTATUTO -> WRITE DOTCOMA .)
    REGRESA         reduce using rule 34 (ESTATUTO -> WRITE DOTCOMA .)
    SI              reduce using rule 34 (ESTATUTO -> WRITE DOTCOMA .)
    DESDE           reduce using rule 34 (ESTATUTO -> WRITE DOTCOMA .)
    MIENTRAS        reduce using rule 34 (ESTATUTO -> WRITE DOTCOMA .)
    RBRACKET        reduce using rule 34 (ESTATUTO -> WRITE DOTCOMA .)


state 182

    (35) ESTATUTO -> READ DOTCOMA .

    ID              reduce using rule 35 (ESTATUTO -> READ DOTCOMA .)
    ESCRIBE         reduce using rule 35 (ESTATUTO -> READ DOTCOMA .)
    LEE             reduce using rule 35 (ESTATUTO -> READ DOTCOMA .)
    REGRESA         reduce using rule 35 (ESTATUTO -> READ DOTCOMA .)
    SI              reduce using rule 35 (ESTATUTO -> READ DOTCOMA .)
    DESDE           reduce using rule 35 (ESTATUTO -> READ DOTCOMA .)
    MIENTRAS        reduce using rule 35 (ESTATUTO -> READ DOTCOMA .)
    RBRACKET        reduce using rule 35 (ESTATUTO -> READ DOTCOMA .)


state 183

    (36) ESTATUTO -> RETURN DOTCOMA .

    ID              reduce using rule 36 (ESTATUTO -> RETURN DOTCOMA .)
    ESCRIBE         reduce using rule 36 (ESTATUTO -> RETURN DOTCOMA .)
    LEE             reduce using rule 36 (ESTATUTO -> RETURN DOTCOMA .)
    REGRESA         reduce using rule 36 (ESTATUTO -> RETURN DOTCOMA .)
    SI              reduce using rule 36 (ESTATUTO -> RETURN DOTCOMA .)
    DESDE           reduce using rule 36 (ESTATUTO -> RETURN DOTCOMA .)
    MIENTRAS        reduce using rule 36 (ESTATUTO -> RETURN DOTCOMA .)
    RBRACKET        reduce using rule 36 (ESTATUTO -> RETURN DOTCOMA .)


state 184

    (37) ASIGNACION -> ID ARRDIM . EQUAL r_seen_operator EXPRESION
    (38) ASIGNACION -> ID ARRDIM . EQUAL r_seen_operator CTE_ARR

    EQUAL           shift and go to state 197


state 185

    (93) WRITE -> ESCRIBE LPAREN . WRITE_AUX RPAREN
    (94) WRITE_AUX -> . EXPRESION WRITE_AUXSUB
    (39) EXPRESION -> . SUBEXP r_seen_subexp EXPRESION_AUX
    (43) SUBEXP -> . EXP r_seen_exp SUBEXP_AUX
    (52) EXP -> . TERMINO r_seen_term EXP_AUX
    (56) TERMINO -> . FACTOR r_seen_factor TERMINO_AUX
    (61) FACTOR -> . LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator
    (62) FACTOR -> . PLUS r_seen_unary_operator CTE
    (63) FACTOR -> . MINUS r_seen_unary_operator CTE
    (64) FACTOR -> . NOT r_seen_unary_operator CTE
    (65) FACTOR -> . CTE ARROP
    (66) FACTOR -> . CTE
    (67) CTE -> . CTE_I r_seen_operand
    (68) CTE -> . CTE_F r_seen_operand
    (69) CTE -> . CTE_CH r_seen_operand
    (70) CTE -> . CTE_STRING r_seen_operand
    (71) CTE -> . FUN
    (72) CTE -> . ID ARRDIM
    (76) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 54
    NOT             shift and go to state 55
    CTE_I           shift and go to state 56
    CTE_F           shift and go to state 57
    CTE_CH          shift and go to state 58
    CTE_STRING      shift and go to state 59
    ID              shift and go to state 61

    WRITE_AUX                      shift and go to state 198
    EXPRESION                      shift and go to state 199
    SUBEXP                         shift and go to state 47
    EXP                            shift and go to state 48
    TERMINO                        shift and go to state 49
    FACTOR                         shift and go to state 50
    CTE                            shift and go to state 53
    FUN                            shift and go to state 60

state 186

    (97) READ -> LEE LPAREN . READ_AUX RPAREN
    (98) READ_AUX -> . ID ARRDIM READ_AUXSUB

    ID              shift and go to state 201

    READ_AUX                       shift and go to state 200

state 187

    (101) RETURN -> REGRESA LPAREN . EXPRESION RPAREN
    (102) RETURN -> REGRESA LPAREN . NULL RPAREN
    (39) EXPRESION -> . SUBEXP r_seen_subexp EXPRESION_AUX
    (43) SUBEXP -> . EXP r_seen_exp SUBEXP_AUX
    (52) EXP -> . TERMINO r_seen_term EXP_AUX
    (56) TERMINO -> . FACTOR r_seen_factor TERMINO_AUX
    (61) FACTOR -> . LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator
    (62) FACTOR -> . PLUS r_seen_unary_operator CTE
    (63) FACTOR -> . MINUS r_seen_unary_operator CTE
    (64) FACTOR -> . NOT r_seen_unary_operator CTE
    (65) FACTOR -> . CTE ARROP
    (66) FACTOR -> . CTE
    (67) CTE -> . CTE_I r_seen_operand
    (68) CTE -> . CTE_F r_seen_operand
    (69) CTE -> . CTE_CH r_seen_operand
    (70) CTE -> . CTE_STRING r_seen_operand
    (71) CTE -> . FUN
    (72) CTE -> . ID ARRDIM
    (76) FUN -> . ID LPAREN FUN_AUX RPAREN

    NULL            shift and go to state 203
    LPAREN          shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 54
    NOT             shift and go to state 55
    CTE_I           shift and go to state 56
    CTE_F           shift and go to state 57
    CTE_CH          shift and go to state 58
    CTE_STRING      shift and go to state 59
    ID              shift and go to state 61

    EXPRESION                      shift and go to state 202
    SUBEXP                         shift and go to state 47
    EXP                            shift and go to state 48
    TERMINO                        shift and go to state 49
    FACTOR                         shift and go to state 50
    CTE                            shift and go to state 53
    FUN                            shift and go to state 60

state 188

    (83) IF -> SI LPAREN . EXPRESION RPAREN ENTONCES BLOQUE IF_AUX
    (84) IF -> SI LPAREN . EXPRESION RPAREN ENTONCES COND
    (39) EXPRESION -> . SUBEXP r_seen_subexp EXPRESION_AUX
    (43) SUBEXP -> . EXP r_seen_exp SUBEXP_AUX
    (52) EXP -> . TERMINO r_seen_term EXP_AUX
    (56) TERMINO -> . FACTOR r_seen_factor TERMINO_AUX
    (61) FACTOR -> . LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator
    (62) FACTOR -> . PLUS r_seen_unary_operator CTE
    (63) FACTOR -> . MINUS r_seen_unary_operator CTE
    (64) FACTOR -> . NOT r_seen_unary_operator CTE
    (65) FACTOR -> . CTE ARROP
    (66) FACTOR -> . CTE
    (67) CTE -> . CTE_I r_seen_operand
    (68) CTE -> . CTE_F r_seen_operand
    (69) CTE -> . CTE_CH r_seen_operand
    (70) CTE -> . CTE_STRING r_seen_operand
    (71) CTE -> . FUN
    (72) CTE -> . ID ARRDIM
    (76) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 54
    NOT             shift and go to state 55
    CTE_I           shift and go to state 56
    CTE_F           shift and go to state 57
    CTE_CH          shift and go to state 58
    CTE_STRING      shift and go to state 59
    ID              shift and go to state 61

    EXPRESION                      shift and go to state 204
    SUBEXP                         shift and go to state 47
    EXP                            shift and go to state 48
    TERMINO                        shift and go to state 49
    FACTOR                         shift and go to state 50
    CTE                            shift and go to state 53
    FUN                            shift and go to state 60

state 189

    (91) FOR -> DESDE ASIGNACION . HASTA EXPRESION HACER BLOQUE
    (92) FOR -> DESDE ASIGNACION . HASTA EXPRESION HACER COND

    HASTA           shift and go to state 205


state 190

    (37) ASIGNACION -> ID . ARRDIM EQUAL r_seen_operator EXPRESION
    (38) ASIGNACION -> ID . ARRDIM EQUAL r_seen_operator CTE_ARR
    (14) ARRDIM -> . LSTAPLE EXPRESION RSTAPLE
    (15) ARRDIM -> . LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE
    (16) ARRDIM -> . LSTAPLE EXPRESION COMA EXPRESION RSTAPLE
    (17) ARRDIM -> . empty
    (1) empty -> .

    LSTAPLE         shift and go to state 39
    EQUAL           reduce using rule 1 (empty -> .)

    ARRDIM                         shift and go to state 184
    empty                          shift and go to state 40

state 191

    (87) WHILE -> MIENTRAS LPAREN . EXPRESION RPAREN WHILE_AUX BLOQUE
    (88) WHILE -> MIENTRAS LPAREN . EXPRESION RPAREN WHILE_AUX COND
    (39) EXPRESION -> . SUBEXP r_seen_subexp EXPRESION_AUX
    (43) SUBEXP -> . EXP r_seen_exp SUBEXP_AUX
    (52) EXP -> . TERMINO r_seen_term EXP_AUX
    (56) TERMINO -> . FACTOR r_seen_factor TERMINO_AUX
    (61) FACTOR -> . LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator
    (62) FACTOR -> . PLUS r_seen_unary_operator CTE
    (63) FACTOR -> . MINUS r_seen_unary_operator CTE
    (64) FACTOR -> . NOT r_seen_unary_operator CTE
    (65) FACTOR -> . CTE ARROP
    (66) FACTOR -> . CTE
    (67) CTE -> . CTE_I r_seen_operand
    (68) CTE -> . CTE_F r_seen_operand
    (69) CTE -> . CTE_CH r_seen_operand
    (70) CTE -> . CTE_STRING r_seen_operand
    (71) CTE -> . FUN
    (72) CTE -> . ID ARRDIM
    (76) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 54
    NOT             shift and go to state 55
    CTE_I           shift and go to state 56
    CTE_F           shift and go to state 57
    CTE_CH          shift and go to state 58
    CTE_STRING      shift and go to state 59
    ID              shift and go to state 61

    EXPRESION                      shift and go to state 206
    SUBEXP                         shift and go to state 47
    EXP                            shift and go to state 48
    TERMINO                        shift and go to state 49
    FACTOR                         shift and go to state 50
    CTE                            shift and go to state 53
    FUN                            shift and go to state 60

state 192

    (22) PARAM -> TIPO ID r_register_var PARENTESIS . PARAM_AUX
    (23) PARAM_AUX -> . COMA PARAM
    (24) PARAM_AUX -> . empty
    (1) empty -> .

    COMA            shift and go to state 208
    RPAREN          reduce using rule 1 (empty -> .)

    PARAM_AUX                      shift and go to state 207
    empty                          shift and go to state 209

state 193

    (25) PARENTESIS -> LSTAPLE . RSTAPLE
    (26) PARENTESIS -> LSTAPLE . RSTAPLE LSTAPLE RSTAPLE

    RSTAPLE         shift and go to state 210


state 194

    (27) PARENTESIS -> empty .

    COMA            reduce using rule 27 (PARENTESIS -> empty .)
    RPAREN          reduce using rule 27 (PARENTESIS -> empty .)


state 195

    (20) FUNCTION -> FUNCION TIPO ID r_save_func r_register_func LPAREN PARAM RPAREN VARS BLOQUE .

    FUNCION         reduce using rule 20 (FUNCTION -> FUNCION TIPO ID r_save_func r_register_func LPAREN PARAM RPAREN VARS BLOQUE .)
    PRINCIPAL       reduce using rule 20 (FUNCTION -> FUNCION TIPO ID r_save_func r_register_func LPAREN PARAM RPAREN VARS BLOQUE .)


state 196

    (21) FUNCTION -> FUNCION VOID r_save_type ID r_save_func r_register_func LPAREN PARAM RPAREN VARS . BLOQUE
    (28) BLOQUE -> . LBRACKET ESTATUTOS RBRACKET

    LBRACKET        shift and go to state 122

    BLOQUE                         shift and go to state 211

state 197

    (37) ASIGNACION -> ID ARRDIM EQUAL . r_seen_operator EXPRESION
    (38) ASIGNACION -> ID ARRDIM EQUAL . r_seen_operator CTE_ARR
    (118) r_seen_operator -> .

    LBRACKET        reduce using rule 118 (r_seen_operator -> .)
    LPAREN          reduce using rule 118 (r_seen_operator -> .)
    PLUS            reduce using rule 118 (r_seen_operator -> .)
    MINUS           reduce using rule 118 (r_seen_operator -> .)
    NOT             reduce using rule 118 (r_seen_operator -> .)
    CTE_I           reduce using rule 118 (r_seen_operator -> .)
    CTE_F           reduce using rule 118 (r_seen_operator -> .)
    CTE_CH          reduce using rule 118 (r_seen_operator -> .)
    CTE_STRING      reduce using rule 118 (r_seen_operator -> .)
    ID              reduce using rule 118 (r_seen_operator -> .)

    r_seen_operator                shift and go to state 212

state 198

    (93) WRITE -> ESCRIBE LPAREN WRITE_AUX . RPAREN

    RPAREN          shift and go to state 213


state 199

    (94) WRITE_AUX -> EXPRESION . WRITE_AUXSUB
    (95) WRITE_AUXSUB -> . COMA WRITE_AUX
    (96) WRITE_AUXSUB -> . empty
    (1) empty -> .

    COMA            shift and go to state 215
    RPAREN          reduce using rule 1 (empty -> .)

    WRITE_AUXSUB                   shift and go to state 214
    empty                          shift and go to state 216

state 200

    (97) READ -> LEE LPAREN READ_AUX . RPAREN

    RPAREN          shift and go to state 217


state 201

    (98) READ_AUX -> ID . ARRDIM READ_AUXSUB
    (14) ARRDIM -> . LSTAPLE EXPRESION RSTAPLE
    (15) ARRDIM -> . LSTAPLE EXPRESION RSTAPLE LSTAPLE EXPRESION RSTAPLE
    (16) ARRDIM -> . LSTAPLE EXPRESION COMA EXPRESION RSTAPLE
    (17) ARRDIM -> . empty
    (1) empty -> .

    LSTAPLE         shift and go to state 39
    COMA            reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)

    ARRDIM                         shift and go to state 218
    empty                          shift and go to state 40

state 202

    (101) RETURN -> REGRESA LPAREN EXPRESION . RPAREN

    RPAREN          shift and go to state 219


state 203

    (102) RETURN -> REGRESA LPAREN NULL . RPAREN

    RPAREN          shift and go to state 220


state 204

    (83) IF -> SI LPAREN EXPRESION . RPAREN ENTONCES BLOQUE IF_AUX
    (84) IF -> SI LPAREN EXPRESION . RPAREN ENTONCES COND

    RPAREN          shift and go to state 221


state 205

    (91) FOR -> DESDE ASIGNACION HASTA . EXPRESION HACER BLOQUE
    (92) FOR -> DESDE ASIGNACION HASTA . EXPRESION HACER COND
    (39) EXPRESION -> . SUBEXP r_seen_subexp EXPRESION_AUX
    (43) SUBEXP -> . EXP r_seen_exp SUBEXP_AUX
    (52) EXP -> . TERMINO r_seen_term EXP_AUX
    (56) TERMINO -> . FACTOR r_seen_factor TERMINO_AUX
    (61) FACTOR -> . LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator
    (62) FACTOR -> . PLUS r_seen_unary_operator CTE
    (63) FACTOR -> . MINUS r_seen_unary_operator CTE
    (64) FACTOR -> . NOT r_seen_unary_operator CTE
    (65) FACTOR -> . CTE ARROP
    (66) FACTOR -> . CTE
    (67) CTE -> . CTE_I r_seen_operand
    (68) CTE -> . CTE_F r_seen_operand
    (69) CTE -> . CTE_CH r_seen_operand
    (70) CTE -> . CTE_STRING r_seen_operand
    (71) CTE -> . FUN
    (72) CTE -> . ID ARRDIM
    (76) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 54
    NOT             shift and go to state 55
    CTE_I           shift and go to state 56
    CTE_F           shift and go to state 57
    CTE_CH          shift and go to state 58
    CTE_STRING      shift and go to state 59
    ID              shift and go to state 61

    EXPRESION                      shift and go to state 222
    SUBEXP                         shift and go to state 47
    EXP                            shift and go to state 48
    TERMINO                        shift and go to state 49
    FACTOR                         shift and go to state 50
    CTE                            shift and go to state 53
    FUN                            shift and go to state 60

state 206

    (87) WHILE -> MIENTRAS LPAREN EXPRESION . RPAREN WHILE_AUX BLOQUE
    (88) WHILE -> MIENTRAS LPAREN EXPRESION . RPAREN WHILE_AUX COND

    RPAREN          shift and go to state 223


state 207

    (22) PARAM -> TIPO ID r_register_var PARENTESIS PARAM_AUX .

    RPAREN          reduce using rule 22 (PARAM -> TIPO ID r_register_var PARENTESIS PARAM_AUX .)


state 208

    (23) PARAM_AUX -> COMA . PARAM
    (22) PARAM -> . TIPO ID r_register_var PARENTESIS PARAM_AUX
    (8) TIPO -> . INT r_save_type
    (9) TIPO -> . FLOAT r_save_type
    (10) TIPO -> . CHAR r_save_type
    (11) TIPO -> . STRING r_save_type

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18

    PARAM                          shift and go to state 224
    TIPO                           shift and go to state 87

state 209

    (24) PARAM_AUX -> empty .

    RPAREN          reduce using rule 24 (PARAM_AUX -> empty .)


state 210

    (25) PARENTESIS -> LSTAPLE RSTAPLE .
    (26) PARENTESIS -> LSTAPLE RSTAPLE . LSTAPLE RSTAPLE

    COMA            reduce using rule 25 (PARENTESIS -> LSTAPLE RSTAPLE .)
    RPAREN          reduce using rule 25 (PARENTESIS -> LSTAPLE RSTAPLE .)
    LSTAPLE         shift and go to state 225


state 211

    (21) FUNCTION -> FUNCION VOID r_save_type ID r_save_func r_register_func LPAREN PARAM RPAREN VARS BLOQUE .

    FUNCION         reduce using rule 21 (FUNCTION -> FUNCION VOID r_save_type ID r_save_func r_register_func LPAREN PARAM RPAREN VARS BLOQUE .)
    PRINCIPAL       reduce using rule 21 (FUNCTION -> FUNCION VOID r_save_type ID r_save_func r_register_func LPAREN PARAM RPAREN VARS BLOQUE .)


state 212

    (37) ASIGNACION -> ID ARRDIM EQUAL r_seen_operator . EXPRESION
    (38) ASIGNACION -> ID ARRDIM EQUAL r_seen_operator . CTE_ARR
    (39) EXPRESION -> . SUBEXP r_seen_subexp EXPRESION_AUX
    (103) CTE_ARR -> . LBRACKET CTE_ARR_AUX RBRACKET
    (104) CTE_ARR -> . LBRACKET CTE_ARR_AUX2 RBRACKET
    (43) SUBEXP -> . EXP r_seen_exp SUBEXP_AUX
    (52) EXP -> . TERMINO r_seen_term EXP_AUX
    (56) TERMINO -> . FACTOR r_seen_factor TERMINO_AUX
    (61) FACTOR -> . LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator
    (62) FACTOR -> . PLUS r_seen_unary_operator CTE
    (63) FACTOR -> . MINUS r_seen_unary_operator CTE
    (64) FACTOR -> . NOT r_seen_unary_operator CTE
    (65) FACTOR -> . CTE ARROP
    (66) FACTOR -> . CTE
    (67) CTE -> . CTE_I r_seen_operand
    (68) CTE -> . CTE_F r_seen_operand
    (69) CTE -> . CTE_CH r_seen_operand
    (70) CTE -> . CTE_STRING r_seen_operand
    (71) CTE -> . FUN
    (72) CTE -> . ID ARRDIM
    (76) FUN -> . ID LPAREN FUN_AUX RPAREN

    LBRACKET        shift and go to state 228
    LPAREN          shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 54
    NOT             shift and go to state 55
    CTE_I           shift and go to state 56
    CTE_F           shift and go to state 57
    CTE_CH          shift and go to state 58
    CTE_STRING      shift and go to state 59
    ID              shift and go to state 61

    EXPRESION                      shift and go to state 226
    CTE_ARR                        shift and go to state 227
    SUBEXP                         shift and go to state 47
    EXP                            shift and go to state 48
    TERMINO                        shift and go to state 49
    FACTOR                         shift and go to state 50
    CTE                            shift and go to state 53
    FUN                            shift and go to state 60

state 213

    (93) WRITE -> ESCRIBE LPAREN WRITE_AUX RPAREN .

    DOTCOMA         reduce using rule 93 (WRITE -> ESCRIBE LPAREN WRITE_AUX RPAREN .)


state 214

    (94) WRITE_AUX -> EXPRESION WRITE_AUXSUB .

    RPAREN          reduce using rule 94 (WRITE_AUX -> EXPRESION WRITE_AUXSUB .)


state 215

    (95) WRITE_AUXSUB -> COMA . WRITE_AUX
    (94) WRITE_AUX -> . EXPRESION WRITE_AUXSUB
    (39) EXPRESION -> . SUBEXP r_seen_subexp EXPRESION_AUX
    (43) SUBEXP -> . EXP r_seen_exp SUBEXP_AUX
    (52) EXP -> . TERMINO r_seen_term EXP_AUX
    (56) TERMINO -> . FACTOR r_seen_factor TERMINO_AUX
    (61) FACTOR -> . LPAREN r_seen_operator EXPRESION RPAREN r_seen_operator
    (62) FACTOR -> . PLUS r_seen_unary_operator CTE
    (63) FACTOR -> . MINUS r_seen_unary_operator CTE
    (64) FACTOR -> . NOT r_seen_unary_operator CTE
    (65) FACTOR -> . CTE ARROP
    (66) FACTOR -> . CTE
    (67) CTE -> . CTE_I r_seen_operand
    (68) CTE -> . CTE_F r_seen_operand
    (69) CTE -> . CTE_CH r_seen_operand
    (70) CTE -> . CTE_STRING r_seen_operand
    (71) CTE -> . FUN
    (72) CTE -> . ID ARRDIM
    (76) FUN -> . ID LPAREN FUN_AUX RPAREN

    LPAREN          shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 54
    NOT             shift and go to state 55
    CTE_I           shift and go to state 56
    CTE_F           shift and go to state 57
    CTE_CH          shift and go to state 58
    CTE_STRING      shift and go to state 59
    ID              shift and go to state 61

    WRITE_AUX                      shift and go to state 229
    EXPRESION                      shift and go to state 199
    SUBEXP                         shift and go to state 47
    EXP                            shift and go to state 48
    TERMINO                        shift and go to state 49
    FACTOR                         shift and go to state 50
    CTE                            shift and go to state 53
    FUN                            shift and go to state 60

state 216

    (96) WRITE_AUXSUB -> empty .

    RPAREN          reduce using rule 96 (WRITE_AUXSUB -> empty .)


state 217

    (97) READ -> LEE LPAREN READ_AUX RPAREN .

    DOTCOMA         reduce using rule 97 (READ -> LEE LPAREN READ_AUX RPAREN .)


state 218

    (98) READ_AUX -> ID ARRDIM . READ_AUXSUB
    (99) READ_AUXSUB -> . COMA READ_AUX
    (100) READ_AUXSUB -> . empty
    (1) empty -> .

    COMA            shift and go to state 231
    RPAREN          reduce using rule 1 (empty -> .)

    READ_AUXSUB                    shift and go to state 230
    empty                          shift and go to state 232

state 219

    (101) RETURN -> REGRESA LPAREN EXPRESION RPAREN .

    DOTCOMA         reduce using rule 101 (RETURN -> REGRESA LPAREN EXPRESION RPAREN .)


state 220

    (102) RETURN -> REGRESA LPAREN NULL RPAREN .

    DOTCOMA         reduce using rule 102 (RETURN -> REGRESA LPAREN NULL RPAREN .)


state 221

    (83) IF -> SI LPAREN EXPRESION RPAREN . ENTONCES BLOQUE IF_AUX
    (84) IF -> SI LPAREN EXPRESION RPAREN . ENTONCES COND

    ENTONCES        shift and go to state 233


state 222

    (91) FOR -> DESDE ASIGNACION HASTA EXPRESION . HACER BLOQUE
    (92) FOR -> DESDE ASIGNACION HASTA EXPRESION . HACER COND

    HACER           shift and go to state 234


state 223

    (87) WHILE -> MIENTRAS LPAREN EXPRESION RPAREN . WHILE_AUX BLOQUE
    (88) WHILE -> MIENTRAS LPAREN EXPRESION RPAREN . WHILE_AUX COND
    (89) WHILE_AUX -> . HAZ
    (90) WHILE_AUX -> . empty
    (1) empty -> .

    HAZ             shift and go to state 236
    LBRACKET        reduce using rule 1 (empty -> .)
    SI              reduce using rule 1 (empty -> .)
    DESDE           reduce using rule 1 (empty -> .)
    MIENTRAS        reduce using rule 1 (empty -> .)

    WHILE_AUX                      shift and go to state 235
    empty                          shift and go to state 237

state 224

    (23) PARAM_AUX -> COMA PARAM .

    RPAREN          reduce using rule 23 (PARAM_AUX -> COMA PARAM .)


state 225

    (26) PARENTESIS -> LSTAPLE RSTAPLE LSTAPLE . RSTAPLE

    RSTAPLE         shift and go to state 238


state 226

    (37) ASIGNACION -> ID ARRDIM EQUAL r_seen_operator EXPRESION .

    DOTCOMA         reduce using rule 37 (ASIGNACION -> ID ARRDIM EQUAL r_seen_operator EXPRESION .)
    HASTA           reduce using rule 37 (ASIGNACION -> ID ARRDIM EQUAL r_seen_operator EXPRESION .)


state 227

    (38) ASIGNACION -> ID ARRDIM EQUAL r_seen_operator CTE_ARR .

    DOTCOMA         reduce using rule 38 (ASIGNACION -> ID ARRDIM EQUAL r_seen_operator CTE_ARR .)
    HASTA           reduce using rule 38 (ASIGNACION -> ID ARRDIM EQUAL r_seen_operator CTE_ARR .)


state 228

    (103) CTE_ARR -> LBRACKET . CTE_ARR_AUX RBRACKET
    (104) CTE_ARR -> LBRACKET . CTE_ARR_AUX2 RBRACKET
    (105) CTE_ARR_AUX -> . CTE
    (106) CTE_ARR_AUX -> . CTE_ARR_AUXSUB
    (109) CTE_ARR_AUX2 -> . LBRACKET CTE_ARR_AUX RBRACKET CTE_ARR_AUX2SUB
    (67) CTE -> . CTE_I r_seen_operand
    (68) CTE -> . CTE_F r_seen_operand
    (69) CTE -> . CTE_CH r_seen_operand
    (70) CTE -> . CTE_STRING r_seen_operand
    (71) CTE -> . FUN
    (72) CTE -> . ID ARRDIM
    (107) CTE_ARR_AUXSUB -> . COMA CTE_ARR_AUX
    (108) CTE_ARR_AUXSUB -> . empty
    (76) FUN -> . ID LPAREN FUN_AUX RPAREN
    (1) empty -> .

    LBRACKET        shift and go to state 239
    CTE_I           shift and go to state 56
    CTE_F           shift and go to state 57
    CTE_CH          shift and go to state 58
    CTE_STRING      shift and go to state 59
    ID              shift and go to state 61
    COMA            shift and go to state 244
    RBRACKET        reduce using rule 1 (empty -> .)

    CTE_ARR_AUX                    shift and go to state 240
    CTE_ARR_AUX2                   shift and go to state 241
    CTE                            shift and go to state 242
    CTE_ARR_AUXSUB                 shift and go to state 243
    FUN                            shift and go to state 60
    empty                          shift and go to state 245

state 229

    (95) WRITE_AUXSUB -> COMA WRITE_AUX .

    RPAREN          reduce using rule 95 (WRITE_AUXSUB -> COMA WRITE_AUX .)


state 230

    (98) READ_AUX -> ID ARRDIM READ_AUXSUB .

    RPAREN          reduce using rule 98 (READ_AUX -> ID ARRDIM READ_AUXSUB .)


state 231

    (99) READ_AUXSUB -> COMA . READ_AUX
    (98) READ_AUX -> . ID ARRDIM READ_AUXSUB

    ID              shift and go to state 201

    READ_AUX                       shift and go to state 246

state 232

    (100) READ_AUXSUB -> empty .

    RPAREN          reduce using rule 100 (READ_AUXSUB -> empty .)


state 233

    (83) IF -> SI LPAREN EXPRESION RPAREN ENTONCES . BLOQUE IF_AUX
    (84) IF -> SI LPAREN EXPRESION RPAREN ENTONCES . COND
    (28) BLOQUE -> . LBRACKET ESTATUTOS RBRACKET
    (80) COND -> . IF
    (81) COND -> . FOR
    (82) COND -> . WHILE
    (83) IF -> . SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX
    (84) IF -> . SI LPAREN EXPRESION RPAREN ENTONCES COND
    (91) FOR -> . DESDE ASIGNACION HASTA EXPRESION HACER BLOQUE
    (92) FOR -> . DESDE ASIGNACION HASTA EXPRESION HACER COND
    (87) WHILE -> . MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE
    (88) WHILE -> . MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX COND

    LBRACKET        shift and go to state 122
    SI              shift and go to state 161
    DESDE           shift and go to state 162
    MIENTRAS        shift and go to state 163

    BLOQUE                         shift and go to state 247
    COND                           shift and go to state 248
    IF                             shift and go to state 155
    FOR                            shift and go to state 156
    WHILE                          shift and go to state 157

state 234

    (91) FOR -> DESDE ASIGNACION HASTA EXPRESION HACER . BLOQUE
    (92) FOR -> DESDE ASIGNACION HASTA EXPRESION HACER . COND
    (28) BLOQUE -> . LBRACKET ESTATUTOS RBRACKET
    (80) COND -> . IF
    (81) COND -> . FOR
    (82) COND -> . WHILE
    (83) IF -> . SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX
    (84) IF -> . SI LPAREN EXPRESION RPAREN ENTONCES COND
    (91) FOR -> . DESDE ASIGNACION HASTA EXPRESION HACER BLOQUE
    (92) FOR -> . DESDE ASIGNACION HASTA EXPRESION HACER COND
    (87) WHILE -> . MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE
    (88) WHILE -> . MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX COND

    LBRACKET        shift and go to state 122
    SI              shift and go to state 161
    DESDE           shift and go to state 162
    MIENTRAS        shift and go to state 163

    BLOQUE                         shift and go to state 249
    COND                           shift and go to state 250
    IF                             shift and go to state 155
    FOR                            shift and go to state 156
    WHILE                          shift and go to state 157

state 235

    (87) WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX . BLOQUE
    (88) WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX . COND
    (28) BLOQUE -> . LBRACKET ESTATUTOS RBRACKET
    (80) COND -> . IF
    (81) COND -> . FOR
    (82) COND -> . WHILE
    (83) IF -> . SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX
    (84) IF -> . SI LPAREN EXPRESION RPAREN ENTONCES COND
    (91) FOR -> . DESDE ASIGNACION HASTA EXPRESION HACER BLOQUE
    (92) FOR -> . DESDE ASIGNACION HASTA EXPRESION HACER COND
    (87) WHILE -> . MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE
    (88) WHILE -> . MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX COND

    LBRACKET        shift and go to state 122
    SI              shift and go to state 161
    DESDE           shift and go to state 162
    MIENTRAS        shift and go to state 163

    BLOQUE                         shift and go to state 251
    COND                           shift and go to state 252
    IF                             shift and go to state 155
    FOR                            shift and go to state 156
    WHILE                          shift and go to state 157

state 236

    (89) WHILE_AUX -> HAZ .

    LBRACKET        reduce using rule 89 (WHILE_AUX -> HAZ .)
    SI              reduce using rule 89 (WHILE_AUX -> HAZ .)
    DESDE           reduce using rule 89 (WHILE_AUX -> HAZ .)
    MIENTRAS        reduce using rule 89 (WHILE_AUX -> HAZ .)


state 237

    (90) WHILE_AUX -> empty .

    LBRACKET        reduce using rule 90 (WHILE_AUX -> empty .)
    SI              reduce using rule 90 (WHILE_AUX -> empty .)
    DESDE           reduce using rule 90 (WHILE_AUX -> empty .)
    MIENTRAS        reduce using rule 90 (WHILE_AUX -> empty .)


state 238

    (26) PARENTESIS -> LSTAPLE RSTAPLE LSTAPLE RSTAPLE .

    COMA            reduce using rule 26 (PARENTESIS -> LSTAPLE RSTAPLE LSTAPLE RSTAPLE .)
    RPAREN          reduce using rule 26 (PARENTESIS -> LSTAPLE RSTAPLE LSTAPLE RSTAPLE .)


state 239

    (109) CTE_ARR_AUX2 -> LBRACKET . CTE_ARR_AUX RBRACKET CTE_ARR_AUX2SUB
    (105) CTE_ARR_AUX -> . CTE
    (106) CTE_ARR_AUX -> . CTE_ARR_AUXSUB
    (67) CTE -> . CTE_I r_seen_operand
    (68) CTE -> . CTE_F r_seen_operand
    (69) CTE -> . CTE_CH r_seen_operand
    (70) CTE -> . CTE_STRING r_seen_operand
    (71) CTE -> . FUN
    (72) CTE -> . ID ARRDIM
    (107) CTE_ARR_AUXSUB -> . COMA CTE_ARR_AUX
    (108) CTE_ARR_AUXSUB -> . empty
    (76) FUN -> . ID LPAREN FUN_AUX RPAREN
    (1) empty -> .

    CTE_I           shift and go to state 56
    CTE_F           shift and go to state 57
    CTE_CH          shift and go to state 58
    CTE_STRING      shift and go to state 59
    ID              shift and go to state 61
    COMA            shift and go to state 244
    RBRACKET        reduce using rule 1 (empty -> .)

    CTE_ARR_AUX                    shift and go to state 253
    CTE                            shift and go to state 242
    CTE_ARR_AUXSUB                 shift and go to state 243
    FUN                            shift and go to state 60
    empty                          shift and go to state 245

state 240

    (103) CTE_ARR -> LBRACKET CTE_ARR_AUX . RBRACKET

    RBRACKET        shift and go to state 254


state 241

    (104) CTE_ARR -> LBRACKET CTE_ARR_AUX2 . RBRACKET

    RBRACKET        shift and go to state 255


state 242

    (105) CTE_ARR_AUX -> CTE .

    RBRACKET        reduce using rule 105 (CTE_ARR_AUX -> CTE .)


state 243

    (106) CTE_ARR_AUX -> CTE_ARR_AUXSUB .

    RBRACKET        reduce using rule 106 (CTE_ARR_AUX -> CTE_ARR_AUXSUB .)


state 244

    (107) CTE_ARR_AUXSUB -> COMA . CTE_ARR_AUX
    (105) CTE_ARR_AUX -> . CTE
    (106) CTE_ARR_AUX -> . CTE_ARR_AUXSUB
    (67) CTE -> . CTE_I r_seen_operand
    (68) CTE -> . CTE_F r_seen_operand
    (69) CTE -> . CTE_CH r_seen_operand
    (70) CTE -> . CTE_STRING r_seen_operand
    (71) CTE -> . FUN
    (72) CTE -> . ID ARRDIM
    (107) CTE_ARR_AUXSUB -> . COMA CTE_ARR_AUX
    (108) CTE_ARR_AUXSUB -> . empty
    (76) FUN -> . ID LPAREN FUN_AUX RPAREN
    (1) empty -> .

    CTE_I           shift and go to state 56
    CTE_F           shift and go to state 57
    CTE_CH          shift and go to state 58
    CTE_STRING      shift and go to state 59
    ID              shift and go to state 61
    COMA            shift and go to state 244
    RBRACKET        reduce using rule 1 (empty -> .)

    CTE_ARR_AUX                    shift and go to state 256
    CTE                            shift and go to state 242
    CTE_ARR_AUXSUB                 shift and go to state 243
    FUN                            shift and go to state 60
    empty                          shift and go to state 245

state 245

    (108) CTE_ARR_AUXSUB -> empty .

    RBRACKET        reduce using rule 108 (CTE_ARR_AUXSUB -> empty .)


state 246

    (99) READ_AUXSUB -> COMA READ_AUX .

    RPAREN          reduce using rule 99 (READ_AUXSUB -> COMA READ_AUX .)


state 247

    (83) IF -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE . IF_AUX
    (85) IF_AUX -> . SINO BLOQUE
    (86) IF_AUX -> . empty
    (1) empty -> .

    SINO            shift and go to state 258
    ID              reduce using rule 1 (empty -> .)
    ESCRIBE         reduce using rule 1 (empty -> .)
    LEE             reduce using rule 1 (empty -> .)
    REGRESA         reduce using rule 1 (empty -> .)
    SI              reduce using rule 1 (empty -> .)
    DESDE           reduce using rule 1 (empty -> .)
    MIENTRAS        reduce using rule 1 (empty -> .)
    RBRACKET        reduce using rule 1 (empty -> .)

    IF_AUX                         shift and go to state 257
    empty                          shift and go to state 259

state 248

    (84) IF -> SI LPAREN EXPRESION RPAREN ENTONCES COND .

    ID              reduce using rule 84 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES COND .)
    ESCRIBE         reduce using rule 84 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES COND .)
    LEE             reduce using rule 84 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES COND .)
    REGRESA         reduce using rule 84 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES COND .)
    SI              reduce using rule 84 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES COND .)
    DESDE           reduce using rule 84 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES COND .)
    MIENTRAS        reduce using rule 84 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES COND .)
    RBRACKET        reduce using rule 84 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES COND .)


state 249

    (91) FOR -> DESDE ASIGNACION HASTA EXPRESION HACER BLOQUE .

    ID              reduce using rule 91 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER BLOQUE .)
    ESCRIBE         reduce using rule 91 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER BLOQUE .)
    LEE             reduce using rule 91 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER BLOQUE .)
    REGRESA         reduce using rule 91 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER BLOQUE .)
    SI              reduce using rule 91 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER BLOQUE .)
    DESDE           reduce using rule 91 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER BLOQUE .)
    MIENTRAS        reduce using rule 91 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER BLOQUE .)
    RBRACKET        reduce using rule 91 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER BLOQUE .)


state 250

    (92) FOR -> DESDE ASIGNACION HASTA EXPRESION HACER COND .

    ID              reduce using rule 92 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER COND .)
    ESCRIBE         reduce using rule 92 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER COND .)
    LEE             reduce using rule 92 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER COND .)
    REGRESA         reduce using rule 92 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER COND .)
    SI              reduce using rule 92 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER COND .)
    DESDE           reduce using rule 92 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER COND .)
    MIENTRAS        reduce using rule 92 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER COND .)
    RBRACKET        reduce using rule 92 (FOR -> DESDE ASIGNACION HASTA EXPRESION HACER COND .)


state 251

    (87) WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE .

    ID              reduce using rule 87 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE .)
    ESCRIBE         reduce using rule 87 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE .)
    LEE             reduce using rule 87 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE .)
    REGRESA         reduce using rule 87 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE .)
    SI              reduce using rule 87 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE .)
    DESDE           reduce using rule 87 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE .)
    MIENTRAS        reduce using rule 87 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE .)
    RBRACKET        reduce using rule 87 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX BLOQUE .)


state 252

    (88) WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX COND .

    ID              reduce using rule 88 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX COND .)
    ESCRIBE         reduce using rule 88 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX COND .)
    LEE             reduce using rule 88 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX COND .)
    REGRESA         reduce using rule 88 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX COND .)
    SI              reduce using rule 88 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX COND .)
    DESDE           reduce using rule 88 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX COND .)
    MIENTRAS        reduce using rule 88 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX COND .)
    RBRACKET        reduce using rule 88 (WHILE -> MIENTRAS LPAREN EXPRESION RPAREN WHILE_AUX COND .)


state 253

    (109) CTE_ARR_AUX2 -> LBRACKET CTE_ARR_AUX . RBRACKET CTE_ARR_AUX2SUB

    RBRACKET        shift and go to state 260


state 254

    (103) CTE_ARR -> LBRACKET CTE_ARR_AUX RBRACKET .

    DOTCOMA         reduce using rule 103 (CTE_ARR -> LBRACKET CTE_ARR_AUX RBRACKET .)
    HASTA           reduce using rule 103 (CTE_ARR -> LBRACKET CTE_ARR_AUX RBRACKET .)


state 255

    (104) CTE_ARR -> LBRACKET CTE_ARR_AUX2 RBRACKET .

    DOTCOMA         reduce using rule 104 (CTE_ARR -> LBRACKET CTE_ARR_AUX2 RBRACKET .)
    HASTA           reduce using rule 104 (CTE_ARR -> LBRACKET CTE_ARR_AUX2 RBRACKET .)


state 256

    (107) CTE_ARR_AUXSUB -> COMA CTE_ARR_AUX .

    RBRACKET        reduce using rule 107 (CTE_ARR_AUXSUB -> COMA CTE_ARR_AUX .)


state 257

    (83) IF -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX .

    ID              reduce using rule 83 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX .)
    ESCRIBE         reduce using rule 83 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX .)
    LEE             reduce using rule 83 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX .)
    REGRESA         reduce using rule 83 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX .)
    SI              reduce using rule 83 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX .)
    DESDE           reduce using rule 83 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX .)
    MIENTRAS        reduce using rule 83 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX .)
    RBRACKET        reduce using rule 83 (IF -> SI LPAREN EXPRESION RPAREN ENTONCES BLOQUE IF_AUX .)


state 258

    (85) IF_AUX -> SINO . BLOQUE
    (28) BLOQUE -> . LBRACKET ESTATUTOS RBRACKET

    LBRACKET        shift and go to state 122

    BLOQUE                         shift and go to state 261

state 259

    (86) IF_AUX -> empty .

    ID              reduce using rule 86 (IF_AUX -> empty .)
    ESCRIBE         reduce using rule 86 (IF_AUX -> empty .)
    LEE             reduce using rule 86 (IF_AUX -> empty .)
    REGRESA         reduce using rule 86 (IF_AUX -> empty .)
    SI              reduce using rule 86 (IF_AUX -> empty .)
    DESDE           reduce using rule 86 (IF_AUX -> empty .)
    MIENTRAS        reduce using rule 86 (IF_AUX -> empty .)
    RBRACKET        reduce using rule 86 (IF_AUX -> empty .)


state 260

    (109) CTE_ARR_AUX2 -> LBRACKET CTE_ARR_AUX RBRACKET . CTE_ARR_AUX2SUB
    (110) CTE_ARR_AUX2SUB -> . COMA CTE_ARR_AUX2
    (111) CTE_ARR_AUX2SUB -> . empty
    (1) empty -> .

    COMA            shift and go to state 263
    RBRACKET        reduce using rule 1 (empty -> .)

    CTE_ARR_AUX2SUB                shift and go to state 262
    empty                          shift and go to state 264

state 261

    (85) IF_AUX -> SINO BLOQUE .

    ID              reduce using rule 85 (IF_AUX -> SINO BLOQUE .)
    ESCRIBE         reduce using rule 85 (IF_AUX -> SINO BLOQUE .)
    LEE             reduce using rule 85 (IF_AUX -> SINO BLOQUE .)
    REGRESA         reduce using rule 85 (IF_AUX -> SINO BLOQUE .)
    SI              reduce using rule 85 (IF_AUX -> SINO BLOQUE .)
    DESDE           reduce using rule 85 (IF_AUX -> SINO BLOQUE .)
    MIENTRAS        reduce using rule 85 (IF_AUX -> SINO BLOQUE .)
    RBRACKET        reduce using rule 85 (IF_AUX -> SINO BLOQUE .)


state 262

    (109) CTE_ARR_AUX2 -> LBRACKET CTE_ARR_AUX RBRACKET CTE_ARR_AUX2SUB .

    RBRACKET        reduce using rule 109 (CTE_ARR_AUX2 -> LBRACKET CTE_ARR_AUX RBRACKET CTE_ARR_AUX2SUB .)


state 263

    (110) CTE_ARR_AUX2SUB -> COMA . CTE_ARR_AUX2
    (109) CTE_ARR_AUX2 -> . LBRACKET CTE_ARR_AUX RBRACKET CTE_ARR_AUX2SUB

    LBRACKET        shift and go to state 239

    CTE_ARR_AUX2                   shift and go to state 265

state 264

    (111) CTE_ARR_AUX2SUB -> empty .

    RBRACKET        reduce using rule 111 (CTE_ARR_AUX2SUB -> empty .)


state 265

    (110) CTE_ARR_AUX2SUB -> COMA CTE_ARR_AUX2 .

    RBRACKET        reduce using rule 110 (CTE_ARR_AUX2SUB -> COMA CTE_ARR_AUX2 .)

