Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAMA
Rule 1     empty -> <empty>
Rule 2     PROGRAMA -> PROGRAM
Rule 3     PROGRAMA_AUX -> VARS
Rule 4     PROGRAMA_AUX -> empty
Rule 5     VARS -> VAR VARS_AUX DDOT TIPO DOTCOMA VARS_AUX2
Rule 6     VARS_AUX -> ID COMA VARS_AUX
Rule 7     VARS_AUX -> ID
Rule 8     VARS_AUX2 -> VARS_AUX DDOT TIPO DOTCOMA VARS_AUX2
Rule 9     VARS_AUX2 -> empty
Rule 10    TIPO -> INT
Rule 11    TIPO -> FLOAT
Rule 12    BLOQUE -> LBRACKET ESTATUTO_AUX RBRACKET
Rule 13    ESTATUTO_AUX -> ESTATUTO ESTATUTO_AUX
Rule 14    ESTATUTO_AUX -> empty
Rule 15    ESTATUTO -> ASIGNACION
Rule 16    ESTATUTO -> CONDICION
Rule 17    ESTATUTO -> ESCRITURA
Rule 18    ASIGNACION -> ID EQUALS EXPRESION DDOT
Rule 19    EXPRESION -> EXP EXPRESION_AUX
Rule 20    EXPRESION_AUX -> GREATERT EXP
Rule 21    EXPRESION_AUX -> LESST EXP
Rule 22    EXPRESION_AUX -> GRLESST EXPRESION
Rule 23    EXPRESION_AUX -> empty
Rule 24    CONDICION -> IF LPAREN EXPRESION RPAREN BLOQUE CONDICION_AUX DDOT
Rule 25    CONDICION_AUX -> ELSE BLOQUE
Rule 26    CONDICION_AUX -> empty
Rule 27    ESCRITURA -> PRINT LPAREN ESCRITURA_AUX RPAREN DOTCOMA
Rule 28    ESCRITURA_AUX -> EXPRESION ESCRITURA_AUX2
Rule 29    ESCRITURA_AUX -> CTESTRING ESCRITURA_AUX2
Rule 30    ESCRITURA_AUX2 -> DOT ESCRITURA_AUX
Rule 31    ESCRITURA_AUX2 -> empty
Rule 32    EXP -> TERMINO EXP_AUX
Rule 33    EXP_AUX -> PLUS EXP
Rule 34    EXP_AUX -> MINUS EXP
Rule 35    EXP_AUX -> empty
Rule 36    TERMINO -> FACTOR TERMINO_AUX
Rule 37    TERMINO_AUX -> TIMES TERMINO
Rule 38    TERMINO_AUX -> DIVIDE TERMINO
Rule 39    TERMINO_AUX -> empty
Rule 40    FACTOR -> LPAREN EXPRESION RPAREN
Rule 41    FACTOR -> FACTOR_AUX
Rule 42    FACTOR_AUX -> PLUS VARCTE
Rule 43    FACTOR_AUX -> MINUS VARCTE
Rule 44    FACTOR_AUX -> VARCTE
Rule 45    VARCTE -> ID
Rule 46    VARCTE -> CTEI
Rule 47    VARCTE -> CTEF

Terminals, with rules where they appear

COMA                 : 6
CTEF                 : 47
CTEI                 : 46
CTESTRING            : 29
DDOT                 : 5 8 18 24
DIVIDE               : 38
DOT                  : 30
DOTCOMA              : 5 8 27
ELSE                 : 25
EQUALS               : 18
FLOAT                : 11
GREATERT             : 20
GRLESST              : 22
ID                   : 6 7 18 45
IF                   : 24
INT                  : 10
LBRACKET             : 12
LESST                : 21
LPAREN               : 24 27 40
MINUS                : 34 43
PLUS                 : 33 42
PRINT                : 27
PROGRAM              : 2
RBRACKET             : 12
RPAREN               : 24 27 40
TIMES                : 37
VAR                  : 5
error                : 

Nonterminals, with rules where they appear

ASIGNACION           : 15
BLOQUE               : 24 25
CONDICION            : 16
CONDICION_AUX        : 24
ESCRITURA            : 17
ESCRITURA_AUX        : 27 30
ESCRITURA_AUX2       : 28 29
ESTATUTO             : 13
ESTATUTO_AUX         : 12 13
EXP                  : 19 20 21 33 34
EXPRESION            : 18 22 24 28 40
EXPRESION_AUX        : 19
EXP_AUX              : 32
FACTOR               : 36
FACTOR_AUX           : 41
PROGRAMA             : 0
PROGRAMA_AUX         : 
TERMINO              : 32 37 38
TERMINO_AUX          : 36
TIPO                 : 5 8
VARCTE               : 42 43 44
VARS                 : 3
VARS_AUX             : 5 6 8
VARS_AUX2            : 5 8
empty                : 4 9 14 23 26 31 35 39

Parsing method: LALR

state 0

    (0) S' -> . PROGRAMA
    (2) PROGRAMA -> . PROGRAM

    PROGRAM         shift and go to state 2

    PROGRAMA                       shift and go to state 1

state 1

    (0) S' -> PROGRAMA .



state 2

    (2) PROGRAMA -> PROGRAM .

    $end            reduce using rule 2 (PROGRAMA -> PROGRAM .)

